[{"/home/developer/Wpm/wpm-frontend/src/index.js":"1","/home/developer/Wpm/wpm-frontend/src/reportWebVitals.js":"2","/home/developer/Wpm/wpm-frontend/src/App.js":"3","/home/developer/Wpm/wpm-frontend/src/Store.js":"4","/home/developer/Wpm/wpm-frontend/src/services/login.js":"5","/home/developer/Wpm/wpm-frontend/src/services/data/activityData.js":"6","/home/developer/Wpm/wpm-frontend/src/services/data/ApplicationDetailsData.js":"7","/home/developer/Wpm/wpm-frontend/src/services/data/ApplicationData.js":"8","/home/developer/Wpm/wpm-frontend/src/services/data/documentsData.js":"9","/home/developer/Wpm/wpm-frontend/src/services/data/areaData.js":"10","/home/developer/Wpm/wpm-frontend/src/services/data/FormData.js":"11","/home/developer/Wpm/wpm-frontend/src/services/data/ImageData.js":"12","/home/developer/Wpm/wpm-frontend/src/services/data/gridData.js":"13","/home/developer/Wpm/wpm-frontend/src/services/data/instructionDetailData.js":"14","/home/developer/Wpm/wpm-frontend/src/services/data/locationData.js":"15","/home/developer/Wpm/wpm-frontend/src/services/data/InstructionData.js":"16","/home/developer/Wpm/wpm-frontend/src/services/data/SupervisorsData.js":"17","/home/developer/Wpm/wpm-frontend/src/services/data/WorksheetData.js":"18","/home/developer/Wpm/wpm-frontend/src/services/data/workTypesData.js":"19","/home/developer/Wpm/wpm-frontend/src/services/thunks.js":"20","/home/developer/Wpm/wpm-frontend/src/services/data/orderSummaryData.js":"21","/home/developer/Wpm/wpm-frontend/src/components/import-data/ImportInstructionData.js":"22","/home/developer/Wpm/wpm-frontend/src/components/work-instructions/InstructionList.js":"23","/home/developer/Wpm/wpm-frontend/src/components/work-instructions/InstructionDetail.js":"24","/home/developer/Wpm/wpm-frontend/src/components/activities/ActivityList.js":"25","/home/developer/Wpm/wpm-frontend/src/components/home/Home.js":"26","/home/developer/Wpm/wpm-frontend/src/components/workload/Workload.js":"27","/home/developer/Wpm/wpm-frontend/src/components/test/Test.js":"28","/home/developer/Wpm/wpm-frontend/src/components/ui-components/InstructionModal.js":"29","/home/developer/Wpm/wpm-frontend/src/components/ui-components/componentsReducer.js":"30","/home/developer/Wpm/wpm-frontend/src/components/locations/LocationList.js":"31","/home/developer/Wpm/wpm-frontend/src/components/worksheets/WorkProgressTable.js":"32","/home/developer/Wpm/wpm-frontend/src/components/applications/ApplicationsSummary.js":"33","/home/developer/Wpm/wpm-frontend/src/components/applications/ApplicationDetail.js":"34","/home/developer/Wpm/wpm-frontend/src/components/dashboard/Dashboard.js":"35","/home/developer/Wpm/wpm-frontend/src/components/navigation/NavDrawer.js":"36","/home/developer/Wpm/wpm-frontend/src/services/axiosApi.js":"37","/home/developer/Wpm/wpm-frontend/src/components/applications/ApplicationLocations.js":"38","/home/developer/Wpm/wpm-frontend/src/components/applications/ApplicationInstructionsList.js":"39","/home/developer/Wpm/wpm-frontend/src/components/applications/ApplicationBillItems.js":"40","/home/developer/Wpm/wpm-frontend/src/components/applications/AvailableOrderList.js":"41","/home/developer/Wpm/wpm-frontend/src/components/ui-components/Buttons.js":"42","/home/developer/Wpm/wpm-frontend/src/components/applications/AvailableWorksheetsList.js":"43","/home/developer/Wpm/wpm-frontend/src/components/ui-components/CommercialCard.js":"44","/home/developer/Wpm/wpm-frontend/src/components/work-instructions/InstructionSummary.js":"45","/home/developer/Wpm/wpm-frontend/src/services/selectors.js":"46","/home/developer/Wpm/wpm-frontend/src/components/worksheets/WorksheetForm.js":"47","/home/developer/Wpm/wpm-frontend/src/components/locations/LocationForm.js":"48","/home/developer/Wpm/wpm-frontend/src/components/grid/SimpleEditor.js":"49","/home/developer/Wpm/wpm-frontend/src/components/grid/CustomNoRowsOverlay2.js":"50","/home/developer/Wpm/wpm-frontend/src/components/grid/CustomLoadingOverlay.js":"51","/home/developer/Wpm/wpm-frontend/src/components/work-instructions/InstructionForm.js":"52","/home/developer/Wpm/wpm-frontend/src/components/images/LocationImages.js":"53","/home/developer/Wpm/wpm-frontend/src/components/images/ImageForm.js":"54","/home/developer/Wpm/wpm-frontend/src/components/images/ApplicationImages.js":"55","/home/developer/Wpm/wpm-frontend/src/components/grid/CustomNoRowsOverlay.js":"56","/home/developer/Wpm/wpm-frontend/src/components/ui-components/SummaryCard.js":"57","/home/developer/Wpm/wpm-frontend/src/components/test/TestTableCube.js":"58","/home/developer/Wpm/wpm-frontend/src/components/workload/WorkloadCharts.js":"59","/home/developer/Wpm/wpm-frontend/src/components/ui-components/WpmLogo.js":"60","/home/developer/Wpm/wpm-frontend/src/components/workload/WorkloadSummary.js":"61","/home/developer/Wpm/wpm-frontend/src/components/documents/DocumentsList.js":"62","/home/developer/Wpm/wpm-frontend/src/components/documents/DocumentForm.js":"63","/home/developer/Wpm/wpm-frontend/src/components/bill-items/BillItemForm.js":"64","/home/developer/Wpm/wpm-frontend/src/CustomNoRowsOverlay.js":"65","/home/developer/Wpm/wpm-frontend/src/components/charts/WeeklyWorkDoneByArea.js":"66","/home/developer/Wpm/wpm-frontend/src/components/charts/WeeklyWorkDoneBySupervisor.js":"67","/home/developer/Wpm/wpm-frontend/src/components/charts/WeeklyWorkDoneByWorkType.js":"68","/home/developer/Wpm/wpm-frontend/src/components/charts/WeeklyWorkDoneByWorkInstruction.js":"69","/home/developer/Wpm/wpm-frontend/src/components/test/chart-js/AppliedValueByApplication.js":"70","/home/developer/Wpm/wpm-frontend/src/components/test/chart-js/DrillDownTest.js":"71","/home/developer/Wpm/wpm-frontend/src/components/commercial/CommercialSummary.js":"72","/home/developer/Wpm/wpm-frontend/src/components/commercial/AppliedValueByApplication.js":"73","/home/developer/Wpm/wpm-frontend/src/components/commercial/ValueCompleteByWeek.js":"74","/home/developer/Wpm/wpm-frontend/src/components/commercial/ValueCompleteByWorkInstruction.js":"75","/home/developer/Wpm/wpm-frontend/src/components/charts/WeeklyWorkDoneByArea_copy.js":"76","/home/developer/Wpm/wpm-frontend/src/components/charts/WeeklyWorkDoneBySupervisor_copy.js":"77","/home/developer/Wpm/wpm-frontend/src/components/charts/WeeklyWorkDoneByWorkInstruction_copy.js":"78","/home/developer/Wpm/wpm-frontend/src/components/charts/WeeklyWorkDoneByWorkType_copy.js":"79","/home/developer/Wpm/wpm-frontend/src/components/workload/Workload_copy.js":"80","/home/developer/Wpm/wpm-frontend/src/components/workload/WorkloadCharts_copy.js":"81","/home/developer/Wpm/wpm-frontend/src/components/workload/WorkloadSummary_copy.js":"82"},{"size":1814,"mtime":1607089867636,"results":"83","hashOfConfig":"84"},{"size":362,"mtime":1604021041947,"results":"85","hashOfConfig":"84"},{"size":3058,"mtime":1607900506873,"results":"86","hashOfConfig":"84"},{"size":2774,"mtime":1607445926510,"results":"87","hashOfConfig":"84"},{"size":4891,"mtime":1607194099110,"results":"88","hashOfConfig":"84"},{"size":673,"mtime":1606952043414,"results":"89","hashOfConfig":"84"},{"size":2514,"mtime":1607433326992,"results":"90","hashOfConfig":"84"},{"size":1087,"mtime":1607880899261,"results":"91","hashOfConfig":"84"},{"size":1224,"mtime":1606952043466,"results":"92","hashOfConfig":"84"},{"size":1053,"mtime":1606952043434,"results":"93","hashOfConfig":"84"},{"size":567,"mtime":1606952042670,"results":"94","hashOfConfig":"84"},{"size":3303,"mtime":1606952042686,"results":"95","hashOfConfig":"84"},{"size":2067,"mtime":1606952043482,"results":"96","hashOfConfig":"84"},{"size":1869,"mtime":1606952043530,"results":"97","hashOfConfig":"84"},{"size":1669,"mtime":1607895375219,"results":"98","hashOfConfig":"84"},{"size":2371,"mtime":1606952042730,"results":"99","hashOfConfig":"84"},{"size":678,"mtime":1606952042858,"results":"100","hashOfConfig":"84"},{"size":2198,"mtime":1607446443746,"results":"101","hashOfConfig":"84"},{"size":1384,"mtime":1606952043590,"results":"102","hashOfConfig":"84"},{"size":13365,"mtime":1607882109661,"results":"103","hashOfConfig":"84"},{"size":2080,"mtime":1607396074702,"results":"104","hashOfConfig":"84"},{"size":5589,"mtime":1606952042518,"results":"105","hashOfConfig":"84"},{"size":4974,"mtime":1607452797381,"results":"106","hashOfConfig":"84"},{"size":4157,"mtime":1607149710159,"results":"107","hashOfConfig":"84"},{"size":4045,"mtime":1606952041842,"results":"108","hashOfConfig":"84"},{"size":357,"mtime":1606952042502,"results":"109","hashOfConfig":"84"},{"size":6322,"mtime":1607906640998,"results":"110","hashOfConfig":"84"},{"size":423,"mtime":1607913563800,"results":"111","hashOfConfig":"84"},{"size":2169,"mtime":1607143224423,"results":"112","hashOfConfig":"84"},{"size":619,"mtime":1606952042566,"results":"113","hashOfConfig":"84"},{"size":6746,"mtime":1607898030373,"results":"114","hashOfConfig":"84"},{"size":5040,"mtime":1607892298224,"results":"115","hashOfConfig":"84"},{"size":3075,"mtime":1607884120375,"results":"116","hashOfConfig":"84"},{"size":2575,"mtime":1607884142423,"results":"117","hashOfConfig":"84"},{"size":169,"mtime":1606981565457,"results":"118","hashOfConfig":"84"},{"size":34962,"mtime":1607900584240,"results":"119","hashOfConfig":"84"},{"size":2699,"mtime":1607627457914,"results":"120","hashOfConfig":"84"},{"size":4733,"mtime":1607887735631,"results":"121","hashOfConfig":"84"},{"size":3109,"mtime":1607887755455,"results":"122","hashOfConfig":"84"},{"size":3676,"mtime":1607885797901,"results":"123","hashOfConfig":"84"},{"size":4207,"mtime":1607886129013,"results":"124","hashOfConfig":"84"},{"size":2190,"mtime":1606201699417,"results":"125","hashOfConfig":"84"},{"size":3536,"mtime":1607886286359,"results":"126","hashOfConfig":"84"},{"size":2013,"mtime":1607436826112,"results":"127","hashOfConfig":"84"},{"size":3823,"mtime":1607398263734,"results":"128","hashOfConfig":"84"},{"size":10776,"mtime":1607435111329,"results":"129","hashOfConfig":"84"},{"size":5888,"mtime":1607444054405,"results":"130","hashOfConfig":"84"},{"size":3513,"mtime":1607115796543,"results":"131","hashOfConfig":"84"},{"size":501,"mtime":1606952042490,"results":"132","hashOfConfig":"84"},{"size":186,"mtime":1606952042474,"results":"133","hashOfConfig":"84"},{"size":209,"mtime":1606952042442,"results":"134","hashOfConfig":"84"},{"size":9486,"mtime":1607136604032,"results":"135","hashOfConfig":"84"},{"size":1968,"mtime":1607139259180,"results":"136","hashOfConfig":"84"},{"size":4267,"mtime":1606952042514,"results":"137","hashOfConfig":"84"},{"size":1854,"mtime":1606952042514,"results":"138","hashOfConfig":"84"},{"size":179,"mtime":1606952042458,"results":"139","hashOfConfig":"84"},{"size":1070,"mtime":1607436846708,"results":"140","hashOfConfig":"84"},{"size":2137,"mtime":1607665486451,"results":"141","hashOfConfig":"84"},{"size":948,"mtime":1607912884282,"results":"142","hashOfConfig":"84"},{"size":416,"mtime":1606952042546,"results":"143","hashOfConfig":"84"},{"size":5830,"mtime":1607884469059,"results":"144","hashOfConfig":"84"},{"size":898,"mtime":1607138174494,"results":"145","hashOfConfig":"84"},{"size":2827,"mtime":1607138325557,"results":"146","hashOfConfig":"84"},{"size":13694,"mtime":1607157826463,"results":"147","hashOfConfig":"84"},{"size":199,"mtime":1604011936000,"results":"148","hashOfConfig":"84"},{"size":1652,"mtime":1606979951727,"results":"149","hashOfConfig":"84"},{"size":1596,"mtime":1606979996851,"results":"150","hashOfConfig":"84"},{"size":1551,"mtime":1606980019220,"results":"151","hashOfConfig":"84"},{"size":1598,"mtime":1606980012840,"results":"152","hashOfConfig":"84"},{"size":2207,"mtime":1607665481831,"results":"153","hashOfConfig":"84"},{"size":1286,"mtime":1607679196794,"results":"154","hashOfConfig":"84"},{"size":1325,"mtime":1607905776474,"results":"155","hashOfConfig":"84"},{"size":1749,"mtime":1607904944844,"results":"156","hashOfConfig":"84"},{"size":2077,"mtime":1607905935768,"results":"157","hashOfConfig":"84"},{"size":1961,"mtime":1607905002404,"results":"158","hashOfConfig":"84"},{"size":2944,"mtime":1607910493198,"results":"159","hashOfConfig":"84"},{"size":2953,"mtime":1607911596141,"results":"160","hashOfConfig":"84"},{"size":3037,"mtime":1607912432133,"results":"161","hashOfConfig":"84"},{"size":3028,"mtime":1607912808295,"results":"162","hashOfConfig":"84"},{"size":9022,"mtime":1608051975870,"results":"163","hashOfConfig":"84"},{"size":968,"mtime":1607912865272,"results":"164","hashOfConfig":"84"},{"size":5830,"mtime":1607913421645,"results":"165","hashOfConfig":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"18vxi0l",{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"168"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"168"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"168"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"168"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"168"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"168"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"168"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"168"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"168"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"168"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"168"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"168"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"168"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"168"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"168"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"168"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"168"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"168"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"168"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"168"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"168"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"168"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"168"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"316","usedDeprecatedRules":"168"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"168"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"168"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"168"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"168"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"168"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"168"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"168"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"168"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"168"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"168"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"168"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"168"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"168"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"168"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"168"},"/home/developer/Wpm/wpm-frontend/src/index.js",[],["369","370"],"/home/developer/Wpm/wpm-frontend/src/reportWebVitals.js",[],"/home/developer/Wpm/wpm-frontend/src/App.js",[],"/home/developer/Wpm/wpm-frontend/src/Store.js",["371"],"import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport logger from \"redux-logger\";\nimport { reducer as modal } from \"redux-modal\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport thunk from 'redux-thunk';\nimport storage from \"redux-persist/lib/storage\";\nimport { ExcelSlice } from \"./components/import-data/ImportInstructionData\";\nimport componentsReducer from \"./components/ui-components/componentsReducer\";\nimport ActivitiesReducer from \"./services/data/activityData\";\nimport ApplicationsReducer from \"./services/data/ApplicationData\";\nimport ApplicationDetails from \"./services/data/ApplicationDetailsData\";\nimport AreasReducer from \"./services/data/areaData\";\nimport DocumentsReducer from \"./services/data/documentsData\";\nimport formDataReducer from \"./services/data/FormData\";\nimport gridReducer, { SelectedRowSlice } from \"./services/data/gridData\";\nimport ImagesReducer from \"./services/data/ImageData\";\nimport {workInstructionsSlice, availableInstructionSlice} from \"./services/data/InstructionData\";\nimport InstructionDetailSlice from \"./services/data/instructionDetailData\";\nimport LocationsReducer from \"./services/data/locationData\";\nimport { SupervisorsSlice } from \"./services/data/SupervisorsData\";\nimport { AvailableWorksheetSlice, RecentWorksheetSlice }from \"./services/data/WorksheetData\";\nimport WorkTypeReducer from \"./services/data/workTypesData\";\nimport { InstructionHeaderSlice } from \"./services/thunks\";\nimport {OrderSummaryInfoSlice} from \"./services/data/orderSummaryData\";\n\n\nconst rootReducer = combineReducers({\n\tworkInstructions:workInstructionsSlice.reducer,\n\tactivities: ActivitiesReducer,\n\tlocations: LocationsReducer,\n\tinstructionDetails: InstructionDetailSlice,\n\tworkTypes: WorkTypeReducer,\n\timages: ImagesReducer,\n\tareas: AreasReducer,\n\tdocuments: DocumentsReducer,\n\tform: formDataReducer,\n\tcomponents: componentsReducer,\n\tmodal,\n\tgridData: gridReducer,\n\torderSummaryData: OrderSummaryInfoSlice.reducer,\n\teditedRow: SelectedRowSlice.reducer,\n\tsupervisors: SupervisorsSlice.reducer,\n\tapplications: ApplicationsReducer,\n\tworksheetsAvailable: AvailableWorksheetSlice.reducer,\n\tworksheetsRecent: RecentWorksheetSlice.reducer,\n\texcelData: ExcelSlice.reducer,\n\tapplicationDetail: ApplicationDetails,\n\tavailableInstructions: availableInstructionSlice.reducer,\n\n});\n\nconst persistConfig = { // configuration object for redux-persist\n\tkey: \"root\",\n\tstorage, // define which storage to use\n\tblacklist: [\"worksheetsRecent\", \"gridData\", \"editedRow\"]\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n\treducer: persistedReducer,\n\tmiddleware: [thunk, logger]\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };","/home/developer/Wpm/wpm-frontend/src/services/login.js",[],"/home/developer/Wpm/wpm-frontend/src/services/data/activityData.js",[],"/home/developer/Wpm/wpm-frontend/src/services/data/ApplicationDetailsData.js",[],"/home/developer/Wpm/wpm-frontend/src/services/data/ApplicationData.js",[],"/home/developer/Wpm/wpm-frontend/src/services/data/documentsData.js",["372","373","374"],"import { createAsyncThunk, createEntityAdapter, createSlice, } from \"@reduxjs/toolkit\";\nimport axiosInstance from \"../axiosApi\";\nimport { fetchDocuments, updateDocument, fetchOrderSummaryInfo } from \"../thunks\";\n\n\n\nexport const documentsAdapter = createEntityAdapter();\n\nconst initialState = documentsAdapter.getInitialState();\n\nconst documentsSlice = createSlice({\n\tname: \"documents\",\n\tinitialState,\n\treducers: {\n\t\tremoveDocument: documentsAdapter.removeOne,\n\t\tresetDocuments: documentsAdapter.removeAll,\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder.addCase(fetchOrderSummaryInfo.fulfilled, ((state, action) => {\n\t\t\treturn documentsAdapter.setAll(state, action.payload.Document);\n\t\t}));\n\t\tbuilder.addCase(updateDocument.fulfilled, (state, {payload}) => {\n\t\t\tconst {id, ...changes} = payload;\n\t\t\tdocumentsAdapter.updateOne(state, {id, changes});\n\t\t});\n\t},\n});\n\nexport const {removeDocument, resetDocuments} = documentsSlice.actions;\n\nexport const {\n\tselectById: selectDocumentById,\n\tselectIds: selectDocumentIds,\n\tselectEntities: selectDocumentEntities,\n\tselectAll: selectAllDocuments,\n\tselectTotal: selectTotalDocuments,\n} = documentsAdapter.getSelectors((state) => state.documents);\nexport default documentsSlice.reducer;\n","/home/developer/Wpm/wpm-frontend/src/services/data/areaData.js",["375","376"],"import { createAsyncThunk, createEntityAdapter, createSlice, } from \"@reduxjs/toolkit\";\nimport axiosInstance from \"../axiosApi\";\nimport { fetchAreas, updateArea } from \"../thunks\";\n\n\n\nexport const areasAdapter = createEntityAdapter({\n\tsortComparer: (a, b) => a[\"area_code\"].localeCompare(b[\"area_code\"]),\n});\n\nconst initialState = areasAdapter.getInitialState();\n\nconst areaSlice = createSlice({\n\tname: \"areas\",\n\tinitialState,\n\treducers: {\n\t\tremoveDocument: areasAdapter.removeOne,\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder.addCase(fetchAreas.fulfilled, areasAdapter.upsertMany);\n\t\tbuilder.addCase(updateArea.fulfilled, (state, {payload}) => {\n\t\t\tconst {id, ...changes} = payload;\n\t\t\tareasAdapter.updateOne(state, {id, changes});\n\t\t});\n\t},\n});\n\nexport const {removeArea} = areaSlice.actions;\n\nexport const {\n\tselectById: selectAreaById,\n\tselectIds: selectAreaIds,\n\tselectEntities: selectAreaEntities,\n\tselectAll: selectAllAreas,\n\tselectTotal: selectTotalAreas,\n} = areasAdapter.getSelectors((state) => state.areas);\nexport default areaSlice.reducer;\n","/home/developer/Wpm/wpm-frontend/src/services/data/FormData.js",[],"/home/developer/Wpm/wpm-frontend/src/services/data/ImageData.js",[],"/home/developer/Wpm/wpm-frontend/src/services/data/gridData.js",[],"/home/developer/Wpm/wpm-frontend/src/services/data/instructionDetailData.js",["377","378","379"],"import {\n  createAsyncThunk,\n  createEntityAdapter,\n  createSlice,\n} from \"@reduxjs/toolkit\";\nimport axiosInstance from \"../axiosApi\";\nimport {\n  deleteInstructionDetail,\n  fetchOrderSummaryInfo,\n  newInstructionDetail,\n  updateInstructionDetail,\n  fetchAppItems,\n  fetchAppInstructions,\n  createBulkBillItems,\n} from \"../thunks\";\n\nexport const instructionDetailAdapter = createEntityAdapter();\n\nconst initialState = instructionDetailAdapter.getInitialState();\n\nexport const InstructionDetailSlice = createSlice({\n  name: \"instructionDetail\",\n  initialState,\n  reducers: {\n    resetInstructionDetails: instructionDetailAdapter.removeAll,\n    updateGridOrderItem: instructionDetailAdapter.upsertOne,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchOrderSummaryInfo.fulfilled, (state, action) => {\n      return instructionDetailAdapter.setAll(state, action.payload.OrderDetail);\n    });\n    builder.addCase(\n      updateInstructionDetail.fulfilled,\n      instructionDetailAdapter.upsertOne\n    );\n    builder.addCase(\n      newInstructionDetail.fulfilled,\n      instructionDetailAdapter.addOne\n    );\n    builder.addCase(\n      deleteInstructionDetail.fulfilled,\n      instructionDetailAdapter.removeOne\n    );\n    builder.addCase(fetchAppItems.fulfilled, instructionDetailAdapter.setAll);\n    builder.addCase(createBulkBillItems.fulfilled, instructionDetailAdapter.upsertMany);\n  },\n});\n\nexport const {\n  selectById: selectInstructionDetailById,\n  selectIds: selectInstructionDetailIds,\n  selectEntities: selectInstructionDetailEntities,\n  selectAll: selectAllInstructionDetails,\n  selectTotal: selectTotalInstructionDetails,\n} = instructionDetailAdapter.getSelectors((state) => state.instructionDetails);\n\nexport const {\n  resetInstructionDetails,\n  updateGridOrderItem,\n} = InstructionDetailSlice.actions;\n\nexport default InstructionDetailSlice.reducer;\n","/home/developer/Wpm/wpm-frontend/src/services/data/locationData.js",[],"/home/developer/Wpm/wpm-frontend/src/services/data/InstructionData.js",[],"/home/developer/Wpm/wpm-frontend/src/services/data/SupervisorsData.js",[],"/home/developer/Wpm/wpm-frontend/src/services/data/WorksheetData.js",[],"/home/developer/Wpm/wpm-frontend/src/services/data/workTypesData.js",[],"/home/developer/Wpm/wpm-frontend/src/services/thunks.js",["380","381","382","383","384"],"import {\n  createAsyncThunk,\n  createEntityAdapter,\n  createSlice,\n} from \"@reduxjs/toolkit\";\nimport moment from \"moment\";\nimport axiosInstance from \"./axiosApi\";\n\nfunction toFixed(number, decimals) {\n  var x = Math.pow(10, Number(decimals) + 1);\n  return (Number(number) + 1 / x).toFixed(decimals);\n}\n\nexport const fetchActivities = createAsyncThunk(\n  \"activities/fetchAll\",\n  async () => {\n    const activities = await axiosInstance.get(\"/wpm/api/activity/\");\n    return activities.data;\n  }\n);\n\nexport const fetchOrderSummaryInfo = createAsyncThunk(\n  \"orderSummary/fetchAll\",\n  async (orderId) => {\n    const orderSummary = await axiosInstance.get(\n      `/wpm/orders/summary/${orderId}`\n    );\n\n    return orderSummary.data;\n  }\n);\n\nexport const fetchSupervisors = createAsyncThunk(\n  \"supervisors/fetchAll\",\n  async () => {\n    const supervisors = await axiosInstance.get(`/wpm/api/supervisors/`);\n\n    return supervisors.data;\n  }\n);\n\nexport const fetchAppInstructions = createAsyncThunk(\n  \"appInstructions/fetchAll\",\n  async (appNumber) => {\n    const appInstructions = await axiosInstance.get(\n      `/wpm/api/orderheader/?orderdetail__worksheet__application_number=${appNumber}`\n    );\n    return appInstructions.data;\n  }\n);\n\nexport const fetchWorkInstructions = createAsyncThunk(\n  \"workInstructions/fetchAll\",\n  async () => {\n    const headers = await axiosInstance.get(\"/wpm/api/orderheader/\");\n\n    return headers.data;\n  }\n);\n\nexport const updateWorkInstruction = createAsyncThunk(\n  \"workInstructions/upsertOne\",\n  async (apiObject) => {\n    const response = await axiosInstance.patch(\n      `/wpm/api/orderheader/${apiObject.id}/`,\n      apiObject\n    );\n    return response.data;\n  }\n);\n\nexport const newWorkInstruction = createAsyncThunk(\n  \"workInstructions/addOne\",\n  async (apiObject) => {\n    const response = await axiosInstance.post(\n      `/wpm/api/orderheader/`,\n      apiObject\n    );\n    return { ...response.data, order_value: 0, item_count: 0 };\n  }\n);\n\nexport const deleteWorkInstruction = createAsyncThunk(\n  \"workInstructions/deleteOne\",\n  async (orderId) => {\n    const response = await axiosInstance.delete(\n      `/wpm/api/orderheader/${orderId}/`\n    );\n    return orderId;\n  }\n);\n\nexport const updateInstructionDetail = createAsyncThunk(\n  \"instructionDetail/upsertOne\",\n  async (apiObject) => {\n    const response = await axiosInstance.patch(\n      `/wpm/api/orderdetail/${apiObject.id}/`,\n      apiObject\n    );\n    return response.data;\n  }\n);\n\nexport const newInstructionDetail = createAsyncThunk(\n  \"instructionDetail/addOne\",\n  async (apiObject) => {\n    const response = await axiosInstance.post(\n      `/wpm/api/orderdetail/`,\n      apiObject\n    );\n    return {\n      ...response.data,\n      qty_complete: 0,\n      value_complete: 0,\n      qty_applied: 0,\n      value_applied: 0,\n      qty_os: 0,\n    };\n  }\n);\n\nexport const deleteInstructionDetail = createAsyncThunk(\n  \"instructionDetails/deleteOne\",\n  async (itemId) => {\n    const response = await axiosInstance.delete(\n      `/wpm/api/orderdetail/${itemId}/`\n    );\n    return itemId;\n  }\n);\n\nexport const fetchApplications = createAsyncThunk(\n  \"applications/fetchAll\",\n  async () => {\n    const applications = await axiosInstance.get(\"/wpm/api/applications/\");\n    return applications.data;\n  }\n);\n\nexport const newWorksheet = createAsyncThunk(\n  \"worksheet/addOne\",\n  async (apiObject) => {\n    const response = await axiosInstance.post(\n      `/bulk/api/bulk-worksheets/`,\n      apiObject\n    );\n    return response.data;\n  }\n);\n\nexport const addWorksheetToApplication = createAsyncThunk(\n  \"addToApplication/addOne\",\n  async (worksheet) => {\n    const updatedWorksheet = await axiosInstance.patch(\n      `/wpm/api/worksheet/${worksheet.id}/`,\n      worksheet\n    );\n\n    return updatedWorksheet.data.id;\n  }\n);\n\nexport const updateCurrentApplication = createAsyncThunk(\n  \"updateCurrentApplication/UpdateOne\",\n  async (application) => {\n    const response = await axiosInstance.patch(\n      `/wpm/api/applications/${application.id}/`,\n      application\n    );\n    return response.data;\n  }\n);\n\nexport const addBulkWorksheetToApplication = createAsyncThunk(\n  \"addToApplication/addMany\",\n  async (worksheet) => {\n    const updatedBulkWorksheets = await axiosInstance.put(\n      `/bulk/bulk-worksheets`,\n      worksheet\n    );\n    return updatedBulkWorksheets.data.map((item) => item.id);\n  }\n);\n\nexport const fetchAreas = createAsyncThunk(\"areas/fetchAll\", async () => {\n  const response = await axiosInstance.get(\"/wpm/api/areas/\");\n  return response.data;\n});\n\nexport const updateArea = createAsyncThunk(\"area/updateOne\", async (arg) => {\n  const response = await axiosInstance.put(`/wpm/api/areas/${arg}`);\n  return response.data;\n});\n\nexport const fetchDocuments = createAsyncThunk(\n  \"documents/fetchAll\",\n  async () => {\n    const response = await axiosInstance.get(\"/wpm/api/documents/\");\n    return response.data;\n  }\n);\n\nexport const newDocument = createAsyncThunk(\n  \"document/addOne\",\n  async (apiObject) => {\n    const response = await axiosInstance.post(`/wpm/api/documents/`, apiObject);\n    return response.data;\n  }\n);\n\nexport const updateDocument = createAsyncThunk(\n  \"documents/updateOne\",\n  async (arg) => {\n    const response = await axiosInstance.get(`/wpm/api/documents/${arg}`);\n    return response.data;\n  }\n);\n\nexport const updateLocation = createAsyncThunk(\n  \"locations/upsertOne\",\n  async (apiObject) => {\n    const response = await axiosInstance.put(\n      `/wpm/api/sitelocation/${apiObject.id}/`,\n      apiObject\n    );\n    return response.data;\n  }\n);\n\nexport const createBulkLocations = createAsyncThunk(\n  \"locationsBulk/addMany\",\n  async (apiObject) => {\n    const response = await axiosInstance.post(\n      `/bulk/api/bulk-locations/`,\n      apiObject\n    );\n    return response.data;\n  }\n);\n\nexport const createBulkBillItems = createAsyncThunk(\n  \"billItemsBulk/addMany\",\n  async (apiObject) => {\n    const response = await axiosInstance.post(\n      `/bulk/api/bulk-items/`,\n      apiObject\n    );\n    return response.data;\n  }\n);\n\nexport const createLocation = createAsyncThunk(\n  \"locations/addOne\",\n  async (apiObject) => {\n    const response = await axiosInstance.post(\n      `/wpm/api/sitelocation/`,\n      apiObject\n    );\n    const worksheetRef = await {\n      ...response.data,\n      worksheet_ref: `${response.data.work_instruction}/${response.data.id}`,\n    };\n    const responseWithRef = await axiosInstance.patch(\n      `/wpm/api/sitelocation/${worksheetRef.id}/`,\n      worksheetRef\n    );\n    const updatedLocation = await axiosInstance.get(\n      `/wpm/api/sitelocation/${responseWithRef.data.id}`\n    );\n    return updatedLocation.data;\n  }\n);\n\nexport const deleteLocation = createAsyncThunk(\n  \"locations/deleteOne\",\n  async (locationId) => {\n    const response = await axiosInstance.delete(\n      `/wpm/api/sitelocation/${locationId}/`\n    );\n    return locationId;\n  }\n);\n\nexport const fetchAppLocations = createAsyncThunk(\n  \"appLocations/fetchAll\",\n  async (appId) => {\n    const response = await axiosInstance.get(\n      `/wpm/api/sitelocation/?worksheet__application_number=${appId}`\n    );\n    return response.data;\n  }\n);\n\nexport const fetchAppItems = createAsyncThunk(\n  \"appItems/fetchAll\",\n  async (appId) => {\n    const response = await axiosInstance.get(\n      `/wpm/api/orderdetail/?worksheet__application_number=${appId}`\n    );\n    return response.data;\n  }\n);\n\nexport const fetchSelectedImages = createAsyncThunk(\n  \"images/fetchAll\",\n  async (selection) => {\n    const response = await axiosInstance.get(\n      `wpm/api/images/?location_in=${selection}`\n    );\n    return response.data;\n  }\n);\n\nexport const fetchSelectedActivities = createAsyncThunk(\n  \"activities/fetchSelected\",\n  async (selection) => {\n    const response = await axiosInstance.get(\n      `wpm/api/activity/?activity_in=${selection}`\n    );\n    return response.data;\n  }\n);\n\nexport const fetchAvailableWorksheets = createAsyncThunk(\n  \"availableWorksheets/fetchAll\",\n  async (search) => {\n    const worksheetData = await axiosInstance.get(\n      `/wpm/api/worksheet/${search}`\n    );\n    return worksheetData.data;\n  }\n);\n\nconst instructionHeaderAdapter = createEntityAdapter();\nconst locationsAdapter = createEntityAdapter();\nconst itemDetailAdapter = createEntityAdapter();\nconst imagesAdapter = createEntityAdapter();\n\nexport const InstructionHeaderSlice = createSlice({\n  name: \"test\",\n  initialState: instructionHeaderAdapter.getInitialState(),\n  extraReducers: (builder) => {\n    builder.addCase(fetchOrderSummaryInfo.fulfilled, (state, action) => {\n      return instructionHeaderAdapter.setAll(state, action.payload.OrderHeader);\n    });\n  },\n});\n\nexport const {\n  selectAll: selectAllInstructionHeaders,\n} = instructionHeaderAdapter.getSelectors((state) => state.instructionHeader);\n\nexport const LocationsSlice = createSlice({\n  name: \"test\",\n  initialState: locationsAdapter.getInitialState(),\n  extraReducers: (builder) => {\n    builder.addCase(fetchOrderSummaryInfo.fulfilled, (state, action) => {\n      return locationsAdapter.setAll(state, action.payload.SiteLocation);\n    });\n  },\n});\n\nexport const InstructionDetailDataSlice = createSlice({\n  name: \"test\",\n  initialState: itemDetailAdapter.getInitialState(),\n  extraReducers: (builder) => {\n    builder.addCase(fetchOrderSummaryInfo.fulfilled, (state, action) => {\n      return itemDetailAdapter.setAll(state, action.payload.OrderDetail);\n    });\n  },\n});\n\nexport const ImagesSlice = createSlice({\n  name: \"test\",\n  initialState: imagesAdapter.getInitialState(),\n  extraReducers: (builder) => {\n    builder.addCase(fetchOrderSummaryInfo.fulfilled, (state, action) => {\n      return imagesAdapter.setAll(state, action.payload.Image);\n    });\n  },\n});\n\nexport const fetchCurrentApplication = createAsyncThunk(\n  \"currentApplication/fetchOne\",\n  async () => {\n    const currentApp = await axiosInstance.get(\n      \"/wpm/commercial/applications/current\"\n    );\n    return currentApp.data[0];\n  }\n);\n\nexport const closeApplication = createAsyncThunk(\n  \"application/Close&Create\",\n  async () => {\n    const currentApp = await axiosInstance.get(\n      \"/wpm/commercial/applications/current\"\n    );\n    const closedApp = await axiosInstance.put(\n      `/wpm/api/applications/${currentApp.data[0].id}/`,\n      {\n        ...currentApp.data[0],\n        app_current: false,\n        app_open: false,\n      }\n    );\n    const lastAppDate = moment(closedApp.data.app_date)\n      .add(7, \"days\")\n      .format(\"YYYY-MM-DD\");\n    const newApp = {\n      app_number: closedApp.data.app_number + 1,\n      app_date: lastAppDate,\n      app_ref: `Application ${closedApp.data.app_number + 1} `,\n      app_open: true,\n      app_current: true,\n    };\n\n    const response = await axiosInstance.post(`/wpm/api/applications/`, newApp);\n    const applications = await axiosInstance.get(\"/wpm/api/applications/\");\n    return applications.data;\n  }\n);\n\nexport const fetchAppDetails = createAsyncThunk(\n  \"applicationDetails/fetchAll\",\n  async (appId) => {\n    const response = await axiosInstance.get(\n      `wpm/commercial/application/detail/${appId}`\n    );\n    return response.data;\n  }\n);\n\nexport const fetchWeeklyWorksheets = createAsyncThunk(\n  \"weeklyWorksheets/fetchAll\",\n  async (date) => {\n    const response = await axiosInstance.get(\n      `wpm/api/worksheet/?iso_week=${date.week}&&iso_year=${date.year}`\n    );\n    return response.data;\n  }\n);\n\nexport const fetchRecentWorksheets = createAsyncThunk(\n  \"worksheets/fetchAll\",\n  async (date) => {\n    const response = await axiosInstance.get(\n      `wpm/api/worksheet/?work_done_week_gte=${date}`\n    );\n    return response.data;\n  }\n);\n\nexport const fetchWorkDoneWeeks = createAsyncThunk(\n  \"weekNumbers/fetchAll\",\n  async (date) => {\n    const response = await axiosInstance.get(`wpm/orders/workload/weeks`);\n    return response.data;\n  }\n);\n\nexport const fetchAvailableInstructions = createAsyncThunk(\n  \"availableInstructions.fetchAll\",\n  async () => {\n    const response = await axiosInstance.get(\n      `/wpm/orders/work-instructions/available`\n    );\n    return response.data;\n  }\n);\n\nexport const newImage = createAsyncThunk(\"images/addOne\", async (apiObject) => {\n  const response = await axiosInstance.post(`/wpm/api/images/`, apiObject);\n  return response.data;\n});\n\nexport const submitApplicationData = createAsyncThunk(\n  \"applications/saveOne\",\n  async (apiObject) => {\n    const header = await axiosInstance.patch(\n      `wpm/api/applications/${apiObject.application_id}/`,\n      { app_submitted: apiObject.app_submitted }\n    );\n    const response = await axiosInstance.patch(\n      `wpm/api/applications/${header.data.id}/`,\n      {\n        submission_detail: {\n          ...apiObject.submission_detail,\n          header: header.data,\n        },\n      }\n    );\n    return response.data;\n  }\n);\n\nexport const updateAppStatus = createAsyncThunk(\n  \"applications/changeStatus\",\n  async (id) => {\n    const response = await axiosInstance.patch(`wpm/api/applications/${id}/`, {\n      app_submitted: true,\n    });\n    return response.data;\n  }\n);\n\nexport const fetchSavedApplicationDetail = createAsyncThunk(\n  \"applications/fetchOne\",\n  async (id) => {\n    const response = await axiosInstance.get(\n      `wpm/api/submitted-applications/?application_id=${id}`\n    );\n    return response.data;\n  }\n);\n","/home/developer/Wpm/wpm-frontend/src/services/data/orderSummaryData.js",[],"/home/developer/Wpm/wpm-frontend/src/components/import-data/ImportInstructionData.js",["385","386","387","388","389"],"import { createSlice } from \"@reduxjs/toolkit\";\nimport React, { useRef, useState } from \"react\";\nimport { ExcelRenderer, OutTable } from \"react-excel-renderer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectAllActivities } from \"../../services/data/activityData\";\nimport { selectAllLocations } from \"../../services/data/locationData\";\nimport { createBulkBillItems, createBulkLocations, fetchSelectedActivities, } from \"../../services/thunks\";\n\nexport const ExcelSlice = createSlice({\n\tname: \"ExcelImport\",\n\tinitialState: {rows: [], cols: [], poles: []},\n\treducers: {\n\t\tsetImportedData: (state, action) => {\n\t\t\tstate.rows = action.payload.rows;\n\t\t\tstate.cols = action.payload.cols;\n\t\t},\n\t},\n});\n\nexport const {setImportedData} = ExcelSlice.actions;\n\nconst numFormat = (num) => {\n\treturn num.toLocaleString(undefined, {\n\t\tminimumFractionDigits: 2,\n\t\tmaximumFractionDigits: 2,\n\t});\n};\n\nconst ImportInstructionData = () => {\n\tconst dispatch = useDispatch();\n\tconst [data, setData] = useState({rows: [], cols: []});\n\tconst importDraft = useSelector((state) => state.excelData);\n\tconst activities = useSelector(selectAllActivities);\n\tconst workInstruction = useSelector(\n\t\t(state) => state.gridData.selectedRow.work_instruction\n\t);\n\tconst locations = useSelector(selectAllLocations);\n\n\tconst rowsRef = useRef([]);\n\t//const apiObject = useSelector(createApiObject);\n\n\tconst fileHandler = (event) => {\n\t\tlet fileObj = event.target.files[0];\n\t\t//just pass the fileObj as parameter\n\t\tExcelRenderer(fileObj, (err, resp) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t} else {\n\t\t\t\tresp.rows.shift();\n\t\t\t\tdispatch(setImportedData({rows: resp.rows, cols: resp.cols}));\n\t\t\t\tconst uniqueActivities = [...new Set(resp.rows.map((item) => item[3]))];\n\t\t\t\tconsole.log(uniqueActivities);\n\t\t\t\tdispatch(fetchSelectedActivities(uniqueActivities));\n\t\t\t}\n\t\t});\n\t};\n\n\tconst createLocations = () => {\n\t\tlet newLocations = [];\n\t\tconst uniqueLocations = [\n\t\t\t...new Set(importDraft.rows.map((item) => item[0])),\n\t\t];\n\t\tuniqueLocations.forEach((value) => {\n\t\t\tnewLocations.push({\n\t\t\t\tlocation_ref: value,\n\t\t\t\tlocation_description: value,\n\t\t\t\twork_instruction: workInstruction,\n\t\t\t});\n\t\t\t//dispatch(createLocation({location_ref: value, location_description: value, work_instruction: workInstruction}));\n\t\t});\n\t\tdispatch(createBulkLocations(newLocations));\n\t};\n\n\tconst createItems = () => {\n\t\tlet newBillItems = [];\n\t\timportDraft.rows.forEach((item) => {\n\t\t\tconst imported_activity_code = item[3];\n\t\t\tconst imported_qty = item[6];\n\t\t\tconst imported_materials = item[5];\n\t\t\tconst imported_item_type = item[2];\n\t\t\tconst imported_pack_number = item[4];\n\t\t\tconst imported_item_number = item[1];\n\t\t\tconst matched_activity = activities.filter(\n\t\t\t\t(obj) => obj.activity_code === imported_activity_code\n\t\t\t);\n\n\t\t\tlet container = {};\n\t\t\tconst labourBase = parseFloat(\n\t\t\t\tmatched_activity.map((item) => item.labour_base)[0] * imported_qty\n\t\t\t);\n\t\t\tconst labourUplift = parseFloat(\n\t\t\t\tmatched_activity.map((item) => item.labour_uplift)[0] * imported_qty\n\t\t\t);\n\t\t\tconst labourTotal = labourBase + labourUplift;\n\t\t\tconst materialsTotalExclOtherMaterials = parseFloat(\n\t\t\t\timported_materials * 1.05\n\t\t\t);\n\t\t\tconst materialsOther = parseFloat(\n\t\t\t\tmatched_activity.map((item) => item.materials_other)[0] * imported_qty\n\t\t\t);\n\t\t\tconst materialsTotalInclOtherMaterials = parseFloat(\n\t\t\t\tmaterialsTotalExclOtherMaterials + materialsOther\n\t\t\t);\n\t\t\tconst unitMaterialsPayable = parseFloat(\n\t\t\t\tmaterialsTotalInclOtherMaterials / imported_qty\n\t\t\t);\n\t\t\tconst totalPayable = parseFloat(\n\t\t\t\tmaterialsTotalInclOtherMaterials + labourTotal\n\t\t\t);\n\t\t\tconst unitTotalPayable = parseFloat(totalPayable / imported_qty);\n\n\t\t\tcontainer.work_instruction = workInstruction;\n\t\t\tcontainer.location_ref = locations.filter(\n\t\t\t\t(obj) => obj.location_ref === item[0]\n\t\t\t)[0].id;\n\t\t\tcontainer.item_number = imported_item_number;\n\t\t\tcontainer.item_type = imported_item_type.toUpperCase();\n\t\t\tcontainer.activity_ref = matched_activity.map((item) => item.id)[0];\n\t\t\tcontainer.qty_ordered = imported_qty;\n\n\t\t\tcontainer.labour_base = labourBase.toFixed(2);\n\t\t\tcontainer.labour_uplift = labourUplift.toFixed(2);\n\t\t\tcontainer.labour_total = labourTotal.toFixed(2);\n\t\t\tcontainer.unit_labour_payable = (labourTotal / imported_qty).toFixed(2);\n\t\t\tcontainer.materials_base = imported_materials.toFixed(2);\n\t\t\tcontainer.materials_uplift = (imported_materials * 0.05).toFixed(2);\n\t\t\tcontainer.materials_total_excl_other_materials = materialsTotalExclOtherMaterials.toFixed(\n\t\t\t\t2\n\t\t\t);\n\t\t\tcontainer.materials_other = materialsOther.toFixed(2);\n\t\t\tcontainer.materials_total_incl_other_materials = materialsTotalInclOtherMaterials.toFixed(\n\t\t\t\t2\n\t\t\t);\n\t\t\tcontainer.unit_materials_payable = materialsTotalInclOtherMaterials.toFixed(\n\t\t\t\t2\n\t\t\t);\n\t\t\tcontainer.total_payable = totalPayable.toFixed(2);\n\t\t\tcontainer.unit_total_payable = unitTotalPayable.toFixed(2);\n\t\t\tcontainer.pack_number = imported_pack_number;\n\t\t\tnewBillItems.push(container);\n\t\t});\n\n\t\tdispatch(createBulkBillItems(newBillItems));\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<input type=\"file\" onChange={ fileHandler } style={ {padding: \"10px\"} }/>\n\n\t\t\t<input\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={ createLocations }\n\t\t\t\tstyle={ {padding: \"10px\"} }\n\t\t\t\tvalue=\"CREATE LOCATIONS\"\n\t\t\t/>\n\n\t\t\t<input\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={ createItems }\n\t\t\t\tstyle={ {padding: \"10px\"} }\n\t\t\t\tvalue=\"CREATE ITEMS\"\n\t\t\t/>\n\n\t\t\t<OutTable\n\t\t\t\tdata={ importDraft.rows }\n\t\t\t\tcolumns={ importDraft.cols }\n\t\t\t\ttableClassName=\"ExcelTable2007\"\n\t\t\t\ttableHeaderRowClass=\"heading\"\n\t\t\t/>\n\t\t</div>\n\t);\n};\nexport default ImportInstructionData;\n","/home/developer/Wpm/wpm-frontend/src/components/work-instructions/InstructionList.js",[],"/home/developer/Wpm/wpm-frontend/src/components/work-instructions/InstructionDetail.js",["390","391","392"],"import { AgGridReact } from \"ag-grid-react\";\nimport { ChangeDetectionStrategyType } from \"ag-grid-react/lib/changeDetectionService\";\nimport React, { Fragment, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSelectedBillItem } from \"../../services/data/gridData\";\nimport { selectAllInstructionDetails } from \"../../services/data/instructionDetailData\";\nimport InstructionSummary from \"./InstructionSummary\";\nimport { selectOrderSummaryDetails } from \"../../services/selectors\";\nimport { useEffectOnce } from \"react-use\";\n\nfunction niceNumber(params) {\n  return params.value.toLocaleString(undefined, {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  });\n}\n\nconst InstructionDetail = () => {\n  const orderItems = useSelector(selectOrderSummaryDetails);\n  const [gridApi, setGridApi] = useState();\n  const [, setColumnApi] = useState();\n  const dispatch = useDispatch();\n\n  const gridOptions = {\n    columnDefs: [\n      {\n        headerName: \"Select\",\n        colId: \"select\",\n        checkboxSelection: true,\n        minWidth: 100,\n        valueGetter: function (params) {\n          if (params.data.qty_ordered - params.data.qty_complete === 0) {\n            return \"Complete\";\n          } else if (params.data.qty_complete > 0.0) {\n            return \"In Progress\";\n          }\n        },\n        filter: false,\n      },\n      { headerName: \"Item Ref\", field: \"item_number\", sort: \"desc\", flex: 1 },\n      { headerName: \"Item Type\", field: \"item_type\", flex: 1 },\n      { headerName: \"Location\", field: \"site_location\", minWidth: 250 },\n      {\n        headerName: \"Qty Ordered\",\n        field: \"qty_ordered\",\n        type: \"numericColumn\",\n        valueFormatter: niceNumber,\n      },\n      { headerName: \"Activity Code\", field: \"activity_code\" },\n      {\n        headerName: \"Activity Description\",\n        field: \"activity_description\",\n        minWidth: 400,\n      },\n      {\n        headerName: \"Total Payable\",\n        field: \"total_payable\",\n        valueFormatter: niceNumber,\n        type: \"numericColumn\",\n        flex: 2,\n      },\n      {\n        headerName: \"Qty Complete\",\n        field: \"qty_complete\",\n        type: \"numericColumn\",\n        valueFormatter: niceNumber,\n      },\n      {\n        headerName: \"Value Complete\",\n        field: \"value_complete\",\n        valueFormatter: niceNumber,\n        type: \"numericColumn\",\n      },\n      {\n        headerName: \"Qty Applied For\",\n        field: \"qty_applied\",\n        type: \"numericColumn\",\n        valueFormatter: niceNumber,\n      },\n      {\n        headerName: \"Value Applied For\",\n        field: \"value_applied\",\n        valueFormatter: niceNumber,\n        type: \"numericColumn\",\n      },\n    ],\n\n    defaultColDef: {\n      filter: true,\n      sortable: true,\n      resizable: true,\n      flex: true,\n    },\n\n    pagination: true,\n    paginationPageSize: 20,\n    rowSelection: \"single\",\n    domLayout: \"autoHeight\",\n    onRowSelected: rowSelected,\n    isRowSelectable: function (rowNode) {\n      const { qty_complete } = rowNode.data;\n      return rowNode.data ? qty_complete === 0 : true;\n    },\n  };\n\n  const onGridReady = (params) => {\n    setGridApi(params.api);\n    setColumnApi(params.columnApi);\n    params.api.sizeColumnsToFit();\n    \n  };\n\n  function rowSelected(event) {\n    if (event.node.selected) {\n      dispatch(setSelectedBillItem(event.data));\n    }\n  }\n\n  return (\n    <Fragment>\n      <Container fluid>\n        <InstructionSummary />\n        <div className=\"grid-title\">ORDER DETAIL LISTING:</div>\n        <hr />\n        <div className=\"ag-theme-custom-react\">\n          <AgGridReact\n            gridOptions={gridOptions}\n            rowData={orderItems}\n            immuntableData={true}\n            getRowNodeId={(data) => data.id}\n            onGridReady={onGridReady}\n            onGridSizeChanged={(params) => params.api.sizeColumnsToFit()}\n            rowDataChangeDetectionStrategy={\n              ChangeDetectionStrategyType.IdentityCheck\n            }\n          />\n        </div>\n      </Container>\n    </Fragment>\n  );\n};\nexport default InstructionDetail;\n","/home/developer/Wpm/wpm-frontend/src/components/activities/ActivityList.js",[],"/home/developer/Wpm/wpm-frontend/src/components/home/Home.js",[],"/home/developer/Wpm/wpm-frontend/src/components/workload/Workload.js",["393"],"import Grid from \"@material-ui/core/Grid\";\nimport Slide from \"@material-ui/core/Slide\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { useConfirm } from \"material-ui-confirm\";\nimport React, { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Loader from \"react-loader-spinner\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffectOnce } from \"react-use\";\nimport {\n  removeAllRecentWorksheets,\n  selectAllRecentWorksheets,\n} from \"../../services/data/WorksheetData\";\nimport {\n  fetchWeeklyWorksheets,\n  fetchWorkDoneWeeks,\n} from \"../../services/thunks\";\nimport { BlueButton } from \"../ui-components/Buttons\";\nimport WorkLoadCharts from \"./WorkloadCharts\";\nimport WorkloadSummary from \"./WorkloadSummary\";\nimport moment from \"moment\";\nimport { Divider } from \"@react-md/divider\";\n\nfunction getFirstDateOfWeek(w, y) {\n  let date = new Date(y, 0, 1 + (w - 1) * 7); // Elle's method\n  date.setDate(date.getDate() + (1 - date.getDay())); // 0 - Sunday, 1 - Monday etc\n  return moment(date).startOf(\"isoWeek\").format(\"DD/MM/YYYY\");\n}\n\nconst Workload = (props) => {\n  const dispatch = useDispatch();\n  const [year, setYear] = useState(null);\n  const [week, setWeek] = useState(null);\n  const [workDoneWeeks, setWorkDoneWeeks] = useState([]);\n  const worksheets = useSelector(selectAllRecentWorksheets);\n  const isLoading = useSelector((state) => state.worksheetsRecent.loading);\n  const confirm = useConfirm();\n\n  const numFormatGrid = (value) => {\n    return value.toLocaleString(undefined, {\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    });\n  };\n  useEffectOnce(() => {\n    dispatch(fetchWorkDoneWeeks())\n      .then(unwrapResult)\n      .then((result) => setWorkDoneWeeks(result))\n      .catch((error) => console.log(error));\n    return () => dispatch(removeAllRecentWorksheets());\n  });\n\n  const totalValue = worksheets\n    .map((item) => item.value_complete)\n    .reduce((acc, item) => acc + item, 0);\n\n  const weeks = [\n    ...new Set(\n      workDoneWeeks\n        .filter((obj) => obj[\"iso_year\"] === Number(year))\n        .map((item) => item[\"iso_week\"].toString())\n    ),\n  ].reverse();\n  const years = [\n    ...new Set(workDoneWeeks.map((item) => item[\"iso_year\"].toString())),\n  ]\n    .sort()\n    .reverse();\n\n  const weekCommencingDate = getFirstDateOfWeek(week, year);\n\n  const handleRetrieveData = () => {\n    if (week && year) {\n      dispatch(fetchWeeklyWorksheets({ week: week, year: year }));\n    } else {\n      confirm({\n        title: \"PLEASE SELECT A TIME PERIOD\",\n        confirmationButtonProps: {\n          variant: \"contained\",\n          autoFocus: true,\n        },\n        cancellationButtonProps: {\n          disabled: true,\n          hidden: true,\n        },\n        dialogProps: {\n          TransitionComponent: Slide,\n          disableBackdropClick: true,\n        },\n      }).then((r) => console.log(r));\n    }\n  };\n  return (\n    <Container fluid>\n      <WorkloadSummary />\n      <Divider />\n      <Row className=\"justify-content-md-center\">\n        <Col item xs>\n          <Autocomplete\n            options={years}\n            getOptionLabel={(option) => option}\n            onChange={(event, newValue) => {\n              setYear(newValue);\n              setWeek(null);\n            }}\n            onOpen={() => dispatch(removeAllRecentWorksheets())}\n            disableClearable={true}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"filled\"\n                InputLabelProps={{ shrink: true }}\n                label=\"Year\"\n                //margin=\"normal\"\n              />\n            )}\n          />\n        </Col>\n        <Col item xs>\n          <Autocomplete\n            options={weeks}\n            getOptionLabel={(option) => option}\n            onChange={(event, newValue) => {\n              setWeek(newValue);\n            }}\n            disableClearable={true}\n            onOpen={() => dispatch(removeAllRecentWorksheets())}\n            value={week}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"filled\"\n                InputLabelProps={{ shrink: true }}\n                label=\"Week Number\"\n                //margin=\"normal\"\n              />\n            )}\n          />\n        </Col>\n        <Col item xs>\n          <BlueButton\n            onClick={handleRetrieveData}\n            fullWidth\n            style={{ height: 55 }}\n          >\n            RETRIEVE DATA\n          </BlueButton>\n        </Col>\n      </Row>\n      {worksheets.length > 0 && !isLoading && <Divider />}\n\n      {worksheets.length > 0 && !isLoading && (\n        <Row>\n          <Col\n            style={{\n              marginTop: \"10px\",\n              textAlign: \"center\",\n            }}\n          >\n            <h5\n              style={{ fontWeight: \"bold\" }}\n            >{`Week Commencing ${weekCommencingDate}`}</h5>\n          </Col>\n          <Col\n            style={{\n              marginTop: \"10px\",\n              textAlign: \"center\",\n            }}\n          >\n            <h5\n              style={{ fontWeight: \"bold\" }}\n            >{`Week ${week} Year ${year}`}</h5>\n          </Col>\n          <Col\n            style={{\n              marginTop: \"10px\",\n              textAlign: \"center\",\n            }}\n          >\n            <h5 style={{ fontWeight: \"bold\" }}>\n              Weekly Value {numFormatGrid(totalValue)}\n            </h5>\n          </Col>\n        </Row>\n      )}\n      {worksheets.length > 0 && !isLoading && <Divider />}\n      {worksheets.length > 0 && !isLoading && <WorkLoadCharts yearSelection={year} weekSelection={week}/>}\n\n      {!worksheets.length > 0 && !isLoading && (\n        <>\n          <Divider />\n          <h1 style={{ textAlign: \"center\" }}>SELECT A TIME PERIOD</h1>\n          <Divider />\n        </>\n      )}\n      {isLoading && (\n        <>\n          <Divider />\n          <Loader\n            style={{ textAlign: \"center\" }}\n            type={\"Grid\"}\n            color=\"#660066\"\n            height={100}\n            width={100}\n          />\n          <Divider />\n        </>\n      )}\n    </Container>\n  );\n};\nexport default Workload;\n","/home/developer/Wpm/wpm-frontend/src/components/test/Test.js",["394","395","396","397","398"],"import React, { Fragment } from \"react\";\nimport ByDate from \"./TestTableCube\";\nimport AppliedByApplication from \"./chart-js/AppliedValueByApplication\";\nimport DrillDownExample from \"./chart-js/DrillDownTest\";\nimport { CardDeck, Card } from \"react-bootstrap\";\nimport Workload from \"../workload/Workload_copy\"\n\nconst Test = (props) => {\n  return (\n    <Fragment>\n     <Workload/>\n    </Fragment>\n  );\n};\nexport default Test;\n","/home/developer/Wpm/wpm-frontend/src/components/ui-components/InstructionModal.js",["399","400"],"import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { connectModal } from \"redux-modal\";\nimport BillItemForm from \"../bill-items/BillItemForm\";\nimport DocumentForm from \"../documents/DocumentForm\";\nimport DocumentImages from \"../documents/DocumentsList\";\nimport ApplicationImages from \"../images/ApplicationImages\";\nimport ImageForm from \"../images/ImageForm\";\nimport LocationImages from \"../images/LocationImages\";\nimport LocationForm from \"../locations/LocationForm\";\nimport InstructionForm from \"../work-instructions/InstructionForm\";\nimport WorksheetForm from \"../worksheets/WorksheetForm\";\n\n\nconst InstructionModal = (props) => {\n\tconst {show, handleHide, title, content, formType} = props;\n\tconst history = useHistory();\n\tconst params = useParams();\n\n\tconst components = {\n\t\tinstructionForm: <InstructionForm handleHide={ handleHide } formType={ formType }/>,\n\t\tdocumentsList: <DocumentImages handleHide={ handleHide }/>,\n\t\tlocationImages: <LocationImages handleHide={ handleHide } sizeClass=\"d-block w-100\"/>,\n\t\tlocationForm: <LocationForm handleHide={ handleHide } formType={ formType }/>,\n\t\tworksheetForm: <WorksheetForm handleHide={ handleHide } formType={ formType }/>,\n\t\tdocumentForm: <DocumentForm handleHide={ handleHide } formType={ formType }/>,\n\t\tbillItemForm: <BillItemForm handleHide={ handleHide } formType={ formType }/>,\n\t\timageForm: <ImageForm handleHide={ handleHide } formType={ formType }/>,\n\t\tapplicationImages: <ApplicationImages handleHide={ handleHide } formType={ formType } sizeClass=\"d-block w-100\"/>\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Modal\n\t\t\t\tshow={ show }\n\t\t\t\tonHide={ handleHide }\n\t\t\t\tbackdrop={ false }\n\t\t\t\tsize=\"md\"\n\t\t\t\tautoFocus={ false }\n\t\t\t\tcentered={ false }\n\t\t\t\tscrollable={ false }\n\t\t\t>\n\t\t\t\t<Modal.Header\n\t\t\t\t\tcloseButton\n\t\t\t\t\tstyle={ {backgroundColor: \"hsl(180, 30%, 30%)\", color: \"white\"} }\n\t\t\t\t>\n\t\t\t\t\t<Modal.Title style={ {textAlign: \"center\"} }>{ title }</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>{ components[content] }</Modal.Body>\n\t\t\t</Modal>\n\t\t</div>\n\t);\n};\nexport default connectModal({name: \"instruction-modal\"})(InstructionModal);\n","/home/developer/Wpm/wpm-frontend/src/components/ui-components/componentsReducer.js",[],"/home/developer/Wpm/wpm-frontend/src/components/locations/LocationList.js",["401","402","403"],"import { AgGridReact } from \"ag-grid-react\";\nimport { ChangeDetectionStrategyType } from \"ag-grid-react/lib/changeDetectionService\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  useEffectOnce,\n  useLatest,\n  useMountedState,\n  useUpdateEffect,\n} from \"react-use\";\nimport { show } from \"redux-modal\";\nimport {\n  setClickedLocation,\n  setSelectedLocation,\n} from \"../../services/data/gridData\";\nimport { fetchOrderSummaryInfo } from \"../../services/thunks\";\nimport CustomLoadingOverlay from \"../grid/CustomLoadingOverlay\";\nimport CustomNoRowsOverlay from \"../grid/CustomNoRowsOverlay2\";\nimport InstructionSummary from \"../work-instructions/InstructionSummary\";\nimport Loader from \"react-loader-spinner\";\nimport {\n  selectOrderSummaryLocations,\n  selectOrderSummaryImages,\n} from \"../../services/selectors\";\n\nconst LocationList = () => {\n  const { OrderId } = useParams();\n  const dispatch = useDispatch();\n  const locations = useSelector(selectOrderSummaryLocations);\n  const loading = useSelector((state) => state.locations.loading);\n  const images = useSelector(selectOrderSummaryImages);\n  const [gridApi, setGridApi] = useState();\n  const [, setColumnApi] = useState();\n  const isMounted = useMountedState();\n  const selectedLocation = useSelector(\n    (state) => state.gridData.selectedLocation\n  );\n\n  let columnDefs = [\n    {\n      headerName: \"Select\",\n      colId: \"select\",\n      checkboxSelection: true,\n      maxWidth: 120,\n      valueGetter: function (params) {\n        if (params.data.item_count === 0) {\n          return \"New\";\n        } else if (params.data.item_count - params.data.items_complete === 0) {\n          return \"Complete\";\n        }\n      },\n      filter: false,\n    },\n    {\n      headerName: \"Worksheet Ref\",\n      field: \"worksheet_ref\",\n      colId: \"worksheet_ref\",\n      maxWidth: 150,\n      sort: \"asc\",\n    },\n    { headerName: \"Location\", field: \"location_ref\" },\n    {\n      headerName: \"Item Count\",\n      field: \"item_count\",\n      colId: \"item_count\",\n      type: \"numericColumn\",\n      maxWidth: 150,\n    },\n    {\n      headerName: \"Items Complete\",\n      field: \"items_complete\",\n      colId: \"items_complete\",\n      type: \"numericColumn\",\n      maxWidth: 150,\n    },\n    {\n      headerName: \"Items Remaining\",\n      colId: \"items_remaining\",\n      type: \"numericColumn\",\n      maxWidth: 150,\n      valueGetter: function (params) {\n        const { item_count, items_complete } = params.data;\n        return item_count - items_complete;\n      },\n    },\n    {\n      headerName: \"Images\",\n      field: \"image_count\",\n      colId: \"imageCount\",\n      type: \"rightAligned\",\n      maxWidth: 150,\n      cellRenderer: getImageCount,\n    },\n    {\n      headerName: \"Order Value\",\n      field: \"total_payable\",\n      colId: \"total_payable\",\n      type: \"rightAligned\",\n      cellStyle: { fontWeight: \"bold\" },\n      valueFormatter: function (params) {\n        return params.value.toLocaleString(undefined, {\n          maximumFractionDigits: 2,\n          minimumFractionDigits: 2,\n        });\n      },\n    },\n  ];\n\n  const defaultColDef = {\n    filter: true,\n    sortable: true,\n    resizable: true,\n    flex: true,\n  };\n\n  const columnTypes = {\n    dateColumn: {\n      filter: \"agDateColumnFilter\",\n    },\n  };\n\n  const gridOptions = {\n    columnDefs: columnDefs,\n    defaultColDef: defaultColDef,\n    columnTypes: columnTypes,\n    pagination: true,\n    paginationPageSize: 20,\n    domLayout: \"autoHeight\",\n    rowSelection: \"single\",\n    suppressRowClickSelection: false,\n    onCellClicked: (e) => {\n      if (e.column.colId === \"imageCount\") {\n        e.node.setSelected(false);\n      }\n    },\n    onRowSelected: rowSelected,\n    suppressLoadingOverlay: true,\n    /* suppressNoRowsOverlay: false,\n    frameworkComponents: {\n      customNoRowsOverlay: CustomNoRowsOverlay,\n    },\n    noRowsOverlayComponent: \"customNoRowsOverlay\",\n    noRowsOverlayComponentParams: {\n      noRowsMessageFunc: function () {\n        return (\n          <h3 style={{ textAlign: \"center\", marginTop: \"15px\" }}>...Loading</h3>\n        );\n        return (\n          <Loader\n            style={{ textAlign: \"center\", marginTop: \"15px\" }}\n            type={\"Puff\"}\n            color=\"#366363\"\n          />\n        );\n      },\n    }, */\n  };\n\n  useEffectOnce(() => {\n    dispatch(fetchOrderSummaryInfo(OrderId));\n    dispatch(setSelectedLocation(false));\n  });\n\n  useUpdateEffect(() => {\n    gridApi.setRowData(locations);\n    //gridApi.redrawRows();\n  }, [images, locations]);\n\n  const onGridReady = (params) => {\n    setGridApi(params.api);\n    setColumnApi(params.columnApi);\n    params.api.sizeColumnsToFit();\n  };\n\n  function rowSelected(event) {\n    if (event.node.selected) {\n      dispatch(setSelectedLocation(event.data));\n    } else {\n      dispatch(setSelectedLocation(false));\n    }\n  }\n\n  function getImageCount(params) {\n    let link;\n    if (params.data.image_count > 0) {\n      link = document.createElement(\"a\");\n      link.href = \"#\";\n      link.style = \"font-weight: bold\";\n      link.innerText = params.data.image_count;\n      link.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        dispatch(setClickedLocation(params.data));\n        dispatch(\n          show(\"instruction-modal\", {\n            title: \"LOCATION IMAGES\",\n            content: \"locationImages\",\n          })\n        );\n      });\n      return link;\n    } else return params.data.image_count;\n  }\n\n  useEffect(() => {\n    if (isMounted) {\n      if (gridApi) {\n        if (!selectedLocation) {\n          gridApi.deselectAll();\n        }\n      }\n    }\n  }, [gridApi, isMounted, selectedLocation]);\n\n  return (\n    <Fragment>\n      <Container fluid>\n        <InstructionSummary />\n        <div className=\"grid-title\">SITE LOCATION LISTING:</div>\n        <hr />\n        <div className=\"ag-theme-custom-react\">\n          <AgGridReact\n            gridOptions={gridOptions}\n            rowData={locations}\n            immuntableData={true}\n            getRowNodeId={(data) => data.id}\n            onGridReady={onGridReady}\n            onGridSizeChanged={(params) => params.api.sizeColumnsToFit()}\n            rowDataChangeDetectionStrategy={\n              ChangeDetectionStrategyType.IdentityCheck\n            }\n          />\n        </div>\n\n        {loading && locations.length === 0 && (\n          <Loader\n            style={{ textAlign: \"center\", marginTop: \"30px\" }}\n            type={\"Puff\"}\n            color=\"#366363\"\n            height={150}\n            width={150}\n          />\n        )}\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default LocationList;\n","/home/developer/Wpm/wpm-frontend/src/components/worksheets/WorkProgressTable.js",[],"/home/developer/Wpm/wpm-frontend/src/components/applications/ApplicationsSummary.js",["404","405"],"import moment from \"moment\";\nimport React from \"react\";\nimport { CardDeck, Container } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useEffectOnce } from \"react-use\";\nimport { selectAllApplications } from \"../../services/data/ApplicationData\";\nimport { setSelectedInstruction } from \"../../services/data/gridData\";\nimport { removeAllAvailableWorkInstructions, removeAllWorkInstructions } from \"../../services/data/InstructionData\";\nimport { removeAllWorksheets } from \"../../services/data/WorksheetData\";\nimport { fetchApplications, fetchAvailableInstructions } from \"../../services/thunks\";\nimport { GreyButton } from \"../ui-components/Buttons\";\nimport CommercialCard from \"../ui-components/CommercialCard\";\nimport AvailableOrderList from \"./AvailableOrderList\";\nimport AvailableWorksheetsList from \"./AvailableWorksheetsList\";\n\n\nfunction formatDate(date) {\n\treturn moment(date).format(\"DD/MM/YYYY\");\n}\n\nconst numFormat = (num) => {\n\treturn (\n\t\tnum.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2})\n\t);\n};\n\nconst ApplicationsSummary = () => {\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\tconst applications = useSelector(selectAllApplications).sort(function (a, b) {\n\t\treturn a[\"app_number\"] - b[\"app_number\"];\n\t}).slice(-5);\n\tuseEffectOnce(() => {\n\t\tdispatch(fetchApplications());\n\t\t//dispatch(fetchAvailableWorksheets(`?applied=False`));\n\t\t//dispatch(fetchWorkInstructions());\n\t\tdispatch(fetchAvailableInstructions());\n\t\t//dispatch(setSelectedInstruction(false));\n\n\t\treturn (() => {\n\t\t\tdispatch(removeAllAvailableWorkInstructions());\n\t\t\tdispatch(setSelectedInstruction(false));\n\t\t});\n\t});\n\n\tfunction handleViewAppSummary({app_number, id}) {\n\n\t//\tdispatch(removeAllWorksheets());\n\t//\tdispatch(removeAllWorkInstructions());\n\t\thistory.push({pathname: `/commercial/applications/detail/${ app_number }`, state: id});\n\t}\n\n\treturn (\n\t\t<Container fluid>\n\n\n\t\t\t<h4 style={ {textAlign: \"center\", fontWeight: \"bolder\", paddingTop: 5} }>APPLICATION SUMMARY</h4>\n\t\t\t<hr/>\n\t\t\t<CardDeck>\n\t\t\t\t{ applications.map(item => {\n\t\t\t\t\tconst {app_date, app_current, id, app_ref, app_submitted, app_value} = item;\n\t\t\t\t\treturn (\n\n\t\t\t\t\t\t<CommercialCard\n\t\t\t\t\t\t\tkey={ id }\n\t\t\t\t\t\t\ttitle={ app_ref }\n\t\t\t\t\t\t\ttextLabelTop=\"Date:\"\n\t\t\t\t\t\t\ttextValueTop={ formatDate(app_date) }\n\t\t\t\t\t\t\ttextLabelMid=\"VALUE:\"\n\t\t\t\t\t\t\ttextValueMid={ numFormat(app_value) }\n\t\t\t\t\t\t\ttextLabelBtm=\"STATUS:\"\n\t\t\t\t\t\t\ttextValueBtm={ app_current ? \"OPEN\" : \"CLOSED\" }\n\t\t\t\t\t\t\ttextLabelMisc=\"SUBMISSION STATUS:\"\n\t\t\t\t\t\t\ttextValueMisc={ app_submitted ? \"SUBMITTED\" : \"NOT SUBMITTED\" }\n\t\t\t\t\t\t\tfooter={ <GreyButton onClick={ () => handleViewAppSummary(item, id) } fullWidth>View Application</GreyButton> }\n\t\t\t\t\t\t\ttitleStyle={ app_current ? {color: \"navy\", textAlign: \"center\"} : {\n\t\t\t\t\t\t\t\tcolor: \"\",\n\t\t\t\t\t\t\t\ttextAlign: \"center\"\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t);\n\t\t\t\t}) }\n\t\t\t</CardDeck>\n\n\t\t\t<hr/>\n\t\t\t<AvailableOrderList/>\n\n\t\t\t<AvailableWorksheetsList/>\n\t\t</Container>\n\t);\n};\n\nexport default ApplicationsSummary;\n","/home/developer/Wpm/wpm-frontend/src/components/applications/ApplicationDetail.js",["406","407","408"],"import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffectOnce } from \"react-use\";\nimport { selectAllApplications } from \"../../services/data/ApplicationData\";\nimport {\n  resetApplicationDetails,\n  setApplicationDetailsToSubmitted,\n} from \"../../services/data/ApplicationDetailsData\";\nimport { fetchAppDetails } from \"../../services/thunks\";\nimport ApplicationBillItems from \"./ApplicationBillItems\";\nimport ApplicationInstructionList from \"./ApplicationInstructionsList\";\nimport ApplicationLocations from \"./ApplicationLocations\";\n\nconst numFormat = (num) => {\n  return num.toLocaleString(undefined, {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  });\n};\n\nconst ApplicationDetail = () => {\n  const applications = useSelector(selectAllApplications);\n\n  const { appId } = useParams();\n\n  const appValue = numFormat(\n    applications\n      .filter((obj) => obj.app_number == appId)\n      .map((item) => item[\"app_value\"])\n  );\n\n  const submissionStatus = applications.filter(\n    (obj) => obj.app_number == appId\n  )[0].app_submitted;\n\n  const dispatch = useDispatch();\n  const params = useParams();\n\n  useEffectOnce(() => {\n    const selectedApp = applications.filter(\n      (obj) => obj.app_number == appId\n    )[0];\n    !selectedApp.app_submitted\n      ? dispatch(fetchAppDetails(params[\"appId\"]))\n      : dispatch(\n          setApplicationDetailsToSubmitted(selectedApp.submission_detail)\n        );\n    return () => {\n      dispatch(resetApplicationDetails());\n    };\n  });\n\n  return (\n    <Container fluid>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          marginTop: 10,\n        }}\n      >\n        <h3 style={{ fontWeight: \"bolder\" }}>\n          APPLICATION NUMBER: &nbsp;&nbsp;{params[\"appId\"]}\n        </h3>\n        <h3 style={{ fontWeight: \"bolder\" }}>\n          SUBMISSION STATUS: &nbsp;&nbsp;\n          {submissionStatus ? \"SUBMITTED\" : \"NOT SUBMITTED\"}\n        </h3>\n        <h3 style={{ fontWeight: \"bolder\" }}>\n          APPLICATION VALUE: &nbsp;&nbsp; {appValue}{\" \"}\n        </h3>\n      </div>\n\n      <ApplicationInstructionList />\n      <ApplicationLocations />\n      <ApplicationBillItems />\n      {/* { exportDataFlag && (\n\t\t\t\t<CSVDownload\n\t\t\t\t\tdata={ appItems }\n\t\t\t\t\theaders={ filterColumns(appItems) }\n\t\t\t\t\tfilename={ \"test.csv\" }\n\t\t\t\t/>\n\t\t\t) } */}\n    </Container>\n  );\n};\n\nexport default ApplicationDetail;\n","/home/developer/Wpm/wpm-frontend/src/components/dashboard/Dashboard.js",[],"/home/developer/Wpm/wpm-frontend/src/components/navigation/NavDrawer.js",["409","410","411","412","413","414","415","416","417","418"],"import {\r\n  faCoins,\r\n  faHardHat,\r\n  faPoundSign,\r\n  faToolbox,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Divider, Drawer, List, ListItem } from \"@material-ui/core\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BuildIcon from \"@material-ui/icons/Build\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { useConfirm } from \"material-ui-confirm\";\r\nimport React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink, useLocation, withRouter } from \"react-router-dom\";\r\nimport { show } from \"redux-modal\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { selectAllApplications } from \"../../services/data/ApplicationData\";\r\nimport { exportApplicationDetails } from \"../../services/data/ApplicationDetailsData\";\r\nimport {\r\n  selectAllEditedRows,\r\n  setClickedLocation,\r\n  setSelectedBillItem,\r\n  setSelectedInstruction,\r\n  setSelectedLocation,\r\n  setSelectedRow,\r\n  resetEditedRow,\r\n} from \"../../services/data/gridData\";\r\nimport { selectAllAvailableWorkInstructions } from \"../../services/data/InstructionData\";\r\nimport {\r\n  updateCurrentApplication,\r\n  closeApplication,\r\n  deleteInstructionDetail,\r\n  deleteLocation,\r\n  deleteWorkInstruction,\r\n  fetchAvailableInstructions,\r\n  fetchCurrentApplication,\r\n  submitApplicationData,\r\n  updateWorkInstruction,\r\n  addBulkWorksheetToApplication,\r\n} from \"../../services/thunks\";\r\nimport LetterM from \"../icons/letter-m.png\";\r\nimport LetterP from \"../icons/letter-p.png\";\r\nimport LetterW from \"../icons/letter-w.png\";\r\nimport {\r\n  BlueButton,\r\n  GreenButton,\r\n  PurpleButton,\r\n  RedButton,\r\n} from \"../ui-components/Buttons\";\r\nimport { submissionAvailable } from \"../../services/selectors\";\r\n\r\nconst drawerWidth = 280;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundImage: \"linear-gradient(hsl(0, 0%, 60%), hsl(0, 0%, 20%))\",\r\n    color: \"white\",\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"center\",\r\n  },\r\n  actions: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    //alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    verticalAlign: \"middle\",\r\n  },\r\n}));\r\n\r\nfunction toFixed(number, decimals) {\r\n  const x = Math.pow(10, Number(decimals) + 1);\r\n  return (Number(number) + 1 / x).toFixed(decimals);\r\n}\r\n\r\nconst NavDrawer = (props) => {\r\n  const classes = useStyles();\r\n  const { history } = props;\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const applications = useSelector(selectAllApplications);\r\n  const applicationSubmissionDetail = useSelector(\r\n    (state) => state.applicationDetail\r\n  );\r\n  const submissionButtonAvailable = useSelector(submissionAvailable);\r\n  const selectedRow = useSelector((state) => state.gridData.selectedRow);\r\n  const editedRows = useSelector(selectAllEditedRows);\r\n  const selectedLocation = useSelector(\r\n    (state) => state.gridData.selectedLocation\r\n  );\r\n  const selectedBillItem = useSelector(\r\n    (state) => state.gridData.selectedBillItem\r\n  );\r\n  const workInstructions = useSelector(selectAllAvailableWorkInstructions);\r\n\r\n  const confirm = useConfirm();\r\n\r\n  const updateAppliedWorksheet = () => {\r\n    if (editedRows.length > 0) {\r\n      const currentApp = applications.filter((obj) => obj.app_current === true);\r\n      const currentWorkInstruction = workInstructions.filter(\r\n        (obj) => obj.work_instruction === editedRows[0][\"order_ref\"]\r\n      );\r\n      const applied_value = editedRows\r\n        .map((item) => item.value_complete)\r\n        .reduce((acc, item) => acc + item, 0);\r\n\r\n      console.log(currentApp[0].app_value + applied_value);\r\n\r\n      const worksheetContainer = [];\r\n\r\n      editedRows.forEach((item) => {\r\n        worksheetContainer.push({\r\n          ...item,\r\n          application_number: currentApp[0].app_number,\r\n          applied: true,\r\n        });\r\n      });\r\n      dispatch(addBulkWorksheetToApplication(worksheetContainer));\r\n      dispatch(\r\n        updateWorkInstruction({\r\n          id: currentWorkInstruction[0].id,\r\n          value_applied: toFixed(\r\n            currentWorkInstruction[0].value_applied + applied_value,\r\n            2\r\n          ),\r\n        })\r\n      )\r\n        .then(() =>\r\n          dispatch(\r\n            updateCurrentApplication({\r\n              id: currentApp[0].id,\r\n              app_value: toFixed(currentApp[0].app_value + applied_value, 2),\r\n            })\r\n          )\r\n        )\r\n        .then(() => dispatch(resetEditedRow()))\r\n        .then(() => dispatch(fetchAvailableInstructions()));\r\n      //   .then(() => dispatch(fetchCurrentApplication()));\r\n      dispatch(setSelectedInstruction(false));\r\n    } else {\r\n      confirm({\r\n        title: \"NO WORKSHEET SELECTED\",\r\n        cancellationButtonProps: {\r\n          disabled: true,\r\n          hidden: true,\r\n        },\r\n        confirmationButtonProps: {\r\n          variant: \"contained\",\r\n          autoFocus: true,\r\n        },\r\n        dialogProps: {\r\n          TransitionComponent: Slide,\r\n          disableBackdropClick: true,\r\n        },\r\n      }).then((r) => console.log(r));\r\n    }\r\n  };\r\n\r\n  const handleOpenCreate = (name, content, title) => () => {\r\n    //\tdispatch(resetGridRow());\r\n    dispatch(\r\n      show(name, {\r\n        title: title,\r\n        content: content,\r\n        formType: \"create\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleOpenEdit = (name, content) => () => {\r\n    if (selectedRow) {\r\n      dispatch(\r\n        show(name, {\r\n          title: \"EDIT WORK INSTRUCTION\",\r\n          content: content,\r\n          formType: \"edit\",\r\n        })\r\n      );\r\n    } else {\r\n      confirm({\r\n        title: \"NO WORK INSTRUCTION SELECTED\",\r\n        cancellationButtonProps: {\r\n          disabled: true,\r\n          hidden: true,\r\n        },\r\n        confirmationButtonProps: {\r\n          variant: \"contained\",\r\n          autoFocus: true,\r\n        },\r\n        dialogProps: {\r\n          TransitionComponent: Slide,\r\n          disableBackdropClick: true,\r\n        },\r\n      }).then(() => dispatch(setSelectedRow(false)));\r\n    }\r\n  };\r\n\r\n  const handleOpenEditItem = (name, content) => () => {\r\n    if (selectedBillItem) {\r\n      dispatch(\r\n        show(name, {\r\n          title: \"EDIT BILL ITEM\",\r\n          content: content,\r\n          formType: \"edit\",\r\n        })\r\n      );\r\n    } else {\r\n      confirm({\r\n        title: \"NO BILL ITEM SELECTED\",\r\n        cancellationButtonProps: {\r\n          disabled: true,\r\n          hidden: true,\r\n        },\r\n        confirmationButtonProps: {\r\n          variant: \"contained\",\r\n          autoFocus: true,\r\n        },\r\n        dialogProps: {\r\n          TransitionComponent: Slide,\r\n          disableBackdropClick: true,\r\n        },\r\n      }).then(() => dispatch(setSelectedBillItem(false)));\r\n    }\r\n  };\r\n\r\n  const handleOpenEditLocation = (name, content) => () => {\r\n    if (selectedLocation) {\r\n      dispatch(\r\n        show(name, {\r\n          title: \"EDIT LOCATION\",\r\n          content: content,\r\n          formType: \"edit\",\r\n        })\r\n      );\r\n    } else {\r\n      confirm({\r\n        title: \"NO LOCATION SELECTED\",\r\n        cancellationButtonProps: {\r\n          disabled: true,\r\n          hidden: true,\r\n        },\r\n        confirmationButtonProps: {\r\n          variant: \"contained\",\r\n          autoFocus: true,\r\n        },\r\n        dialogProps: {\r\n          TransitionComponent: Slide,\r\n          disableBackdropClick: true,\r\n        },\r\n      }).then(() => dispatch(setSelectedLocation(false)));\r\n    }\r\n  };\r\n\r\n  const handleDeleteInstruction = () => {\r\n    if (selectedRow) {\r\n      confirm({\r\n        title: `DELETE ORDER ${selectedRow.work_instruction}`,\r\n        description: \"Do you Want to Save These Changes ?\",\r\n        confirmationButtonProps: {\r\n          variant: \"contained\",\r\n          color: \"primary\",\r\n        },\r\n        cancellationButtonProps: {\r\n          variant: \"contained\",\r\n          autoFocus: true,\r\n        },\r\n        dialogProps: {\r\n          TransitionComponent: Slide,\r\n          disableBackdropClick: true,\r\n        },\r\n      })\r\n        .then(() => dispatch(deleteWorkInstruction(selectedRow.id)))\r\n        .catch(() => dispatch(setSelectedRow(false)));\r\n    } else {\r\n      confirm({\r\n        title: \"NO WORK INSTRUCTION SELECTED\",\r\n        cancellationButtonProps: {\r\n          disabled: true,\r\n          hidden: true,\r\n        },\r\n        confirmationButtonProps: {\r\n          variant: \"contained\",\r\n          autoFocus: true,\r\n        },\r\n        dialogProps: {\r\n          TransitionComponent: Slide,\r\n          disableBackdropClick: true,\r\n        },\r\n      }).then(() => dispatch(setSelectedRow(false)));\r\n    }\r\n  };\r\n\r\n  const handleDeleteInstructionDetail = () => {\r\n    if (selectedBillItem) {\r\n      confirm({\r\n        title: `DELETE BILL ITEM ${selectedBillItem.item_number}`,\r\n        description: \"Do you Want to Save These Changes ?\",\r\n        confirmationButtonProps: {\r\n          variant: \"contained\",\r\n          color: \"primary\",\r\n        },\r\n        cancellationButtonProps: {\r\n          variant: \"contained\",\r\n          autoFocus: true,\r\n        },\r\n        dialogProps: {\r\n          TransitionComponent: Slide,\r\n          disableBackdropClick: true,\r\n        },\r\n      })\r\n        .then(() => dispatch(deleteInstructionDetail(selectedBillItem.id)))\r\n        .catch(() => dispatch(setSelectedBillItem(false)));\r\n    } else {\r\n      confirm({\r\n        title: \"NO BILL ITEM SELECTED\",\r\n        cancellationButtonProps: {\r\n          disabled: true,\r\n          hidden: true,\r\n        },\r\n        confirmationButtonProps: {\r\n          variant: \"contained\",\r\n          autoFocus: true,\r\n        },\r\n        dialogProps: {\r\n          TransitionComponent: Slide,\r\n          disableBackdropClick: true,\r\n        },\r\n      }).then(() => dispatch(setSelectedBillItem(false)));\r\n    }\r\n  };\r\n\r\n  const handleDeleteLocation = () => {\r\n    if (selectedLocation) {\r\n      confirm({\r\n        title: `DELETE LOCATION ${selectedLocation.location_ref}`,\r\n        description: \"Do you Want to Save These Changes ?\",\r\n        confirmationButtonProps: {\r\n          variant: \"contained\",\r\n          color: \"primary\",\r\n        },\r\n        cancellationButtonProps: {\r\n          variant: \"contained\",\r\n          autoFocus: true,\r\n        },\r\n        dialogProps: {\r\n          TransitionComponent: Slide,\r\n          disableBackdropClick: true,\r\n        },\r\n      })\r\n        .then(() => dispatch(deleteLocation(selectedLocation.id)))\r\n        .then(() => dispatch(setSelectedLocation(false)))\r\n        .catch(() => dispatch(setSelectedLocation(false)));\r\n    } else {\r\n      confirm({\r\n        title: \"NO LOCATION SELECTED\",\r\n        cancellationButtonProps: {\r\n          disabled: true,\r\n          hidden: true,\r\n        },\r\n        confirmationButtonProps: {\r\n          variant: \"contained\",\r\n          autoFocus: true,\r\n        },\r\n        dialogProps: {\r\n          TransitionComponent: Slide,\r\n          disableBackdropClick: true,\r\n        },\r\n      }).then(() => dispatch(setSelectedLocation(false)));\r\n    }\r\n  };\r\n\r\n  const handleViewSummary = () => {\r\n    if (selectedRow) {\r\n      history.push({\r\n        pathname: `/work-instructions/summary/locations/${selectedRow.id}`,\r\n        state: selectedRow.project_title,\r\n      });\r\n    } else {\r\n      confirm({\r\n        title: \"NO WORK INSTRUCTION SELECTED\",\r\n        confirmationButtonProps: {\r\n          variant: \"contained\",\r\n          autoFocus: true,\r\n        },\r\n        cancellationButtonProps: {\r\n          disabled: true,\r\n          hidden: true,\r\n        },\r\n        dialogProps: {\r\n          TransitionComponent: Slide,\r\n          disableBackdropClick: true,\r\n        },\r\n      }).then((r) => console.log(r));\r\n    }\r\n  };\r\n\r\n  const handleUploadImage = (name, content, title) => {\r\n    if (selectedLocation) {\r\n      dispatch(show(name, { title: title, content: content }));\r\n    } else {\r\n      confirm({\r\n        title: \"NO LOCATION SELECTED\",\r\n        cancellationButtonProps: {\r\n          disabled: true,\r\n          hidden: true,\r\n        },\r\n        confirmationButtonProps: {\r\n          variant: \"contained\",\r\n          autoFocus: true,\r\n        },\r\n        dialogProps: {\r\n          TransitionComponent: Slide,\r\n          disableBackdropClick: true,\r\n        },\r\n      }).then((r) => console.log(r));\r\n    }\r\n  };\r\n\r\n  const handleViewOnly = (name, content, title) => () => {\r\n    dispatch(show(name, { title: title, content: content }));\r\n    dispatch(setClickedLocation(false));\r\n  };\r\n\r\n  const handleViewItems = () => {\r\n    history.push({\r\n      pathname: `/work-instructions/summary/items/${selectedRow.id}`,\r\n      state: selectedRow.project_title,\r\n    });\r\n  };\r\n\r\n  const handleViewWorksheets = () => {\r\n    if (selectedLocation) {\r\n      history.push({\r\n        pathname: `/work-instructions/summary/worksheets/${selectedRow.work_instruction}`,\r\n        state: selectedRow.project_title,\r\n      });\r\n    } else {\r\n      confirm({\r\n        title: \"NO LOCATION SELECTED\",\r\n        cancellationButtonProps: {\r\n          disabled: true,\r\n          hidden: true,\r\n        },\r\n        confirmationButtonProps: {\r\n          variant: \"contained\",\r\n          autoFocus: true,\r\n        },\r\n      }).then(() => dispatch(setSelectedLocation(false)));\r\n    }\r\n  };\r\n\r\n  const handleUploadFromTemplate = () => {\r\n    if (selectedRow) {\r\n      history.push({\r\n        pathname: \"/work-instructions/summary/import\",\r\n      });\r\n    } else {\r\n      confirm({\r\n        title: \"NO WORK INSTRUCTION SELECTED\",\r\n        confirmationButtonProps: {\r\n          variant: \"contained\",\r\n          autoFocus: true,\r\n        },\r\n        cancellationButtonProps: {\r\n          disabled: true,\r\n          hidden: true,\r\n        },\r\n        dialogProps: {\r\n          TransitionComponent: Slide,\r\n          disableBackdropClick: true,\r\n        },\r\n      }).then((r) => console.log(r));\r\n    }\r\n  };\r\n\r\n  const closeAndCreateApplication = () => {\r\n    confirm({\r\n      title: \"ARE YOU SURE\",\r\n      description:\r\n        \"This Will Close The Current Application and Create the Next One in the Sequence\",\r\n      confirmationButtonProps: {\r\n        variant: \"contained\",\r\n        startIcon: <CheckBoxIcon />,\r\n      },\r\n      cancellationButtonProps: {\r\n        variant: \"contained\",\r\n        autoFocus: true,\r\n        startIcon: <CancelIcon />,\r\n      },\r\n      dialogProps: {\r\n        TransitionComponent: Slide,\r\n        disableBackdropClick: true,\r\n      },\r\n    })\r\n      .then(() => dispatch(closeApplication()))\r\n      .catch(() => console.log(\"Action Cancelled\"));\r\n  };\r\n\r\n  const submitApplication = () => {\r\n    const checkLocationImages = applicationSubmissionDetail.locations.filter(\r\n      (obj) => obj.image_count === 0\r\n    );\r\n    confirm({\r\n      title: \"SUBMIT APPLICATION\",\r\n      description: (\r\n        <>\r\n          <p>\r\n            Are You Sure You Want To Submit This Application, Further Changes\r\n            Will Be Prevented\r\n          </p>\r\n          {checkLocationImages.length > 0 &&\r\n          <h4 style={{ fontWeight: \"bold\", color: \"red\" }}>\r\n            This Application Contains {checkLocationImages.length} Locations\r\n            That Have No Images\r\n          </h4>}\r\n        </>\r\n      ),\r\n\r\n      confirmationButtonProps: {\r\n        variant: \"contained\",\r\n        startIcon: <CheckBoxIcon />,\r\n      },\r\n      cancellationButtonProps: {\r\n        variant: \"contained\",\r\n        autoFocus: true,\r\n        startIcon: <CancelIcon />,\r\n      },\r\n      dialogProps: {\r\n        TransitionComponent: Slide,\r\n        disableBackdropClick: true,\r\n      },\r\n    })\r\n      .then(() =>\r\n        dispatch(\r\n          submitApplicationData({\r\n            application_id: location.state,\r\n            submission_detail: applicationSubmissionDetail,\r\n            app_submitted: true,\r\n          })\r\n        )\r\n      )\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const instructionBarButtons = {\r\n    crudButtons: [\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <GreenButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            onClick={handleOpenCreate(\r\n              \"instruction-modal\",\r\n              \"instructionForm\",\r\n              \"CREATE WORK INSTRUCTION\"\r\n            )}\r\n            fullWidth\r\n          >\r\n            CREATE INSTRUCTION\r\n          </GreenButton>\r\n        ),\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <GreenButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            fullWidth\r\n            onClick={handleOpenEdit(\"instruction-modal\", \"instructionForm\")}\r\n          >\r\n            EDIT INSTRUCTION\r\n          </GreenButton>\r\n        ),\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <RedButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            onClick={handleDeleteInstruction}\r\n            fullWidth\r\n            startIcon={<DeleteIcon />}\r\n          >\r\n            DELETE INSTRUCTION\r\n          </RedButton>\r\n        ),\r\n      },\r\n    ],\r\n    navButtons: [\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <PurpleButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            onClick={handleViewSummary}\r\n            fullWidth\r\n          >\r\n            VIEW INSTRUCTION SUMMARY\r\n          </PurpleButton>\r\n        ),\r\n      },\r\n    ],\r\n    actionButtons: [\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <BlueButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            onClick={handleUploadFromTemplate}\r\n            fullWidth\r\n          >\r\n            UPLOAD FROM TEMPLATE\r\n          </BlueButton>\r\n        ),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const locationsBarButtons = {\r\n    crudButtons: [\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <GreenButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            onClick={handleOpenCreate(\r\n              \"instruction-modal\",\r\n              \"locationForm\",\r\n              \"CREATE LOCATION\"\r\n            )}\r\n            fullWidth\r\n          >\r\n            CREATE LOCATION\r\n          </GreenButton>\r\n        ),\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <GreenButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            onClick={handleOpenEditLocation(\r\n              \"instruction-modal\",\r\n              \"locationForm\"\r\n            )}\r\n            fullWidth\r\n          >\r\n            EDIT LOCATION\r\n          </GreenButton>\r\n        ),\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <RedButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            onClick={handleDeleteLocation}\r\n            fullWidth\r\n            startIcon={<DeleteIcon />}\r\n          >\r\n            DELETE LOCATION\r\n          </RedButton>\r\n        ),\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <GreenButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            fullWidth\r\n            onClick={handleViewWorksheets}\r\n          >\r\n            UPDATE WORK PROGRESS\r\n          </GreenButton>\r\n        ),\r\n      },\r\n    ],\r\n    navButtons: [\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <PurpleButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            fullWidth\r\n            onClick={handleViewItems}\r\n          >\r\n            VIEW ITEMS\r\n          </PurpleButton>\r\n        ),\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <PurpleButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            fullWidth\r\n            onClick={handleViewOnly(\r\n              \"instruction-modal\",\r\n              \"documentsList\",\r\n              \"VIEW DOCUMENTS\"\r\n            )}\r\n          >\r\n            VIEW DOCUMENTS\r\n          </PurpleButton>\r\n        ),\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <PurpleButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            fullWidth\r\n            onClick={handleViewOnly(\r\n              \"instruction-modal\",\r\n              \"locationImages\",\r\n              \"LOCATION IMAGES\"\r\n            )}\r\n          >\r\n            VIEW ALL IMAGES\r\n          </PurpleButton>\r\n        ),\r\n      },\r\n    ],\r\n    actionButtons: [\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <GreenButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            fullWidth\r\n            onClick={() =>\r\n              handleUploadImage(\r\n                \"instruction-modal\",\r\n                \"imageForm\",\r\n                \"UPLOAD NEW IMAGE\"\r\n              )\r\n            }\r\n            startIcon={<CloudUploadIcon />}\r\n          >\r\n            UPLOAD IMAGE\r\n          </GreenButton>\r\n        ),\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <GreenButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            fullWidth\r\n            onClick={handleOpenCreate(\r\n              \"instruction-modal\",\r\n              \"documentForm\",\r\n              \"UPLOAD NEW DOCUMENT\"\r\n            )}\r\n            startIcon={<CloudUploadIcon />}\r\n          >\r\n            UPLOAD DOCUMENT\r\n          </GreenButton>\r\n        ),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const itemDetailsBarButtons = {\r\n    crudButtons: [\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <GreenButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            fullWidth\r\n            onClick={handleOpenCreate(\r\n              \"instruction-modal\",\r\n              \"billItemForm\",\r\n              \"CREATE BILL ITEM\"\r\n            )}\r\n          >\r\n            CREATE BILL ITEM\r\n          </GreenButton>\r\n        ),\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <GreenButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            fullWidth\r\n            onClick={handleOpenEditItem(\"instruction-modal\", \"billItemForm\")}\r\n          >\r\n            EDIT BILL ITEM\r\n          </GreenButton>\r\n        ),\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <RedButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            fullWidth\r\n            onClick={handleDeleteInstructionDetail}\r\n            startIcon={<DeleteIcon />}\r\n          >\r\n            DELETE BILL ITEM\r\n          </RedButton>\r\n        ),\r\n      },\r\n    ],\r\n    navButtons: [\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <PurpleButton\r\n            id={uuidv4()}\r\n            fullWidth\r\n            type=\"button\"\r\n            onClick={handleViewSummary}\r\n          >\r\n            VIEW LOCATIONS\r\n          </PurpleButton>\r\n        ),\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <PurpleButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            fullWidth\r\n            onClick={handleViewOnly(\"instruction-modal\", \"documentsList\")}\r\n          >\r\n            VIEW DOCUMENTS\r\n          </PurpleButton>\r\n        ),\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <PurpleButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            fullWidth\r\n            onClick={handleViewOnly(\"instruction-modal\", \"locationImages\")}\r\n          >\r\n            VIEW ALL IMAGES\r\n          </PurpleButton>\r\n        ),\r\n      },\r\n    ],\r\n    actionButtons: [\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <GreenButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            fullWidth\r\n            startIcon={<CloudUploadIcon />}\r\n          >\r\n            UPLOAD DOCUMENT\r\n          </GreenButton>\r\n        ),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const worksheetBarButtons = {\r\n    actionButtons: [\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <GreenButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            fullWidth\r\n            onClick={handleOpenCreate(\r\n              \"instruction-modal\",\r\n              \"worksheetForm\",\r\n              \"SAVE WORK PROGRESS\"\r\n            )}\r\n            startIcon={<SaveIcon />}\r\n          >\r\n            SAVE WORK PROGRESS\r\n          </GreenButton>\r\n        ),\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <BlueButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            fullWidth\r\n            onClick={history.goBack}\r\n          >\r\n            GO BACK\r\n          </BlueButton>\r\n        ),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const applicationsBarButtons = {\r\n    actionButtons: [\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <GreenButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            fullWidth\r\n            onClick={updateAppliedWorksheet}\r\n          >\r\n            ADD ITEMS TO APPLICATION\r\n          </GreenButton>\r\n        ),\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <GreenButton\r\n            id={uuidv4()}\r\n            type=\"button\"\r\n            fullWidth\r\n            onClick={closeAndCreateApplication}\r\n          >\r\n            CLOSE CURRENT APPLICATION\r\n          </GreenButton>\r\n        ),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const applicationDetailBarButtons = {\r\n    actionButtons: [\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <GreenButton\r\n            type=\"button\"\r\n            fullWidth\r\n            onClick={() => dispatch(exportApplicationDetails(true))}\r\n          >\r\n            EXPORT APP TO CSV\r\n          </GreenButton>\r\n        ),\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        component: (\r\n          <GreenButton\r\n            disabled={submissionButtonAvailable}\r\n            type=\"button\"\r\n            fullWidth\r\n            onClick={submitApplication}\r\n          >\r\n            SUBMIT APPLICATION\r\n          </GreenButton>\r\n        ),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const atWorkInstructions = location.pathname === \"/work-instructions\";\r\n  const atLocations = location.pathname.startsWith(\r\n    \"/work-instructions/summary/locations/\"\r\n  );\r\n  const atItemDetail = location.pathname.startsWith(\r\n    \"/work-instructions/summary/items/\"\r\n  );\r\n  const atWorksheets = location.pathname.startsWith(\r\n    \"/work-instructions/summary/worksheets/\"\r\n  );\r\n\r\n  const atApplications = location.pathname.startsWith(\r\n    \"/commercial/applications/summary\"\r\n  );\r\n\r\n  const atApplicationDetail = location.pathname.startsWith(\r\n    \"/commercial/applications/detail\"\r\n  );\r\n\r\n  const atHome = location.pathname.startsWith(\"/home\");\r\n\r\n  const itemsList = [\r\n    {\r\n      id: uuidv4(),\r\n      text: \"Home\",\r\n      icon: <HomeIcon />,\r\n      onClick: () => history.push(\"/home\"),\r\n      pathname: \"/home\",\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      text: \"DashBoard\",\r\n      icon: <DashboardIcon />,\r\n      onClick: () => history.push(\"/dashboard\"),\r\n      pathname: \"/dashboard\",\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      text: \"Work Instructions\",\r\n      icon: <FontAwesomeIcon icon={faHardHat} size=\"lg\" />,\r\n      onClick: () => history.push(\"/work-instructions\"),\r\n      pathname: \"/work-instructions\",\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      text: \"Activities\",\r\n      icon: <BuildIcon />,\r\n      onClick: () => history.push(\"/activities\"),\r\n      pathname: \"/activities\",\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      text: \"Workload\",\r\n      icon: <FontAwesomeIcon icon={faToolbox} size=\"lg\" />,\r\n      onClick: () => history.push(\"/work-instructions/workload\"),\r\n      pathname: \"/work-instructions/workload\",\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      text: \"Applications\",\r\n      icon: <FontAwesomeIcon icon={faPoundSign} size=\"lg\" />,\r\n      onClick: () => history.push(\"/commercial/applications/summary\"),\r\n      pathname: \"/commercial/applications/summary\",\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      text: \"Commercial\",\r\n      icon: <FontAwesomeIcon icon={faCoins} size=\"lg\" />,\r\n      onClick: () => history.push(\"/commercial/summary\"),\r\n      pathname: \"/commercial/summary\",\r\n    },\r\n    {\r\n      text: \"TEST\",\r\n      icon: <ListIcon />,\r\n      onClick: () => history.push(\"/test\"),\r\n      pathname: \"/test\",\r\n    },\r\n  ];\r\n\r\n  const authList = [\r\n    {\r\n      id: uuidv4(),\r\n      text: \"LOG OUT\",\r\n      icon: <ExitToAppIcon />,\r\n      onClick: () => history.push(\"/\"),\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      text: \"LOG IN\",\r\n      icon: <LockOpenIcon />,\r\n      onClick: () => history.push(\"/login\"),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        anchor=\"left\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <img src={LetterW} alt=\"W\" height=\"40px\" />\r\n          <img src={LetterP} alt=\"P\" height=\"40px\" />\r\n          <img src={LetterM} alt=\"M\" height=\"40px\" />\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {itemsList.map((item) => {\r\n            const { text, icon, onClick, pathname, id } = item;\r\n            return (\r\n              // <ListItem button key={uuidv4()} onClick={onClick}>\r\n              <ListItem\r\n                button\r\n                key={uuidv4()}\r\n                component={NavLink}\r\n                exact\r\n                to={pathname}\r\n                activeStyle={{\r\n                  fontWeight: \"bolder\",\r\n                  color: \"navy\",\r\n                }}\r\n              >\r\n                {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {atHome &&\r\n            authList.map((item) => {\r\n              const { text, icon, onClick } = item;\r\n              return (\r\n                <Fragment key={uuidv4()}>\r\n                  <ListItem button onClick={onClick}>\r\n                    {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                    <ListItemText primary={text} />\r\n                  </ListItem>\r\n                </Fragment>\r\n              );\r\n            })}\r\n        </List>\r\n\r\n        <List>\r\n          {atWorkInstructions &&\r\n            instructionBarButtons.crudButtons.map((item) => {\r\n              const { component, id } = item;\r\n              return (\r\n                <Fragment key={component.id}>\r\n                  <ListItem>{component}</ListItem>\r\n                </Fragment>\r\n              );\r\n            })}\r\n          {atLocations &&\r\n            locationsBarButtons.crudButtons.map((item) => {\r\n              const { component, id } = item;\r\n              return (\r\n                <Fragment key={component.id}>\r\n                  <ListItem>{component}</ListItem>\r\n                </Fragment>\r\n              );\r\n            })}\r\n          {atItemDetail &&\r\n            itemDetailsBarButtons.crudButtons.map((item) => {\r\n              const { component, id } = item;\r\n              return (\r\n                <Fragment key={component.id}>\r\n                  <ListItem>{component}</ListItem>\r\n                </Fragment>\r\n              );\r\n            })}\r\n\r\n          {atWorkInstructions &&\r\n            instructionBarButtons.navButtons.map((item) => {\r\n              const { component, id } = item;\r\n              return (\r\n                <Fragment key={component.id}>\r\n                  <ListItem>{component}</ListItem>\r\n                </Fragment>\r\n              );\r\n            })}\r\n          {atItemDetail &&\r\n            itemDetailsBarButtons.navButtons.map((item) => {\r\n              const { component, id } = item;\r\n              return (\r\n                <Fragment key={component.id}>\r\n                  <ListItem>{component}</ListItem>\r\n                </Fragment>\r\n              );\r\n            })}\r\n          {atLocations &&\r\n            locationsBarButtons.navButtons.map((item) => {\r\n              const { component, id } = item;\r\n              return (\r\n                <Fragment key={component.id}>\r\n                  <ListItem>{component}</ListItem>\r\n                </Fragment>\r\n              );\r\n            })}\r\n          {atApplicationDetail &&\r\n            applicationDetailBarButtons.actionButtons.map((item) => {\r\n              const { component, id } = item;\r\n              return (\r\n                <Fragment key={component.id}>\r\n                  <ListItem>{component}</ListItem>\r\n                </Fragment>\r\n              );\r\n            })}\r\n        </List>\r\n\r\n        <List>\r\n          {atLocations &&\r\n            locationsBarButtons.actionButtons.map((item) => {\r\n              const { component, id } = item;\r\n              return (\r\n                <>\r\n                  <ListItem key={id}>{component}</ListItem>\r\n                </>\r\n              );\r\n            })}\r\n\r\n          {atApplications &&\r\n            applicationsBarButtons.actionButtons.map((item) => {\r\n              const { component, id } = item;\r\n              return (\r\n                <>\r\n                  <ListItem key={id}>{component}</ListItem>\r\n                </>\r\n              );\r\n            })}\r\n          {atItemDetail &&\r\n            itemDetailsBarButtons.actionButtons.map((item) => {\r\n              const { component, id } = item;\r\n              return (\r\n                <>\r\n                  <ListItem key={id}>{component}</ListItem>\r\n                </>\r\n              );\r\n            })}\r\n          {atWorksheets &&\r\n            worksheetBarButtons.actionButtons.map((item) => {\r\n              const { component, id } = item;\r\n              return (\r\n                <>\r\n                  <ListItem key={id}>{component}</ListItem>\r\n                </>\r\n              );\r\n            })}\r\n          {atWorkInstructions &&\r\n            instructionBarButtons.actionButtons.map((item) => {\r\n              const { component, id } = item;\r\n              return (\r\n                <Fragment key={id}>\r\n                  <ListItem>{component}</ListItem>\r\n                </Fragment>\r\n              );\r\n            })}\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(NavDrawer);\r\n","/home/developer/Wpm/wpm-frontend/src/services/axiosApi.js",[],"/home/developer/Wpm/wpm-frontend/src/components/applications/ApplicationLocations.js",[],"/home/developer/Wpm/wpm-frontend/src/components/applications/ApplicationInstructionsList.js",[],"/home/developer/Wpm/wpm-frontend/src/components/applications/ApplicationBillItems.js",["419","420"],"import { AgGridReact } from \"ag-grid-react\";\nimport { ChangeDetectionStrategyType } from \"ag-grid-react/lib/changeDetectionService\";\nimport React, { Fragment, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useUpdateEffect } from \"react-use\";\nimport { appOrderItems, selectedLocation } from \"../../services/selectors\";\nimport CustomNoRowsOverlay from \"../grid/CustomNoRowsOverlay2\";\n\nfunction numFormatGrid(params) {\n\treturn params.value.toLocaleString(undefined, {\n\t\tminimumFractionDigits: 2,\n\t\tmaximumFractionDigits: 2,\n\t});\n}\n\nexport default function ApplicationBillItems() {\n\tconst allItems = useSelector(appOrderItems);\n\tconst location = useSelector(selectedLocation);\n\tconst [gridApi, setGridApi] = useState(null);\n\tconst [gridColumnApi, setGridColumnApi] = useState(null);\n\tconst items = location\n\t\t? allItems.filter((obj) => obj.location_ref === location.id)\n\t\t: allItems;\n\n\tconst columnDefs = [\n\t\t{\n\t\t\theaderName: \"Item Ref\",\n\t\t\tfield: \"item_number\",\n\t\t\tsort: \"asc\",\n\t\t\tmaxWidth: 120,\n\t\t},\n\t\t{headerName: \"Item Type\", field: \"item_type\", maxWidth: 120},\n\t\t{headerName: \"Location\", field: \"site_location\"},\n\t\t{\n\t\t\theaderName: \"Qty Ordered\",\n\t\t\tfield: \"qty_ordered\",\n\t\t\ttype: \"numericColumn\",\n\t\t\tmaxWidth: 120,\n\t\t\tvalueFormatter: numFormatGrid,\n\t\t},\n\t\t{\n\t\t\theaderName: \"Qty Applied\",\n\t\t\tfield: \"qty_applied\",\n\t\t\ttype: \"numericColumn\",\n\t\t\tmaxWidth: 120,\n\t\t\tvalueFormatter: numFormatGrid,\n\t\t},\n\t\t{headerName: \"Activity Code\", field: \"activity_code\", maxWidth: 150},\n\t\t{\n\t\t\theaderName: \"Activity Description\",\n\t\t\tfield: \"activity_description\",\n\t\t\tminWidth: 250,\n\t\t},\n\t\t{\n\t\t\theaderName: \"Application Labour\",\n\t\t\ttype: \"numericColumn\",\n\t\t\tfield: \"labour_value\",\n\t\t\tmaxWidth: 180,\n\t\t\tvalueFormatter: numFormatGrid,\n\t\t},\n\t\t{\n\t\t\theaderName: \"Application Materials\",\n\t\t\ttype: \"numericColumn\",\n\t\t\tfield: \"materials_value\",\n\t\t\tmaxWidth: 180,\n\t\t\tvalueFormatter: numFormatGrid,\n\t\t},\n\t\t{\n\t\t\theaderName: \"Application Value\",\n\t\t\ttype: \"numericColumn\",\n\t\t\tfield: \"applied_value\",\n\t\t\tmaxWidth: 180,\n\t\t\tcellStyle: {fontWeight: \"bold\"},\n\t\t\tvalueFormatter: numFormatGrid,\n\t\t},\n\t];\n\n\tlet defaultColDef = {\n\t\tfilter: true,\n\t\tsortable: true,\n\t\tresizable: true,\n\t\tflex: true,\n\t};\n\n\tlet gridOptions = {\n\t\tcolumnDefs: columnDefs,\n\t\tdefaultColDef: defaultColDef,\n\t\tpagination: true,\n\t\tpaginationPageSize: 10,\n\t\tdomLayout: \"autoHeight\",\n\t\tsuppressRowClickSelection: true,\n\t\tframeworkComponents: {\n\t\t\tcustomNoRowsOverlay: CustomNoRowsOverlay,\n\t\t},\n\t\tnoRowsOverlayComponent: \"customNoRowsOverlay\",\n\t\tnoRowsOverlayComponentParams: {\n\t\t\tnoRowsMessageFunc: function () {\n\t\t\t\treturn \"PLEASE SELECT A WORK INSTRUCTION\";\n\t\t\t},\n\t\t},\n\t};\n\n\tconst onGridReady = (params) => {\n\t\tsetGridApi(params.api);\n\t\tsetGridColumnApi(params.columnApi);\n\t\tparams.api.sizeColumnsToFit();\n\t};\n\n\tuseUpdateEffect(() => {\n\t\tconst filterInstance = gridApi.getFilterInstance(\"site_location\");\n\t\tif (location) {\n\t\t\tconsole.log(location.location_ref);\n\t\t\tfilterInstance.setModel({\n\t\t\t\tfilterType: \"text\",\n\t\t\t\ttype: \"equals\",\n\t\t\t\tfilter: location.location_ref\n\t\t\t});\n\t\t\tgridApi.onFilterChanged();\n\t\t} else {\n\t\t\tfilterInstance.setModel(null);\n\t\t\tgridApi.onFilterChanged();\n\t\t}\n\n\t}, [location]);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<hr/>\n\t\t\t<div className=\"grid-title\">APPLICATION ITEMS:</div>\n\n\t\t\t<div className=\"ag-theme-custom-react2\">\n\t\t\t\t<AgGridReact\n\t\t\t\t\tgridOptions={ gridOptions }\n\t\t\t\t\trowData={ allItems }\n\t\t\t\t\timmuntableData={ true }\n\t\t\t\t\tgetRowNodeId={ (data) => data.id }\n\t\t\t\t\tonGridReady={ onGridReady }\n\t\t\t\t\tonGridSizeChanged={ (params) => params.api.sizeColumnsToFit() }\n\t\t\t\t\trowDataChangeDetectionStrategy={\n\t\t\t\t\t\tChangeDetectionStrategyType.IdentityCheck\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n}\n","/home/developer/Wpm/wpm-frontend/src/components/applications/AvailableOrderList.js",[],"/home/developer/Wpm/wpm-frontend/src/components/ui-components/Buttons.js",[],"/home/developer/Wpm/wpm-frontend/src/components/applications/AvailableWorksheetsList.js",[],"/home/developer/Wpm/wpm-frontend/src/components/ui-components/CommercialCard.js",[],"/home/developer/Wpm/wpm-frontend/src/components/work-instructions/InstructionSummary.js",["421","422"],"import React, { Fragment } from \"react\";\nimport { CardDeck } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { selectAllInstructionDetails } from \"../../services/data/instructionDetailData\";\nimport SummaryCard from \"../ui-components/SummaryCard\";\nimport {selectOrderSummaryHeader, selectOrderSummaryDetails} from '../../services/selectors'\n\n\nconst numFormat = (num) => {\n\treturn num.toLocaleString(undefined, {\n\t\tminimumFractionDigits: 2,\n\t\tmaximumFractionDigits: 2,\n\t});\n};\n\nconst InstructionSummary = (props) => {\n\tconst orderDetail = useSelector(selectOrderSummaryDetails);\n\tconst projectTitle = useLocation().state;\n\tconst boqItems = orderDetail.filter(({item_type}) => item_type === \"BOQ\" || item_type === \"FREE\" || item_type === \"DIRECTS\");\n\tconst varnItems = orderDetail.filter(({item_type}) => item_type === \"VARN\");\n\tconst totalLabourValue = orderDetail.map(item => item[\"labour_total\"]).reduce((acc, item) => acc + item, 0);\n\tconst totalMaterialsValue = orderDetail.map(item => item[\"materials_total_incl_other_materials\"]).reduce((acc, item) => acc + item, 0);\n\tconst boqLabourValue = boqItems.map(item => item[\"labour_total\"]).reduce((acc, item) => acc + item, 0);\n\tconst boqMaterialsValue = boqItems.map(item => item[\"materials_total_incl_other_materials\"]).reduce((acc, item) => acc + item, 0);\n\tconst boqTotalValue = boqLabourValue + boqMaterialsValue;\n\tconst varnLabourValue = varnItems.map(item => item[\"labour_total\"]).reduce((acc, item) => acc + item, 0);\n\tconst varnMaterialsValue = varnItems.map(item => item[\"materials_total_incl_other_materials\"]).reduce((acc, item) => acc + item, 0);\n\tconst varnTotalValue = varnLabourValue + varnMaterialsValue;\n\tconst completedValue = orderDetail.map(item => item[\"value_complete\"]).reduce((acc, item) => acc + item, 0);\n\tconst appliedValue = orderDetail.map(item => item[\"value_applied\"]).reduce((acc, item) => acc + item, 0);\n\tconst totalPayable = totalLabourValue + totalMaterialsValue;\n\tconst valueToComplete = totalPayable - completedValue;\n\tconst valueToApply = completedValue - appliedValue;\n\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<hr/>\n\t\t\t<div className=\"grid-title\">{ projectTitle }</div>\n\t\t\t<hr/>\n\t\t\t<CardDeck>\n\t\t\t\t<SummaryCard\n\t\t\t\t\tcardTitle=\"Original Order Value:\"\n\t\t\t\t\tlabelTop={ \"Labour Value:\" }\n\t\t\t\t\tlabelMid={ \"Materials Value:\" }\n\t\t\t\t\tlabelBot={ \"Total Payable:\" }\n\t\t\t\t\tvalueTop={ numFormat(boqLabourValue) }\n\t\t\t\t\tvalueMid={ numFormat(boqMaterialsValue) }\n\t\t\t\t\tvalueBot={ numFormat(boqTotalValue) }\n\t\t\t\t/>\n\t\t\t\t<SummaryCard\n\t\t\t\t\tcardTitle=\"Variation Values:\"\n\t\t\t\t\tlabelTop={ \"Labour Value:\" }\n\t\t\t\t\tlabelMid={ \"Materials Value:\" }\n\t\t\t\t\tlabelBot={ \"Total Payable:\" }\n\t\t\t\t\tvalueTop={ numFormat(varnLabourValue) }\n\t\t\t\t\tvalueMid={ numFormat(varnMaterialsValue) }\n\t\t\t\t\tvalueBot={ numFormat(varnTotalValue) }\n\t\t\t\t/>\n\t\t\t\t<SummaryCard\n\t\t\t\t\tcardTitle=\"Current Order Values:\"\n\t\t\t\t\tlabelTop={ \"Labour Value:\" }\n\t\t\t\t\tlabelMid={ \"Materials Value:\" }\n\t\t\t\t\tlabelBot={ \"Total Payable:\" }\n\t\t\t\t\tvalueTop={ numFormat(totalLabourValue) }\n\t\t\t\t\tvalueMid={ numFormat(totalMaterialsValue) }\n\t\t\t\t\tvalueBot={ numFormat(totalPayable) }\n\t\t\t\t/>\n\t\t\t\t<SummaryCard\n\t\t\t\t\tcardTitle=\"Work Done Values:\"\n\t\t\t\t\tlabelTop={ \"Current Value:\" }\n\t\t\t\t\tlabelBot={ \"Value Complete:\" }\n\t\t\t\t\tlabelMid={ \"To Complete:\" }\n\t\t\t\t\tvalueTop={ numFormat(totalPayable) }\n\t\t\t\t\tvalueBot={ numFormat(completedValue) }\n\t\t\t\t\tvalueMid={ numFormat(valueToComplete) }\n\t\t\t\t/>\n\t\t\t\t<SummaryCard\n\t\t\t\t\tcardTitle=\"Application Values:\"\n\t\t\t\t\tlabelBot={ \"Value Applied:\" }\n\t\t\t\t\tlabelTop={ \"Value Complete:\" }\n\t\t\t\t\tlabelMid={ \"Not Applied:\" }\n\t\t\t\t\tvalueBot={ numFormat(appliedValue) }\n\t\t\t\t\tvalueTop={ numFormat(completedValue) }\n\t\t\t\t\tvalueMid={ numFormat(valueToApply) }\n\t\t\t\t/>\n\t\t\t</CardDeck>\n\t\t\t<hr/>\n\t\t</Fragment>\n\t);\n};\n\nexport default InstructionSummary;\n","/home/developer/Wpm/wpm-frontend/src/services/selectors.js",[],"/home/developer/Wpm/wpm-frontend/src/components/worksheets/WorksheetForm.js",["423","424","425","426","427","428"],"import Grid from \"@material-ui/core/Grid\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { useConfirm } from \"material-ui-confirm\";\nimport React, { useEffect, useState } from \"react\";\nimport FocusLock from \"react-focus-lock\";\nimport { useForm } from \"react-hook-form\";\nimport Loader from \"react-loader-spinner\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  resetEditedRow,\n  selectAllEditedRows,\n  setSelectedLocation,\n} from \"../../services/data/gridData\";\nimport { selectAllWorkInstructions } from \"../../services/data/InstructionData\";\nimport { selectAllSupervisors } from \"../../services/data/SupervisorsData\";\nimport { newWorksheet, updateInstructionDetail } from \"../../services/thunks\";\nimport { BlueButton, GreyButton } from \"../ui-components/Buttons\";\nimport { selectOrderSummaryHeader } from \"../../services/selectors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    margin: theme.spacing(4),\n  },\n  grid: {\n    flexGrow: 1,\n  },\n\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"45ch\",\n  },\n}));\n\nfunction toFixed(number, decimals) {\n  const x = Math.pow(10, Number(decimals) + 1);\n  return (Number(number) + 1 / x).toFixed(decimals);\n}\n\nconst WorksheetForm = (props) => {\n  const { register, handleSubmit, reset } = useForm();\n  const supervisors = useSelector(selectAllSupervisors);\n  const editedRows = useSelector(selectAllEditedRows);\n  const instructionId = useSelector(selectOrderSummaryHeader)[0].id;\n  const projectTitle = useSelector(selectOrderSummaryHeader)[0].project_title;\n  const classes = useStyles();\n  const confirm = useConfirm();\n  const dispatch = useDispatch();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onSubmit = (data) => {\n    const worksheetContainer = [];\n    const billItemContainer = [];\n\n    editedRows.forEach((item, index) => {\n      let worksheetObject = {};\n      let billItemObject = {};\n      worksheetObject.completed_by = value.id;\n      const {\n        location_ref,\n        qty_to_complete,\n        unit_materials_payable,\n        id,\n        unit_labour_payable,\n        unit_total_payable,\n        qty_os,\n      } = item;\n      worksheetObject.worksheet_ref = location_ref;\n      worksheetObject.item_ref = id;\n      worksheetObject.date_work_done = data.work_done_date;\n      worksheetObject.qty_complete = qty_to_complete;\n      worksheetObject.value_complete = toFixed(\n        unit_total_payable * qty_to_complete,\n        2\n      );\n      worksheetObject.materials_complete = toFixed(\n        unit_materials_payable * qty_to_complete,\n        2\n      );\n      worksheetObject.labour_complete = toFixed(\n        unit_labour_payable * qty_to_complete,\n        2\n      );\n\n      worksheetContainer.push(worksheetObject);\n      if (qty_os - qty_to_complete === 0) {\n        dispatch(\n          updateInstructionDetail({\n            id: id,\n            item_status: \"Closed\",\n            item_complete: true,\n          })\n        );\n      }\n    });\n    setIsLoading(true);\n    dispatch(newWorksheet(worksheetContainer)) //then(() => dispatch(fetchOrderSummaryInfo(instructionId)));\n      .then(() => closeAndReset());\n  };\n\n  const closeAndReset = () => {\n    dispatch(resetEditedRow());\n    props.handleHide();\n    setIsLoading(false);\n    history.push({\n      pathname: `/work-instructions/summary/locations/${instructionId}`,\n      state: projectTitle,\n    });\n  };\n\n  useEffect(() => {\n    reset();\n  }, [reset]);\n\n  return (\n    <FocusLock>\n      <form className={classes.grid}>\n        <Grid container spacing={2}>\n          <Grid item xs>\n            <TextField\n              variant=\"filled\"\n              margin=\"normal\"\n              inputRef={register({ required: true })}\n              fullWidth\n              type=\"date\"\n              label=\"WORK DONE DATE\"\n              name=\"work_done_date\"\n              InputLabelProps={{ shrink: true }}\n            />\n          </Grid>\n          <Grid item xs>\n            <Autocomplete\n              id=\"supervisor\"\n              options={supervisors}\n              value={inputValue.value}\n              onChange={(event, newValue) => {\n                setValue(newValue);\n              }}\n              getOptionLabel={(supervisors) =>\n                `${supervisors[\"first_name\"]}  ${supervisors[\"surname\"]}`\n              }\n              style={{ width: 300 }}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"SuperVisor\"\n                  variant=\"filled\"\n                  InputLabelProps={{ shrink: true }}\n                  name=\"supervisor\"\n                  inputRef={register({ required: true })}\n                />\n              )}\n            />\n          </Grid>\n        </Grid>\n        <hr />\n        <Grid container spacing={2}>\n          <Grid item xs>\n            <BlueButton onClick={handleSubmit(onSubmit)} fullWidth>\n              SUBMIT\n            </BlueButton>\n          </Grid>\n          <Grid item xs>\n            <GreyButton fullWidth onClick={() => reset()}>\n              RESET\n            </GreyButton>\n          </Grid>\n          <Grid item xs>\n            <GreyButton fullWidth onClick={closeAndReset}>\n              Close\n            </GreyButton>\n          </Grid>\n        </Grid>\n        <hr />\n      </form>\n      {isLoading && (\n        <Loader\n          style={{ textAlign: \"center\" }}\n          type={\"ThreeDots\"}\n          color=\"#366363\"\n        />\n      )}\n    </FocusLock>\n  );\n};\n\nexport default WorksheetForm;\n","/home/developer/Wpm/wpm-frontend/src/components/locations/LocationForm.js",[],"/home/developer/Wpm/wpm-frontend/src/components/grid/SimpleEditor.js",["429"],"import React, { forwardRef, useImperativeHandle, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n\nexport default forwardRef((props, ref) => {\n\tconst inputRef = useRef();\n\tconst dispatch = useDispatch();\n\n\tuseImperativeHandle(ref, () => {\n\t\treturn {\n\t\t\tgetValue: () => {\n\t\t\t\treturn inputRef.current.value.toFixed(2);\n\t\t\t}\n\t\t};\n\t});\n\treturn <input style={ {textAlign: \"right\", height: \"20px\", width: \"100px\"} } type=\"text\" ref={ inputRef }\n\t              defaultValue={ 0.00 }/>;\n});\n","/home/developer/Wpm/wpm-frontend/src/components/grid/CustomNoRowsOverlay2.js",[],"/home/developer/Wpm/wpm-frontend/src/components/grid/CustomLoadingOverlay.js",["430"],"import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nexport default (props) => {\n\treturn (\n\t\t<Loader\n\t\t\tstyle={ {textAlign: \"center\"} }\n\t\t\ttype={ \"ThreeDots\" }\n\t\t\tcolor=\"#366363\"\n\t\t/>\n\t);\n};\n","/home/developer/Wpm/wpm-frontend/src/components/work-instructions/InstructionForm.js",["431","432"],"import Grid from \"@material-ui/core/Grid\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { useEffect, useState } from \"react\";\nimport FocusLock from \"react-focus-lock\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useRendersCount } from \"react-use\";\nimport { selectAllAreas } from \"../../services/data/areaData\";\nimport { updateData } from \"../../services/data/FormData\";\nimport { setSelectedRow } from \"../../services/data/gridData\";\nimport { selectAllWorkTypes } from \"../../services/data/workTypesData\";\nimport {\n  newWorkInstruction,\n  updateWorkInstruction,\n  fetchAreas,\n} from \"../../services/thunks\";\nimport { fetchWorkTypes } from \"../../services/data/workTypesData\";\nimport { BlueButton, GreyButton } from \"../ui-components/Buttons\";\nimport { useEffectOnce } from \"react-use\";\n\n//TODO: AREA AND WORKTYPE DEFAULTS CLEAR ON FIRST RERENDER\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    margin: theme.spacing(4),\n  },\n  grid: {\n    flexGrow: 1,\n  },\n\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"45ch\",\n  },\n}));\n\nconst InstructionForm = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const initialData = useSelector((state) => state.gridData.selectedRow);\n  const { register, handleSubmit, reset } = useForm({\n    mode: \"onChange\",\n    defaultValues: getDefaultValues(),\n  });\n  const areas = useSelector(selectAllAreas);\n  const workTypes = useSelector(selectAllWorkTypes);\n\n  const [inputWorkType, setInputWorkType] = useState(initialData.work_type);\n  const [inputArea, setInputArea] = useState(initialData.area_description);\n\n  function getDefaultValues() {\n    if (props.formType === \"edit\") {\n      return {\n        work_instruction: initialData.work_instruction,\n        job_number: initialData.job_number,\n        project_title: initialData.project_title,\n        project_address: initialData.project_address,\n        issued_date: initialData.issued_date,\n        start_date: initialData.start_date,\n        end_date: initialData.end_date,\n        // work_type_description: initialData.work_type,\n        // area_description: initialData.area_description,\n        country: initialData.area_description,\n        notes: initialData.notes,\n      };\n    }\n  }\n\n  /* function getAreaId(data) {\n    return areas.filter((obj) => obj.area_description === inputArea);\n  }\n\n  function getWorkTypeId(data) {\n    return workTypes.filter(\n      (obj) => obj.work_type_description === inputWorkType\n    );\n  } */\n\n  const onSubmit = (data) => {\n    const area = areas.filter((obj) => obj[\"area_description\"] === inputArea);\n    const workType = workTypes.filter(\n      (obj) => obj[\"work_type_description\"] === inputWorkType\n    );\n    let apiObject = {\n      ...data,\n      project_type: workType[0].id,\n      area: area[0].id,\n      project_status: 1,\n    };\n\n    if (props.formType === \"create\") {\n      dispatch(newWorkInstruction(apiObject));\n      props.handleHide();\n      dispatch(setSelectedRow(false));\n    } else if (props.formType === \"edit\") {\n      apiObject = { ...apiObject, id: initialData.id };\n      dispatch(updateWorkInstruction(apiObject));\n      props.handleHide();\n      dispatch(setSelectedRow(false));\n    }\n  };\n\n  const closeAndReset = () => {\n    props.handleHide();\n    dispatch(setSelectedRow(false));\n  };\n\n  useEffectOnce(() => {\n    dispatch(fetchAreas());\n    dispatch(fetchWorkTypes());\n  });\n\n  useEffect(() => {\n    reset();\n  }, [reset]);\n\n  return (\n    <FocusLock>\n      <form className={classes.grid}>\n        <Grid container spacing={2}>\n          <Grid item xs>\n            <TextField\n              inputRef={register({\n                required: true,\n              })}\n              name=\"work_instruction\"\n              label=\"Instruction Reference\"\n              variant=\"filled\"\n              margin=\"normal\"\n              fullWidth\n              autoFocus\n            />\n          </Grid>\n          <Grid item xs>\n            <TextField\n              inputRef={register({ required: true })}\n              name=\"job_number\"\n              label=\"Job Number\"\n              variant=\"filled\"\n              margin=\"normal\"\n              fullWidth\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={2}>\n          <Grid item xs>\n            <TextField\n              inputRef={register({ required: true })}\n              name=\"project_title\"\n              label=\"Project Title\"\n              variant=\"filled\"\n              margin=\"normal\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs>\n            <TextField\n              inputRef={register({ required: false })}\n              name=\"project_address\"\n              label=\"Project Address\"\n              variant=\"filled\"\n              margin=\"normal\"\n              fullWidth\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={2}>\n          <Grid item xs>\n            <TextField\n              inputRef={register({ required: true })}\n              name=\"issued_date\"\n              label=\"Issued Date\"\n              variant=\"filled\"\n              margin=\"normal\"\n              type=\"date\"\n              fullWidth\n              InputLabelProps={{ shrink: true }}\n            />\n          </Grid>\n          <Grid item xs>\n            <TextField\n              inputRef={register({ required: true })}\n              name=\"start_date\"\n              label=\"Start Date\"\n              variant=\"filled\"\n              margin=\"normal\"\n              type=\"date\"\n              fullWidth\n              InputLabelProps={{ shrink: true }}\n            />\n          </Grid>\n          <Grid item xs>\n            <TextField\n              inputRef={register({ required: true })}\n              name=\"end_date\"\n              label=\"End Date\"\n              variant=\"filled\"\n              margin=\"normal\"\n              type=\"date\"\n              fullWidth\n              InputLabelProps={{ shrink: true }}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={2}>\n          <Grid item xs>\n            <Autocomplete\n              openOnFocus\n              options={workTypes}\n              getOptionLabel={(option) => option.work_type_description}\n              getOptionSelected={(option, values) => option._id === values._id}\n              onInputChange={(event, newInputValue) => {\n                setInputWorkType(newInputValue);\n                // dispatch(\n                //   updateData({ field: \"work_type\", value: newInputValue })\n                // );\n              }}\n              defaultValue={{ work_type_description: initialData.work_type }}\n              fullWidth\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  name=\"work_type_description\"\n                  label=\"Work Type\"\n                  variant=\"filled\"\n                  margin=\"normal\"\n                  // inputRef={register({ required: true })}\n                  InputLabelProps={{ shrink: true }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs>\n            <Autocomplete\n              openOnFocus\n              options={areas}\n              getOptionLabel={(option) => option[\"area_description\"]}\n              getOptionSelected={(option, values) => option._id === values._id}\n              onInputChange={(event, newInputValue) => {\n                setInputArea(newInputValue);\n                //    dispatch(\n                //    updateData({\n                //      field: \"area_description\",\n                //     value: newInputValue,\n                //     })\n                //  );\n              }}\n              defaultValue={{ area_description: initialData.area_description }}\n              fullWidth\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  name=\"area_description\"\n                  label=\"Area\"\n                  variant=\"filled\"\n                  margin=\"normal\"\n                  //    inputRef={register({ required: true })}\n                  InputLabelProps={{ shrink: true }}\n                />\n              )}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={2}>\n          <Grid item xs>\n            <TextField\n              inputRef={register({ required: false })}\n              name=\"notes\"\n              label=\"Notes\"\n              variant=\"filled\"\n              margin=\"normal\"\n              multiline\n              fullWidth\n              InputLabelProps={{ shrink: true }}\n            />\n          </Grid>\n        </Grid>\n        <hr />\n        <Grid container spacing={2}>\n          <Grid item xs>\n            <BlueButton onClick={handleSubmit(onSubmit)} fullWidth>\n              SUBMIT\n            </BlueButton>\n          </Grid>\n          <Grid item xs>\n            <GreyButton fullWidth onClick={() => reset()}>\n              RESET\n            </GreyButton>\n          </Grid>\n          <Grid item xs>\n            <GreyButton fullWidth onClick={closeAndReset}>\n              Close\n            </GreyButton>\n          </Grid>\n        </Grid>\n        <hr />\n      </form>\n    </FocusLock>\n  );\n};\nexport default InstructionForm;\n","/home/developer/Wpm/wpm-frontend/src/components/images/LocationImages.js",[],"/home/developer/Wpm/wpm-frontend/src/components/images/ImageForm.js",["433","434"],"import Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { useState } from \"react\";\nimport FocusLock from \"react-focus-lock\";\nimport { useForm } from \"react-hook-form\";\nimport Resizer from \"react-image-file-resizer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSelectedLocation } from \"../../services/data/gridData\";\nimport { newImage } from \"../../services/data/ImageData\";\nimport { BlueButton, GreyButton } from \"../ui-components/Buttons\";\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t\tmargin: theme.spacing(4),\n\t},\n\tgrid: {\n\t\tflexGrow: 1,\n\t},\n\n\ttextField: {\n\t\tmarginLeft: theme.spacing(1),\n\t\tmarginRight: theme.spacing(1),\n\t\twidth: \"45ch\",\n\t},\n}));\n\nconst ImageForm = (props) => {\n\tconst {register, handleSubmit, errors, reset} = useForm();\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\tconst [image, setImage] = useState();\n\tconst [imageResized, setImageResized] = useState();\n\tconst [imageType, setImageType] = useState();\n\n\tconst selectedLocation = useSelector(state => state.gridData.selectedLocation);\n\n\tconst imageTypeOptions = [\n\t\t{id: \"PRE\", description: \"Pre Construction Image\"},\n\t\t{id: \"POST\", description: \"Post Construction Image\"},\n\t\t{id: \"MISC\", description: \"Misc Image\"},\n\t];\n\n\tconst onSubmit = (data) => {\n\t\tconst {Title, ImageDate, ContentNotes, ImageFile} = data;\n\t\tlet formData = new FormData();\n\t\tformData.append(\"title\", Title);\n\t\tformData.append(\"date_image\", ImageDate);\n\t\tformData.append(\"notes\", ContentNotes);\n\t\tformData.append(\"construction_image\", image, image.name);\n\t\tformData.append(\"construction_image_resized\", imageResized, image.name);\n\t\tformData.append(\"image_type\", imageType.id);\n\t\tformData.append(\"location\", selectedLocation.id);\n\t\tdispatch(newImage(formData));\n\t\tcloseAndReset();\n\t};\n\tconst closeAndReset = () => {\n\t\tprops.handleHide();\n\t\tdispatch(setSelectedLocation(false));\n\t};\n\tconst onSelectImageFile = async event => {\n\t\tconst file = event.target.files[0];\n\t\tconst resizedImage = await resizeFile(file);\n\t\tsetImage(file);\n\t\tsetImageResized(resizedImage);\n\t};\n\n\tconst resizeFile = (file) => new Promise(resolve => {\n\t\tResizer.imageFileResizer(file, 1280, 720, \"JPEG\", 100, 0,\n\t\t\turi => {\n\t\t\t\tresolve(uri);\n\t\t\t},\n\t\t\t\"blob\"\n\t\t);\n\t});\n\n\treturn (\n\t\t<FocusLock>\n\t\t\t<form className={ classes.grid }>\n\t\t\t\t<TextField\n\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\tinputRef={ register({required: true}) }\n\t\t\t\t\tfullWidth\n\t\t\t\t\tlabel=\"Title\"\n\t\t\t\t\tname=\"Title\"\n\t\t\t\t\tautoFocus\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\tinputRef={ register({required: true}) }\n\t\t\t\t\tfullWidth\n\t\t\t\t\tlabel=\"Content Notes\"\n\t\t\t\t\tname=\"ContentNotes\"\n\t\t\t\t/>\n\t\t\t\t<Autocomplete\n\t\t\t\t\tid=\"image_type\"\n\t\t\t\t\toptions={ imageTypeOptions }\n\t\t\t\t\tonChange={ (event, newValue) => setImageType(newValue) }\n\t\t\t\t\tgetOptionLabel={ (option) => option.description }\n\t\t\t\t\tgetOptionSelected={ (option) => option.id }\n\t\t\t\t\trenderInput={ (params) => <TextField { ...params } label=\"Image Type\" variant=\"filled\"\n\t\t\t\t\t                                     name=\"ImageType\" inputRef={ register({required: true}) }/> }\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\tid=\"image_file\"\n\t\t\t\t\tinputRef={ register({required: true}) }\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tname=\"ImageFile\"\n\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\tonChange={ onSelectImageFile }\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"image_date\"\n\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\tinputRef={ register({required: true}) }\n\t\t\t\t\tfullWidth\n\t\t\t\t\ttype=\"date\"\n\t\t\t\t\tlabel=\"Image Date\"\n\t\t\t\t\tname=\"ImageDate\"\n\t\t\t\t\tInputLabelProps={ {shrink: true} }\n\t\t\t\t/>\n\n\t\t\t\t<hr/>\n\t\t\t\t<Grid container spacing={ 2 }>\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<BlueButton onClick={ handleSubmit(onSubmit) } fullWidth>\n\t\t\t\t\t\t\tSUBMIT\n\t\t\t\t\t\t</BlueButton>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<GreyButton fullWidth onClick={ () => reset() }>\n\t\t\t\t\t\t\tRESET\n\t\t\t\t\t\t</GreyButton>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<GreyButton fullWidth onClick={ closeAndReset }>\n\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t</GreyButton>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<hr/>\n\t\t\t</form>\n\t\t</FocusLock>\n\t);\n};\nexport default ImageForm;\n","/home/developer/Wpm/wpm-frontend/src/components/images/ApplicationImages.js",[],"/home/developer/Wpm/wpm-frontend/src/components/grid/CustomNoRowsOverlay.js",[],"/home/developer/Wpm/wpm-frontend/src/components/ui-components/SummaryCard.js",[],"/home/developer/Wpm/wpm-frontend/src/components/test/TestTableCube.js",["435","436","437","438","439","440","441"],"import React from \"react\";\nimport cubejs from \"@cubejs-client/core\";\nimport { QueryRenderer } from \"@cubejs-client/react\";\nimport { Spin } from \"antd\";\nimport {\n  CartesianGrid,\n  PieChart,\n  Pie,\n  Cell,\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  Legend,\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n} from \"recharts\";\n\nconst CartesianChart = ({ resultSet, children, ChartComponent }) => (\n  <ResponsiveContainer width={\"50%\"} height={400}>\n    <ChartComponent data={resultSet.chartPivot()}>\n      <XAxis dataKey=\"x\" />\n      <YAxis />\n      <CartesianGrid />\n      {children}\n      <Legend />\n      <Tooltip />\n    </ChartComponent>\n  </ResponsiveContainer>\n);\n\nconst colors = [\"#FF6492\", \"#141446\", \"#7A77FF\"];\n\nconst barRender = ({ resultSet }) => (\n  <CartesianChart resultSet={resultSet} ChartComponent={BarChart}>\n    {resultSet.seriesNames().map((series, i) => (\n      <Bar\n        key={series.key}\n        stackId=\"a\"\n        dataKey={series.key}\n        name={series.title}\n        fill={colors[i]}\n      />\n    ))}\n  </CartesianChart>\n);\n\nconst API_URL = \"http://localhost:4000\"; // change to your actual endpoint\n\nconst cubejsApi = cubejs(\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MDc2NjI1OTgsImV4cCI6MTYwNzc0ODk5OH0.WUAVdie3I1LgV-1ma6WNfec2BlHm7FkwzJuxhsKbThY\",\n  { apiUrl: API_URL + \"/cubejs-api/v1\" }\n);\n\nconst renderChart = (Component, pivotConfig) => ({ resultSet, error }) => {\n  return (\n    (resultSet && (\n      <Component resultSet={resultSet} pivotConfig={pivotConfig} />\n    )) ||\n    (error && error.toString()) || <Spin />\n  );\n};\n\nconst ByDate = () => {\n  return (\n    <QueryRenderer\n      query={{\n        measures: [\"Worksheet.valueComplete\"],\n        timeDimensions: [],\n        order: {\n          \"Worksheet.isoDate\": \"asc\",\n        },\n        dimensions: [\"Worksheet.isoDate\"],\n        filters: [],\n        segments: [],\n      }}\n      cubejsApi={cubejsApi}\n      render={renderChart(barRender, {\n        x: [\"Worksheet.isoDate\"],\n        y: [\"measures\"],\n        fillMissingDates: true,\n        joinDateRange: false,\n      })}\n    />\n  );\n};\n\nexport default ByDate;\n","/home/developer/Wpm/wpm-frontend/src/components/workload/WorkloadCharts.js",[],"/home/developer/Wpm/wpm-frontend/src/components/ui-components/WpmLogo.js",[],"/home/developer/Wpm/wpm-frontend/src/components/workload/WorkloadSummary.js",["442"],"import React from \"react\";\nimport { Card, CardDeck, Col, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffectOnce } from \"react-use\";\nimport { selectAllAreas } from \"../../services/data/areaData\";\nimport { fetchAreas } from \"../../services/thunks\";\nimport Color from \"color\";\n\nconst formatNumber = (value) =>\n  Math.floor(value)\n    .toString()\n    .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n\nconst WorkloadSummary = () => {\n  const dispatch = useDispatch();\n  const orderValues = useSelector(selectAllAreas).sort(function (a, b) {\n    return a[\"id\"] - b[\"id\"];\n  });\n\n  useEffectOnce(() => {\n    dispatch(fetchAreas());\n  });\n  return (\n    <div>\n      <h3 style={{ textAlign: \"center\" }}>CONTRACT WORKLOAD</h3>\n      <hr />\n      <CardDeck>\n        <Card style={{ backgroundColor: \"hsl(180, 20%, 75%)\" }}>\n          <Card.Body>\n            <Card.Title style={{ fontWeight: \"bold\", textAlign: \"center\" }}>\n              All Areas\n            </Card.Title>\n            <hr />\n            <Card.Text>\n              <Row className=\"mb-2\">\n                <Col>Order Book:</Col>\n                <Col\n                  style={{\n                    textAlign: \"right\",\n                  }}\n                >\n                  {formatNumber(\n                    orderValues\n                      .map((item) => item.order_value)\n                      .reduce((acc, item) => acc + item, 0)\n                  )}\n                </Col>\n              </Row>\n              <Row className=\"mb-2\">\n                <Col>Work Done:</Col>\n                <Col\n                  style={{\n                    textAlign: \"right\",\n                  }}\n                >\n                  {formatNumber(\n                    orderValues\n                      .map((item) => item[\"complete_value\"])\n                      .reduce((acc, item) => acc + item, 0)\n                  )}\n                </Col>\n              </Row>\n\n              <Row className=\"mb-2\">\n                <Col>Applied Value:</Col>\n                <Col\n                  style={{\n                    textAlign: \"right\",\n                  }}\n                >\n                  {formatNumber(\n                    orderValues\n                      .map((item) => item[\"applied_value\"])\n                      .reduce((acc, item) => acc + item, 0)\n                  )}\n                </Col>\n              </Row>\n              <Row>\n                <Col>To Apply For:</Col>\n                <Col\n                  style={{\n                    textAlign: \"right\",\n                  }}\n                >\n                  {formatNumber(\n                    orderValues\n                      .map(\n                        (item) => item[\"complete_value\"] - item[\"applied_value\"]\n                      )\n                      .reduce((acc, item) => acc + item, 0)\n                  )}\n                </Col>\n              </Row>\n            </Card.Text>\n          </Card.Body>\n          <Card.Footer>\n            <Row>\n              <Col style={{ fontWeight: \"bold\" }}>Work To Do:</Col>\n              <Col\n                style={{\n                  textAlign: \"right\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                {formatNumber(\n                  orderValues\n                    .map((item) => item.order_value - item[\"complete_value\"])\n                    .reduce((acc, item) => acc + item, 0)\n                )}\n              </Col>\n            </Row>\n          </Card.Footer>\n        </Card>\n        {orderValues.map((item) => {\n          const {\n            order_value,\n            applied_value,\n            complete_value,\n            area_description,\n            id,\n          } = item;\n          return (\n            <Card style={{ backgroundColor: \"hsl(180, 20%, 75%)\" }} key={id}>\n              <Card.Body>\n                <Card.Title\n                  style={{\n                    fontWeight: \"bold\",\n                    textAlign: \"center\",\n                    paddingLeft: \"20px\",\n                    paddingRight: \"20px\",\n                  }}\n                >\n                  {area_description}\n                </Card.Title>\n                <hr />\n                <Card.Text>\n                  <Row className=\"mb-2\">\n                    <Col>Order Book:</Col>\n                    <Col style={{ textAlign: \"right\" }}>\n                      {formatNumber(order_value)}\n                    </Col>\n                  </Row>\n                  <Row className=\"mb-2\">\n                    <Col>Work Done:</Col>\n                    <Col style={{ textAlign: \"right\" }}>\n                      {formatNumber(complete_value)}\n                    </Col>\n                  </Row>\n\n                  <Row className=\"mb-2\">\n                    <Col>Applied Value:</Col>\n                    <Col style={{ textAlign: \"right\" }}>\n                      {formatNumber(applied_value)}\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>To Apply For:</Col>\n                    <Col style={{ textAlign: \"right\" }}>\n                      {formatNumber(complete_value - applied_value)}\n                    </Col>\n                  </Row>\n                </Card.Text>\n              </Card.Body>\n              <Card.Footer>\n                <Row>\n                  <Col style={{ fontWeight: \"bold\" }}>Work To Do:</Col>\n                  <Col\n                    style={{\n                      textAlign: \"right\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    {formatNumber(order_value - complete_value)}\n                  </Col>\n                </Row>\n              </Card.Footer>\n            </Card>\n          );\n        })}\n      </CardDeck>\n    </div>\n  );\n};\n\nexport default WorkloadSummary;\n","/home/developer/Wpm/wpm-frontend/src/components/documents/DocumentsList.js",[],"/home/developer/Wpm/wpm-frontend/src/components/documents/DocumentForm.js",["443","444","445","446","447"],"import Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useState } from \"react\";\nimport FocusLock from \"react-focus-lock\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { newDocument, selectAllInstructionHeaders } from \"../../services/thunks\";\n//import { updateData } from \"../forms/FormData\";\nimport { BlueButton, GreyButton } from \"../ui-components/Buttons\";\nimport {selectOrderSummaryHeader} from \"../../services/selectors\";\n\n\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\talignItems: \"left\",\n\t},\n\tform: {\n\t\twidth: \"100%\", // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing(1),\n\t},\n\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n}));\n\nconst DocumentForm = (props) => {\n\n\tconst {register, handleSubmit, errors, reset} = useForm();\n\tconst classes = useStyles();\n\tconst [document, setDocument] = useState({\n\t\tdocument_title: \"\",\n\t\tdocument: null,\n\t});\n\tconst instructionId = useSelector(selectOrderSummaryHeader)[0].id;\n\tconst dispatch = useDispatch();\n\tconst onSubmit = data => {\n\n\t\tprepareDocumentData(data);\n\t};\n\tconst prepareDocumentData = (data) => {\n\t\tconst {Title, DocumentFile} = data;\n\t\tlet form_data = new FormData;\n\t\tform_data.append(\"document\", DocumentFile[0], DocumentFile[0].name);\n\t\tform_data.append(\"document_title\", Title);\n\t\tform_data.append(\"work_instruction\", instructionId);\n\t\tdispatch(newDocument(form_data));\n\t\tcloseAndReset();\n\n\t};\n\tconst closeAndReset = () => {\n\t\tprops.handleHide();\n\n\t};\n\n\treturn (\n\t\t<FocusLock>\n\t\t\t<form className={ classes.grid }>\n\t\t\t\t<Grid container spacing={ 2 }>\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tinputRef={ register({required: true}) }\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tlabel=\"Title\"\n\t\t\t\t\t\t\tname=\"Title\"\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid container spacing={ 2 }>\n\t\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\tinputRef={ register({required: true}) }\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tlabel=\"Upload File\"\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tname=\"DocumentFile\"\n\t\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\t\tInputLabelProps={ {shrink: true} }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<hr/>\n\t\t\t\t<Grid container spacing={ 2 }>\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<BlueButton onClick={ handleSubmit(onSubmit) } fullWidth>\n\t\t\t\t\t\t\tSUBMIT\n\t\t\t\t\t\t</BlueButton>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<GreyButton fullWidth onClick={ () => reset() }>\n\t\t\t\t\t\t\tRESET\n\t\t\t\t\t\t</GreyButton>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<GreyButton fullWidth onClick={ closeAndReset }>\n\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t</GreyButton>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<hr/>\n\t\t\t</form>\n\t\t</FocusLock>\n\t);\n\n};\nexport default DocumentForm;\n","/home/developer/Wpm/wpm-frontend/src/components/bill-items/BillItemForm.js",["448","449","450","451","452","453"],"import Grid from \"@material-ui/core/Grid\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { useState } from \"react\";\nimport FocusLock from \"react-focus-lock\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffectOnce } from \"react-use\";\nimport { selectAllActivities } from \"../../services/data/activityData\";\nimport { selectAllInstructionDetails } from \"../../services/data/instructionDetailData\";\nimport { selectAllLocations } from \"../../services/data/locationData\";\nimport {\n  fetchActivities,\n  newInstructionDetail,\n  selectAllInstructionHeaders,\n  updateInstructionDetail,\n  updateWorkInstruction,\n} from \"../../services/thunks\";\nimport { BlueButton, GreyButton } from \"../ui-components/Buttons\";\nimport {\n  selectOrderSummaryHeader,\n  selectOrderSummaryDetails,\n  selectOrderSummaryLocations,\n  selectedBillItem,\n} from \"../../services/selectors\";\nimport { setSelectedBillItem } from \"../../services/data/gridData\";\n\n//TODO EDIT BILL ITEM\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    margin: theme.spacing(4),\n  },\n  grid: {\n    flexGrow: 1,\n  },\n\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"45ch\",\n  },\n}));\n\nfunction niceNumber(value) {\n  return value.toLocaleString(undefined, {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  });\n}\n\nconst roundNumber = (number) =>\n  Math.round((number + Number.EPSILON) * 100) / 100;\n\nconst BillItemForm = (props) => {\n  const nextItem =\n    useSelector(selectOrderSummaryDetails)\n      .map((item) => item[\"item_number\"])\n      .reduce((a, b) => Math.max(a, b), 0) + 1;\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const selectedItem = useSelector((state) => state.gridData.selectedBillItem);\n\n  const defaultValues =\n    props.formType === \"create\"\n      ? {\n          item_number: nextItem,\n          location_ref: \"\",\n          activity_code: \"\",\n          item_type: \"\",\n        }\n      : {\n          item_number: selectedItem.item_number,\n          location_ref: selectedItem.site_location,\n          activity_code: selectedItem.activity_code,\n          item_type: selectedItem.item_type,\n          qty_ordered: selectedItem.qty_ordered.toFixed(2),\n          materials_base: selectedItem.materials_base.toFixed(2),\n        };\n\n  const { register, handleSubmit, reset } = useForm({\n    defaultValues: defaultValues,\n  });\n\n  const instructionLocations = useSelector(selectOrderSummaryLocations);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [value, setValue] = useState({\n    location: \"\",\n    item_type: \"\",\n    activity_code: \"\",\n  });\n  const itemTypeOptions = [\n    { id: \"BOQ\", description: \"Original Bill Item\" },\n    { id: \"VARN\", description: \"Variation\" },\n    { id: \"MISC\", description: \"Misc\" },\n    { id: \"FREE\", description: \"Free\" },\n    { id: \"DIRECT\", description: \"Direct\" },\n  ];\n\n  const activityOptions = useSelector(selectAllActivities);\n\n  const instruction = useSelector(selectOrderSummaryHeader);\n\n  const onSubmit2 = ({\n    item_number,\n    qty_ordered,\n    materials_base,\n    activity_code,\n    item_type,\n    location_ref,\n  }) => {\n    const labourBase = roundNumber(\n      qty_ordered *\n        activityOptions.filter((obj) => obj.activity_code === activity_code)[0]\n          .labour_base\n    );\n    const labourUplift = roundNumber(\n      qty_ordered *\n        activityOptions.filter((obj) => obj.activity_code === activity_code)[0]\n          .labour_uplift\n    );\n    const labourTotal = roundNumber(labourBase + labourUplift);\n    const unitLabour = roundNumber(labourTotal / qty_ordered);\n    const otherMaterials = activityOptions.filter(\n      (obj) => obj.activity_code === activity_code\n    )[0].materials_other;\n    const materialsBase = parseFloat(materials_base);\n    const materialsUplift = roundNumber(materialsBase * 0.05);\n    const materialsTotalExclOtherMaterials = roundNumber(\n      materialsBase + materialsUplift\n    );\n    const materialsTotalInclOtherMaterials = roundNumber(\n      materialsTotalExclOtherMaterials + otherMaterials\n    );\n    const unitMaterialsPayable = roundNumber(\n      materialsTotalInclOtherMaterials / qty_ordered\n    );\n    const totalPayable = roundNumber(\n      labourTotal + materialsTotalInclOtherMaterials\n    );\n    const unitTotalPayable = roundNumber(totalPayable / qty_ordered);\n    const apiObject = {\n      work_instruction: instruction[0].work_instruction,\n      location_ref: instructionLocations.filter(\n        (obj) => obj.location_ref === location_ref\n      )[0].id,\n      item_number: item_number,\n      item_type: value.item_type.id,\n      activity_ref: activityOptions.filter(\n        (obj) => obj.activity_code === activity_code\n      )[0].id,\n      qty_ordered: qty_ordered,\n      labour_base: labourBase,\n      labour_uplift: labourUplift,\n      labour_total: labourTotal,\n      unit_labour_payable: unitLabour,\n      materials_base: materialsBase,\n      materials_uplift: materialsUplift,\n      materials_total_excl_other_materials: materialsTotalExclOtherMaterials,\n      materials_other: value.activity_code.materials_other,\n      materials_total_incl_other_materials: materialsTotalInclOtherMaterials,\n      unit_materials_payable: unitMaterialsPayable,\n      total_payable: totalPayable,\n      unit_total_payable: unitTotalPayable,\n    };\n    if (props.formType === \"create\") {\n      dispatch(newInstructionDetail(apiObject));\n      props.handleHide();\n    } else if (props.formType === \"edit\") {\n      dispatch(updateInstructionDetail({ ...apiObject, id: selectedItem.id }));\n      dispatch(\n        updateWorkInstruction({\n          id: instruction[0].id,\n          order_value:\n            instruction[0].order_value -\n            selectedItem.total_payable +\n            apiObject.total_payable,\n        })\n      );\n      props.handleHide();\n    }\n  };\n\n  /* const onSubmit = ({\n    item_number,\n    qty_ordered,\n    materials_base,\n    activity_code,\n    item_type,\n    location_ref,\n  }) => {\n    const labourBase = roundNumber(\n      qty_ordered * value.activity_code.labour_base\n    );\n    const labourUplift = roundNumber(\n      qty_ordered * value.activity_code.labour_uplift\n    );\n    const labourTotal = roundNumber(labourBase + labourUplift);\n    const unitLabour = roundNumber(labourTotal / qty_ordered);\n    const otherMaterials = value.activity_code.materials_other;\n    const materialsBase = parseFloat(materials_base);\n    const materialsUplift = roundNumber(materialsBase * 0.05);\n    const materialsTotalExclOtherMaterials = roundNumber(\n      materialsBase + materialsUplift\n    );\n    const materialsTotalInclOtherMaterials = roundNumber(\n      materialsTotalExclOtherMaterials + otherMaterials\n    );\n    const unitMaterialsPayable = roundNumber(\n      materialsTotalInclOtherMaterials / qty_ordered\n    );\n    const totalPayable = roundNumber(\n      labourTotal + materialsTotalInclOtherMaterials\n    );\n    const unitTotalPayable = roundNumber(totalPayable / qty_ordered);\n    const apiObject = {\n      work_instruction: instruction[0].work_instruction,\n      location_ref: value.location.id,\n      item_number: item_number,\n      item_type: value.item_type.id,\n      activity_ref: value.activity_code.id,\n      qty_ordered: qty_ordered,\n      labour_base: labourBase,\n      labour_uplift: labourUplift,\n      labour_total: labourTotal,\n      unit_labour_payable: unitLabour,\n      materials_base: materialsBase,\n      materials_uplift: materialsUplift,\n      materials_total_excl_other_materials: materialsTotalExclOtherMaterials,\n      materials_other: value.activity_code.materials_other,\n      materials_total_incl_other_materials: materialsTotalInclOtherMaterials,\n      unit_materials_payable: unitMaterialsPayable,\n      total_payable: totalPayable,\n      unit_total_payable: unitTotalPayable,\n    };\n    if (props.formType === \"create\") {\n      dispatch(newInstructionDetail(apiObject));\n      closeAndReset();\n    } else if (props.formType === \"edit\") {\n      dispatch(updateInstructionDetail({ ...apiObject, id: selectedItem.id }));\n\n      closeAndReset();\n    }\n  }; */\n\n  const closeAndReset = () => {\n    props.handleHide();\n  };\n\n  useEffectOnce(() => {\n    dispatch(fetchActivities());\n    return () => dispatch(setSelectedBillItem(false));\n  });\n\n  return (\n    <FocusLock>\n      <form className={classes.grid}>\n        <Grid container spacing={2}>\n          <Grid item xs>\n            <TextField\n              inputRef={register({\n                required: true,\n              })}\n              name=\"item_number\"\n              label=\"Item Number\"\n              variant=\"filled\"\n              margin=\"normal\"\n              fullWidth\n              autoFocus\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={2}>\n          <Grid item xs>\n            <Autocomplete\n              openOnFocus\n              options={instructionLocations}\n              value={inputValue.location}\n              onChange={(event, newValue) => {\n                setValue((prevState) => ({ ...prevState, location: newValue }));\n              }}\n              getOptionSelected={(option, values) => option._id === values._id}\n              defaultValue={{ location_ref: selectedItem.site_location }}\n              getOptionLabel={(option) => option.location_ref}\n              fullWidth\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Location\"\n                  variant=\"filled\"\n                  margin=\"normal\"\n                  InputLabelProps={{ shrink: true }}\n                  name=\"location_ref\"\n                  inputRef={register({ required: true })}\n                />\n              )}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={2}>\n          <Grid item xs>\n            <Autocomplete\n              options={itemTypeOptions}\n              openOnFocus\n              getOptionLabel={(option) => option.description}\n              getOptionSelected={(option, values) => option._id === values._id}\n              onChange={(event, newValue) => {\n                setValue((prevState) => ({\n                  ...prevState,\n                  item_type: newValue,\n                }));\n              }}\n              fullWidth\n              defaultValue={{ description: selectedItem.item_type }}\n              value={inputValue.itemType}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Item Type\"\n                  variant=\"filled\"\n                  name=\"item_type\"\n                  InputLabelProps={{ shrink: true }}\n                  inputRef={register({ required: true })}\n                  margin=\"normal\"\n                />\n              )}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={2}>\n          <Grid item xs>\n            <Autocomplete\n              options={activityOptions}\n              openOnFocus\n              getOptionLabel={(option) => option.activity_code}\n              /* getOptionLabel={(option) =>\n                `${option[\"activity_code\"]} / ${option[\"activity_description\"]}`\n\t\t\t  }\n\t\t\t  getOptionSelected={(option, values) => option._id === values._id} */\n              onChange={(event, newValue) => {\n                setValue((prevState) => ({\n                  ...prevState,\n                  activity_code: newValue,\n                }));\n              }}\n              fullWidth\n              defaultValue={{ activity_code: selectedItem.activity_code }}\n              value={inputValue.activityCode}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Activity Code\"\n                  variant=\"filled\"\n                  name=\"activity_code\"\n                  InputLabelProps={{ shrink: true }}\n                  inputRef={register({ required: true })}\n                  margin=\"normal\"\n                />\n              )}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={2}>\n          <Grid item xs>\n            <TextField\n              variant=\"filled\"\n              margin=\"normal\"\n              inputRef={register({ required: true })}\n              fullWidth\n              type=\"number\"\n              step=\"0.01\"\n              label=\"Qty Ordered\"\n              name=\"qty_ordered\"\n              defaultValue=\"0.00\"\n            />\n          </Grid>\n          <Grid item xs>\n            <TextField\n              variant=\"filled\"\n              margin=\"normal\"\n              inputRef={register({ required: true })}\n              fullWidth\n              type=\"number\"\n              step=\"0.01\"\n              label=\"Materials Pack Value\"\n              name=\"materials_base\"\n              defaultValue=\"0.00\"\n            />\n          </Grid>\n        </Grid>\n        <hr />\n        <Grid container spacing={2}>\n          <Grid item xs>\n            <BlueButton onClick={handleSubmit(onSubmit2)} fullWidth>\n              SUBMIT\n            </BlueButton>\n          </Grid>\n          <Grid item xs>\n            <GreyButton fullWidth onClick={() => reset()}>\n              RESET\n            </GreyButton>\n          </Grid>\n          <Grid item xs>\n            <GreyButton fullWidth onClick={closeAndReset}>\n              Close\n            </GreyButton>\n          </Grid>\n        </Grid>\n        <hr />\n      </form>\n    </FocusLock>\n  );\n};\n\nexport default BillItemForm;\n","/home/developer/Wpm/wpm-frontend/src/CustomNoRowsOverlay.js",[],"/home/developer/Wpm/wpm-frontend/src/components/charts/WeeklyWorkDoneByArea.js",["454","455"],"import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { WeeklyWorkByArea } from \"../../services/selectors\";\n\nconst numFormatGrid = (value) => {\n  return value.toLocaleString(undefined, {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  });\n};\n\nconst WeeklyWorkDoneByArea = () => {\n  const data = useSelector(WeeklyWorkByArea);\n  const week_number = data.map((item) => item.week)[0];\n  const year_number = data.map((item) => item.year)[0];\n\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title style={{ textAlign: \"center\", fontWeight: \"bold\" }}>\n          Weekly Value By Area\n        </Card.Title>\n        <ResponsiveContainer height={375} width=\"100%\">\n          <BarChart\n            data={data}\n             margin={{\n              top: 0,\n              right: 0,\n              left: 0,\n              bottom: 15,\n            }} \n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"area_name\" label={{ value: 'Area', position: 'bottom', offset: 0 }} />\n            <YAxis />\n            <Tooltip formatter={(value, name, props) => numFormatGrid(value)} />\n            {/* <Legend /> */}\n            <Bar\n              dataKey=\"value\"\n              fill=\"hsl(235, 94%, 25%)\"\n              \n              //  onClick={(event) => alert(JSON.stringify(event.payload))}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default WeeklyWorkDoneByArea;\n","/home/developer/Wpm/wpm-frontend/src/components/charts/WeeklyWorkDoneBySupervisor.js",["456","457"],"import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { WeeklyWorkBySupervisor } from \"../../services/selectors\";\n\nconst numFormatGrid = (value) => {\n  return value.toLocaleString(undefined, {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  });\n};\n\nconst WeeklyWorkDoneBySupervisor = () => {\n  const data = useSelector(WeeklyWorkBySupervisor);\n  const week_number = data.map((item) => item.week)[0];\n  const year_number = data.map((item) => item.year)[0];\n\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title style={{ textAlign: \"center\", fontWeight: \"bold\" }}>\n          Weekly Value By Supervisor\n        </Card.Title>\n        <ResponsiveContainer height={375} width=\"100%\">\n          <BarChart\n            data={data}\n            margin={{\n              top: 0,\n              right: 0,\n              left: 0,\n              bottom: 15,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis\n              dataKey=\"supervisor\"\n              label={{ value: \"Supervisor\", position: \"bottom\", offset: 0 }}\n            />\n            <YAxis />\n            <Tooltip formatter={(value, name, props) => numFormatGrid(value)} />\n            {/* <Legend /> */}\n            <Bar dataKey=\"value\" fill=\"hsl(180, 50%, 15%)\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default WeeklyWorkDoneBySupervisor;\n","/home/developer/Wpm/wpm-frontend/src/components/charts/WeeklyWorkDoneByWorkType.js",["458","459"],"import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { WeeklyWorkByWorkType } from \"../../services/selectors\";\n\nconst numFormatGrid = (value) => {\n  return value.toLocaleString(undefined, {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  });\n};\n\nconst WeeklyWorkDoneByWorkType = () => {\n  const data = useSelector(WeeklyWorkByWorkType);\n  const week_number = data.map((item) => item.week)[0];\n  const year_number = data.map((item) => item.year)[0];\n\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title style={{ textAlign: \"center\", fontWeight: \"bold\" }}>\n          Weekly Value By Work Type\n        </Card.Title>\n        <ResponsiveContainer height={375} width=\"100%\">\n          <BarChart\n             data={data}\n             margin={{\n               top: 0,\n               right: 0,\n               left: 0,\n               bottom: 15,\n             }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"workType\" label={{ value: 'Work Type', position: 'bottom', offset: 0 }} />\n            <YAxis />\n            <Tooltip formatter={(value, name, props) => numFormatGrid(value)} />\n            {/* <Legend /> */}\n            <Bar dataKey=\"value\" fill=\"hsl(300, 79%, 11%)\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default WeeklyWorkDoneByWorkType;\n","/home/developer/Wpm/wpm-frontend/src/components/charts/WeeklyWorkDoneByWorkInstruction.js",["460","461"],"import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { WeeklyWorkByWorkInstruction } from \"../../services/selectors\";\n\nconst numFormatGrid = (value) => {\n  return value.toLocaleString(undefined, {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  });\n};\n\nconst WeeklyWorkDoneByWorkInstruction = () => {\n  const data = useSelector(WeeklyWorkByWorkInstruction);\n  const week_number = data.map((item) => item.week)[0];\n  const year_number = data.map((item) => item.year)[0];\n\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title style={{ textAlign: \"center\", fontWeight: \"bold\" }}>\n          Weekly Value By Work Instruction\n        </Card.Title>\n        <ResponsiveContainer height={375} width=\"100%\">\n          <BarChart\n             data={data}\n             margin={{\n               top: 0,\n               right: 0,\n               left: 0,\n               bottom: 15,\n             }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"work_instruction\" label={{ value: 'Work Instruction', position: 'bottom', offset: 0 }} />\n            <YAxis />\n            <Tooltip formatter={(value, name, props) => numFormatGrid(value)} />\n            {/* <Legend /> */}\n            <Bar dataKey=\"value\" fill=\"hsl(0, 0%, 25%)\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default WeeklyWorkDoneByWorkInstruction;\n","/home/developer/Wpm/wpm-frontend/src/components/test/chart-js/AppliedValueByApplication.js",["462","463","464","465","466","467","468","469"],"import React from \"react\";\nimport cubejs from \"@cubejs-client/core\";\nimport { QueryRenderer } from \"@cubejs-client/react\";\nimport { Spin } from \"antd\";\nimport {Card} from \"react-bootstrap\";\nimport {\n  CartesianGrid,\n  PieChart,\n  Pie,\n  Cell,\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  Legend,\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n} from \"recharts\";\n\nconst CartesianChart = ({ resultSet, children, ChartComponent }) => (\n  <ResponsiveContainer height={400} width={\"50%\"}>\n    <ChartComponent data={resultSet.chartPivot()}>\n      <XAxis dataKey=\"x\" />\n      <YAxis />\n      <CartesianGrid />\n      {children}\n      <Legend />\n      <Tooltip />\n    </ChartComponent>\n  </ResponsiveContainer>\n);\n\nconst colors = [\"#FF6492\", \"#141446\", \"#7A77FF\"];\n\nconst barRender = ({ resultSet }) => (\n  <CartesianChart resultSet={resultSet} ChartComponent={BarChart}>\n    {resultSet.seriesNames().map((series, i) => (\n      <Bar\n        key={series.key}\n        stackId=\"a\"\n        dataKey={series.key}\n        name={series.title}\n        fill={colors[i]}\n      />\n    ))}\n  </CartesianChart>\n);\n\nconst API_URL = \"http://localhost:4000\"; // change to your actual endpoint\n\nconst cubejsApi = cubejs(\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MDc2NjI1OTgsImV4cCI6MTYwNzc0ODk5OH0.WUAVdie3I1LgV-1ma6WNfec2BlHm7FkwzJuxhsKbThY\",\n  { apiUrl: API_URL + \"/cubejs-api/v1\" }\n);\n\nconst renderChart = (Component, pivotConfig) => ({ resultSet, error }) => {\n  return (\n    (resultSet && (\n      <Component resultSet={resultSet} pivotConfig={pivotConfig} />\n    )) ||\n    (error && error.toString()) || <Spin />\n  );\n};\n\nconst AppliedByApplication = () => {\n  return (\n    <QueryRenderer\n      query={{\n        measures: [\"Application.appliedValue\"],\n        timeDimensions: [],\n        order: {\n          \"Application.appRef\": \"asc\",\n        },\n        dimensions: [\"Application.appRef\"],\n        filters: [],\n        segments: [],\n      }}\n      cubejsApi={cubejsApi}\n      render={renderChart(barRender, {\n        x: [\"Application.appRef\"],\n        y: [\"measures\"],\n        fillMissingDates: true,\n        joinDateRange: false,\n      })}\n    />\n  );\n};\n\nexport default AppliedByApplication;\n","/home/developer/Wpm/wpm-frontend/src/components/test/chart-js/DrillDownTest.js",["470","471"],"import React, { useEffect, useState } from \"react\";\nimport { useCubeQuery } from \"@cubejs-client/react\";\nimport {\n  BarChart,\n  Bar,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip as RechartsTooltip,\n  Legend\n} from \"recharts\";\n\nconst colors = [\"#FF6492\", \"#141446\", \"#7A77FF\"];\n\nconst query = {\n  measures: [\"Worksheet.count\"],\n  dimensions: [\"Worksheet.iso_date\"],\n  timeDimensions: [{\n    dimension: \"Worksheet.dateWorkDone\",\n    granularity: \"day\",\n    dateRange: \"last 90 days\"\n  }]\n};\n\nconst DrillDownExample = () => {\n  const { resultSet } = useCubeQuery(query);\n\n  if (!resultSet) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <BarChart data={resultSet.chartPivot()}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"x\" />\n          <YAxis />\n          <RechartsTooltip />\n          <Legend />\n          {resultSet.seriesNames().map(({ key }, index) => {\n            return (\n              <Bar\n                key={key}\n                dataKey={key}\n                stackId=\"a\"\n                fill={colors[index]}\n              />\n            );\n          })}\n        </BarChart>\n      </ResponsiveContainer>\n    </>\n  );\n}\n\nexport default DrillDownExample;","/home/developer/Wpm/wpm-frontend/src/components/commercial/CommercialSummary.js",[],"/home/developer/Wpm/wpm-frontend/src/components/commercial/AppliedValueByApplication.js",["472","473"],"import React from \"react\";\nimport cubejs from \"@cubejs-client/core\";\nimport { QueryRenderer } from \"@cubejs-client/react\";\nimport { Spin } from \"antd\";\nimport { Line, Bar, Pie } from \"react-chartjs-2\";\n\nconst COLORS_SERIES = [\"#366363\", \"#141446\", \"#7A77FF\"];\n\nconst barRender = ({ resultSet }) => {\n  const data = {\n    labels: resultSet.categories().map((c) => c.category),\n    datasets: resultSet.series().map((s, index) => ({\n      label: s.title,\n      data: s.series.map((r) => r.value),\n      backgroundColor: COLORS_SERIES[index],\n      fill: false,\n    })),\n  };\n  const options = {\n    scales: { xAxes: [{ stacked: true }] },\n  };\n  return <Bar data={data} options={options} />;\n};\n\nconst API_URL = \"http://localhost:4000\"; // change to your actual endpoint\n\nconst cubejsApi = cubejs(\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MDc5MDQzMjcsImV4cCI6MTYwNzk5MDcyN30.7SoHaX1YSfn0-9mBTpSDy58VjrHcVj1yI8I-1KzowkA\",\n  { apiUrl: API_URL + \"/cubejs-api/v1\" }\n);\n\nconst renderChart = (Component, pivotConfig) => ({ resultSet, error }) => {\n  return (\n    (resultSet && (\n      <Component resultSet={resultSet} pivotConfig={pivotConfig} />\n    )) ||\n    (error && error.toString()) || <Spin />\n  );\n};\n\nconst ChartRenderer = () => {\n  return (\n    <QueryRenderer\n      query={{\n        dimensions: [\"Application.appRef\"],\n        timeDimensions: [],\n        order: {\n          \"Application.appRef\": \"asc\",\n        },\n        measures: [\"Application.appliedValue\"],\n        filters: [],\n      }}\n      cubejsApi={cubejsApi}\n      render={renderChart(barRender, {\n        x: [\"Application.appRef\"],\n        y: [\"measures\"],\n        fillMissingDates: true,\n        joinDateRange: false,\n      })}\n    />\n  );\n};\n\nexport default ChartRenderer;\n","/home/developer/Wpm/wpm-frontend/src/components/commercial/ValueCompleteByWeek.js",["474","475"],"import React from \"react\";\nimport cubejs from \"@cubejs-client/core\";\nimport { QueryRenderer } from \"@cubejs-client/react\";\nimport { Spin } from \"antd\";\nimport { Line, Bar, Pie } from \"react-chartjs-2\";\nimport { DateTime } from \"luxon\";\n\n\nconst COLORS_SERIES = [\"#141446\", \"#FF6492\", \"#7A77FF\"];\n\nconst thisWeek = DateTime.fromJSDate(new Date()).weekNumber;\n\n\nconst barRender = ({ resultSet }) => {\n  const data = {\n    labels: resultSet.categories().map((c) => c.category),\n    datasets: resultSet.series().map((s, index) => ({\n      label: s.title,\n      data: s.series.map((r) => r.value),\n      backgroundColor: COLORS_SERIES[index],\n      fill: false,\n    })),\n  };\n  const options = {\n    scales: { xAxes: [{ stacked: true }] },\n  };\n  return <Bar data={data} options={options} />;\n};\n\nconst API_URL = \"http://localhost:4000\"; // change to your actual endpoint\n\nconst cubejsApi = cubejs(\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MDc5MDQzMjcsImV4cCI6MTYwNzk5MDcyN30.7SoHaX1YSfn0-9mBTpSDy58VjrHcVj1yI8I-1KzowkA\",\n  { apiUrl: API_URL + \"/cubejs-api/v1\" }\n);\n\nconst renderChart = (Component, pivotConfig) => ({ resultSet, error }) => {\n  return (\n    (resultSet && (\n      <Component resultSet={resultSet} pivotConfig={pivotConfig} />\n    )) ||\n    (error && error.toString()) || <Spin />\n  );\n};\n\nconst ChartRenderer = () => {\n  return (\n    <QueryRenderer\n      query={{\n        dimensions: [\"Worksheet.isoWeek\"],\n        timeDimensions: [],\n        order: {\n          \"Worksheet.isoWeek\": \"asc\",\n        },\n        measures: [\"Worksheet.valueComplete\"],\n        filters: [\n          {\n            dimension: \"Worksheet.isoWeek\",\n            operator: \"gte\",\n            values: [(thisWeek - 12).toString()],\n          },\n          {\n            dimension: \"Worksheet.isoYear\",\n            operator: \"equals\",\n            values: [\"2020\"],\n          },\n        ],\n      }}\n      cubejsApi={cubejsApi}\n      render={renderChart(barRender, {\n        x: [\"Worksheet.isoWeek\"],\n        y: [\"measures\"],\n       \n      })}\n    />\n  );\n};\n\nexport default ChartRenderer;\n","/home/developer/Wpm/wpm-frontend/src/components/commercial/ValueCompleteByWorkInstruction.js",["476","477"],"import React from \"react\";\nimport cubejs from \"@cubejs-client/core\";\nimport { QueryRenderer } from \"@cubejs-client/react\";\nimport { Spin } from \"antd\";\nimport { Line, Bar, Pie } from \"react-chartjs-2\";\n\nconst COLORS_SERIES = [\"grey\",  \"#FF6492\", \"#141446\", \"#7A77FF\"];\n\nconst barRender = ({ resultSet }) => {\n  const data = {\n    labels: resultSet.categories().map((c) => c.category),\n    datasets: resultSet.series().map((s, index) => ({\n      label: s.title,\n      data: s.series.map((r) => r.value),\n      backgroundColor: COLORS_SERIES[index],\n      fill: false,\n    })),\n  };\n  const options = {\n    scales: { xAxes: [{ stacked: true }] },\n  };\n  return <Bar data={data} options={options} />;\n};\n\nconst API_URL = \"http://localhost:4000\"; // change to your actual endpoint\n\nconst cubejsApi = cubejs(\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MDc5MDQzMjcsImV4cCI6MTYwNzk5MDcyN30.7SoHaX1YSfn0-9mBTpSDy58VjrHcVj1yI8I-1KzowkA\",\n  { apiUrl: API_URL + \"/cubejs-api/v1\" }\n);\n\nconst renderChart = (Component, pivotConfig) => ({ resultSet, error }) => {\n  return (\n    (resultSet && (\n      <Component resultSet={resultSet} pivotConfig={pivotConfig} />\n    )) ||\n    (error && error.toString()) || <Spin />\n  );\n};\n\nconst ValueCompleteByWorkInstruction = () => {\n  return (\n    <QueryRenderer\n      query={{\n        dimensions: [\"Orderheader.workInstruction\"],\n        timeDimensions: [],\n        order: {\n          \"Orderheader.workInstruction\": \"asc\",\n        },\n        measures: [\"Orderheader.valueComplete\"],\n        filters: [\n          {\n            dimension: \"Orderheader.valueComplete\",\n            operator: \"gt\",\n            values: [\"0\"],\n          },\n        ],\n      }}\n      cubejsApi={cubejsApi}\n      render={renderChart(barRender, {\n        x: [\"Orderheader.workInstruction\"],\n        y: [\"measures\"],\n        fillMissingDates: true,\n        joinDateRange: false,\n      })}\n    />\n  );\n};\n\nexport default ValueCompleteByWorkInstruction;\n","/home/developer/Wpm/wpm-frontend/src/components/charts/WeeklyWorkDoneByArea_copy.js",["478","479","480","481","482","483","484","485","486"],"import React from \"react\";\nimport cubejs from \"@cubejs-client/core\";\nimport { QueryRenderer } from \"@cubejs-client/react\";\nimport { Spin } from \"antd\";\nimport {\n  CartesianGrid,\n  PieChart,\n  Pie,\n  Cell,\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  Legend,\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n} from \"recharts\";\nimport { Card } from \"react-bootstrap\";\n\nconst CartesianChart = ({ resultSet, children, ChartComponent }) => (\n  <ResponsiveContainer height={375} width=\"100%\">\n    <ChartComponent\n      data={resultSet.chartPivot()}\n      margin={{\n        top: 0,\n        right: 0,\n        left: 0,\n        bottom: 15,\n      }}\n    >\n      <XAxis\n        dataKey=\"x\"\n        label={{ value: \"Area\", position: \"bottom\", offset: 0 }}\n      />\n      <YAxis />\n      <CartesianGrid />\n      {children}\n      {/* <Legend /> */}\n      <Tooltip />\n    </ChartComponent>\n  </ResponsiveContainer>\n);\n\nconst colors = [\"#FF6492\", \"#141446\", \"#7A77FF\"];\n\nconst barRender = ({ resultSet }) => (\n  <CartesianChart resultSet={resultSet} ChartComponent={BarChart}>\n    {resultSet.seriesNames().map((series, i) => (\n      <Bar\n        //  key={series.key}\n        //  stackId=\"a\"\n        dataKey={series.key}\n        //  name={series.title}\n        fill=\"hsl(235, 94%, 25%)\"\n      />\n    ))}\n  </CartesianChart>\n);\n\nconst API_URL = \"http://localhost:4000\"; // change to your actual endpoint\n\nconst cubejsApi = cubejs(\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MDc5MDQzMjcsImV4cCI6MTYwNzk5MDcyN30.7SoHaX1YSfn0-9mBTpSDy58VjrHcVj1yI8I-1KzowkA\",\n  { apiUrl: API_URL + \"/cubejs-api/v1\" }\n);\n\nconst renderChart = (Component, pivotConfig) => ({ resultSet, error }) => {\n  return (\n    (resultSet && (\n      <Component resultSet={resultSet} pivotConfig={pivotConfig} />\n    )) ||\n    (error && error.toString()) || <Spin />\n  );\n};\n\nconst ChartRenderer = (props) => {\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title style={{ textAlign: \"center\", fontWeight: \"bold\" }}>\n          Weekly Value By Area\n        </Card.Title>\n        <QueryRenderer\n          query={{\n            dimensions: [\"Area.areaDescription\"],\n            timeDimensions: [],\n            order: {},\n            measures: [\"Worksheet.valueComplete\"],\n            filters: [\n              {\n                dimension: \"Worksheet.isoYear\",\n                operator: \"equals\",\n                values: [props.year.toString()],\n              },\n              {\n                dimension: \"Worksheet.isoWeek\",\n                operator: \"equals\",\n                values: [props.week.toString()],\n              },\n            ],\n          }}\n          cubejsApi={cubejsApi}\n          render={renderChart(barRender, {\n            x: [],\n            y: [\"Area.areaDescription\", \"measures\"],\n            fillMissingDates: true,\n            joinDateRange: false,\n          })}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default ChartRenderer;\n","/home/developer/Wpm/wpm-frontend/src/components/charts/WeeklyWorkDoneBySupervisor_copy.js",["487","488","489","490","491","492","493","494"],"import React from \"react\";\nimport cubejs from \"@cubejs-client/core\";\nimport { QueryRenderer } from \"@cubejs-client/react\";\nimport { Spin } from \"antd\";\nimport {\n  CartesianGrid,\n  PieChart,\n  Pie,\n  Cell,\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  Legend,\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n} from \"recharts\";\nimport { Card } from \"react-bootstrap\";\n\n\nconst CartesianChart = ({ resultSet, children, ChartComponent }) => (\n  <ResponsiveContainer width=\"100%\" height={350}>\n    <ChartComponent\n      data={resultSet.chartPivot()}\n      margin={{\n        top: 0,\n        right: 0,\n        left: 0,\n        bottom: 15,\n      }}\n    >\n      <XAxis\n        dataKey=\"x\"\n        label={{ value: \"Supervisor\", position: \"bottom\", offset: 0 }}\n      />\n      <YAxis />\n      <CartesianGrid />\n      {children}\n      {/* <Legend /> */}\n      <Tooltip />\n    </ChartComponent>\n  </ResponsiveContainer>\n);\n\nconst colors = [\"#FF6492\", \"#141446\", \"#7A77FF\"];\n\nconst barRender = ({ resultSet }) => (\n  <CartesianChart resultSet={resultSet} ChartComponent={BarChart}>\n    {resultSet.seriesNames().map((series, i) => (\n      <Bar\n        // key={series.key}\n        // stackId=\"a\"\n        dataKey={series.key}\n        //  name={series.title}\n        fill=\"hsl(180, 50%, 15%)\"\n      />\n    ))}\n  </CartesianChart>\n);\n\nconst API_URL = \"http://localhost:4000\"; // change to your actual endpoint\n\nconst cubejsApi = cubejs(\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MDc5MTEwNDcsImV4cCI6MTYwNzk5NzQ0N30.yzUSBzjlKKcXFx2HodJ3tahJeXC16blQtG-QC6QbmIY\",\n  { apiUrl: API_URL + \"/cubejs-api/v1\" }\n);\n\nconst renderChart = (Component, pivotConfig) => ({ resultSet, error }) => {\n  return (\n    (resultSet && (\n      <Component resultSet={resultSet} pivotConfig={pivotConfig} />\n    )) ||\n    (error && error.toString()) || <Spin />\n  );\n};\n\nconst ChartRenderer = (props) => {\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title style={{ textAlign: \"center\", fontWeight: \"bold\" }}>\n          Weekly Value By Supervisor\n        </Card.Title>\n        <QueryRenderer\n          query={{\n            dimensions: [\"Supervisor.fullName\"],\n            timeDimensions: [],\n            order: {},\n            measures: [\"Worksheet.valueComplete\"],\n            filters: [\n              {\n                dimension: \"Worksheet.isoYear\",\n                operator: \"equals\",\n                values: [props.year.toString()],\n              },\n              {\n                dimension: \"Worksheet.isoWeek\",\n                operator: \"equals\",\n                values: [props.week.toString()],\n              },\n            ],\n          }}\n          cubejsApi={cubejsApi}\n          render={renderChart(barRender, {\n            x: [],\n            y: [\"Supervisor.fullName\", \"measures\"],\n            fillMissingDates: true,\n            joinDateRange: false,\n          })}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default ChartRenderer;\n","/home/developer/Wpm/wpm-frontend/src/components/charts/WeeklyWorkDoneByWorkInstruction_copy.js",["495","496","497","498","499","500","501","502","503"],"import React from \"react\";\nimport cubejs from \"@cubejs-client/core\";\nimport { QueryRenderer } from \"@cubejs-client/react\";\nimport { Spin } from \"antd\";\nimport {\n  CartesianGrid,\n  PieChart,\n  Pie,\n  Cell,\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  Legend,\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n} from \"recharts\";\nimport { Card } from \"react-bootstrap\";\n\nconst CartesianChart = ({ resultSet, children, ChartComponent }) => (\n  <ResponsiveContainer width=\"100%\" height={350}>\n    <ChartComponent\n      data={resultSet.chartPivot()}\n      margin={{\n        top: 0,\n        right: 0,\n        left: 0,\n        bottom: 15,\n      }}\n    >\n      <XAxis\n        dataKey=\"x\"\n        label={{ value: \"Work Instruction\", position: \"bottom\", offset: 0 }}\n      />\n      <YAxis />\n      <CartesianGrid />\n      {children}\n      {/* <Legend /> */}\n      <Tooltip />\n    </ChartComponent>\n  </ResponsiveContainer>\n);\n\nconst colors = [\"#FF6492\", \"#141446\", \"#7A77FF\"];\n\nconst barRender = ({ resultSet }) => (\n  <CartesianChart resultSet={resultSet} ChartComponent={BarChart}>\n    {resultSet.seriesNames().map((series, i) => (\n      <Bar\n        // key={series.key}\n        // stackId=\"a\"\n        dataKey={series.key}\n        //  name={series.title}\n        fill=\"hsl(0, 0%, 25%)\"\n      />\n    ))}\n  </CartesianChart>\n);\n\nconst API_URL = \"http://localhost:4000\"; // change to your actual endpoint\n\nconst cubejsApi = cubejs(\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MDc5MTEwNDcsImV4cCI6MTYwNzk5NzQ0N30.yzUSBzjlKKcXFx2HodJ3tahJeXC16blQtG-QC6QbmIY\",\n  { apiUrl: API_URL + \"/cubejs-api/v1\" }\n);\n\nconst renderChart = (Component, pivotConfig) => ({ resultSet, error }) => {\n  return (\n    (resultSet && (\n      <Component resultSet={resultSet} pivotConfig={pivotConfig} />\n    )) ||\n    (error && error.toString()) || <Spin />\n  );\n};\n\nconst ChartRenderer = (props) => {\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title style={{ textAlign: \"center\", fontWeight: \"bold\" }}>\n          Weekly Value By Work Instruction\n        </Card.Title>\n        <QueryRenderer\n          query={{\n            measures: [\"Worksheet.valueComplete\"],\n            timeDimensions: [],\n            order: {\n              \"Worksheet.valueComplete\": \"desc\",\n            },\n            dimensions: [\"Orderheader.workInstruction\"],\n            filters: [\n              {\n                dimension: \"Worksheet.isoYear\",\n                operator: \"equals\",\n                values: [props.year.toString()],\n              },\n              {\n                dimension: \"Worksheet.isoWeek\",\n                operator: \"equals\",\n                values: [props.week.toString()],\n              },\n            ],\n          }}\n          cubejsApi={cubejsApi}\n          render={renderChart(barRender, {\n            x: [\"Orderheader.workInstruction\"],\n            y: [\"measures\"],\n            fillMissingDates: true,\n            joinDateRange: false,\n          })}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default ChartRenderer;\n","/home/developer/Wpm/wpm-frontend/src/components/charts/WeeklyWorkDoneByWorkType_copy.js",["504","505","506","507","508","509","510","511","512"],"import React from \"react\";\nimport cubejs from \"@cubejs-client/core\";\nimport { QueryRenderer } from \"@cubejs-client/react\";\nimport { Spin } from \"antd\";\nimport {\n  CartesianGrid,\n  PieChart,\n  Pie,\n  Cell,\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  Legend,\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n} from \"recharts\";\nimport { Card } from \"react-bootstrap\";\n\nconst CartesianChart = ({ resultSet, children, ChartComponent }) => (\n  <ResponsiveContainer width=\"100%\" height={350}>\n    <ChartComponent\n      data={resultSet.chartPivot()}\n      margin={{\n        top: 0,\n        right: 0,\n        left: 0,\n        bottom: 15,\n      }}\n    >\n      <XAxis\n        dataKey=\"x\"\n        label={{ value: \"Work Type\", position: \"bottom\", offset: 0 }}\n      />\n      <YAxis />\n      <CartesianGrid />\n      {children}\n      {/* <Legend /> */}\n      <Tooltip />\n    </ChartComponent>\n  </ResponsiveContainer>\n);\n\nconst colors = [\"#FF6492\", \"#141446\", \"#7A77FF\"];\n\nconst barRender = ({ resultSet }) => (\n  <CartesianChart resultSet={resultSet} ChartComponent={BarChart}>\n    {resultSet.seriesNames().map((series, i) => (\n      <Bar\n        // key={series.key}\n        // stackId=\"a\"\n        dataKey={series.key}\n        //  name={series.title}\n        fill=\"hsl(300, 79%, 11%)\"\n      />\n    ))}\n  </CartesianChart>\n);\n\nconst API_URL = \"http://localhost:4000\"; // change to your actual endpoint\n\nconst cubejsApi = cubejs(\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MDc5MTEwNDcsImV4cCI6MTYwNzk5NzQ0N30.yzUSBzjlKKcXFx2HodJ3tahJeXC16blQtG-QC6QbmIY\",\n  { apiUrl: API_URL + \"/cubejs-api/v1\" }\n);\n\nconst renderChart = (Component, pivotConfig) => ({ resultSet, error }) => {\n  return (\n    (resultSet && (\n      <Component resultSet={resultSet} pivotConfig={pivotConfig} />\n    )) ||\n    (error && error.toString()) || <Spin />\n  );\n};\n\nconst ChartRenderer = (props) => {\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title style={{ textAlign: \"center\", fontWeight: \"bold\" }}>\n          Weekly Value By Work Type\n        </Card.Title>\n        <QueryRenderer\n          query={{\n            measures: [\"Worksheet.valueComplete\"],\n            timeDimensions: [],\n            order: {\n              \"Worksheet.valueComplete\": \"desc\",\n            },\n            dimensions: [\"Worktype.workTypeDescription\"],\n            filters: [\n              {\n                dimension: \"Worksheet.isoYear\",\n                operator: \"equals\",\n                values: [props.year.toString()],\n              },\n              {\n                dimension: \"Worksheet.isoWeek\",\n                operator: \"equals\",\n                values: [props.week.toString()],\n              },\n            ],\n          }}\n          cubejsApi={cubejsApi}\n          render={renderChart(barRender, {\n            x: [\"Worktype.workTypeDescription\"],\n            y: [\"measures\"],\n            fillMissingDates: true,\n            joinDateRange: false,\n          })}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default ChartRenderer;\n","/home/developer/Wpm/wpm-frontend/src/components/workload/Workload_copy.js",["513"],"/home/developer/Wpm/wpm-frontend/src/components/workload/WorkloadCharts_copy.js",[],"/home/developer/Wpm/wpm-frontend/src/components/workload/WorkloadSummary_copy.js",["514"],{"ruleId":"515","replacedBy":"516"},{"ruleId":"517","replacedBy":"518"},{"ruleId":"519","severity":1,"message":"520","line":24,"column":10,"nodeType":"521","messageId":"522","endLine":24,"endColumn":32},{"ruleId":"519","severity":1,"message":"523","line":1,"column":10,"nodeType":"521","messageId":"522","endLine":1,"endColumn":26},{"ruleId":"519","severity":1,"message":"524","line":2,"column":8,"nodeType":"521","messageId":"522","endLine":2,"endColumn":21},{"ruleId":"519","severity":1,"message":"525","line":3,"column":10,"nodeType":"521","messageId":"522","endLine":3,"endColumn":24},{"ruleId":"519","severity":1,"message":"523","line":1,"column":10,"nodeType":"521","messageId":"522","endLine":1,"endColumn":26},{"ruleId":"519","severity":1,"message":"524","line":2,"column":8,"nodeType":"521","messageId":"522","endLine":2,"endColumn":21},{"ruleId":"519","severity":1,"message":"523","line":2,"column":3,"nodeType":"521","messageId":"522","endLine":2,"endColumn":19},{"ruleId":"519","severity":1,"message":"524","line":6,"column":8,"nodeType":"521","messageId":"522","endLine":6,"endColumn":21},{"ruleId":"519","severity":1,"message":"526","line":13,"column":3,"nodeType":"521","messageId":"522","endLine":13,"endColumn":23},{"ruleId":"519","severity":1,"message":"527","line":9,"column":10,"nodeType":"521","messageId":"522","endLine":9,"endColumn":17},{"ruleId":"519","severity":1,"message":"528","line":86,"column":11,"nodeType":"521","messageId":"522","endLine":86,"endColumn":19},{"ruleId":"519","severity":1,"message":"528","line":125,"column":11,"nodeType":"521","messageId":"522","endLine":125,"endColumn":19},{"ruleId":"519","severity":1,"message":"528","line":277,"column":11,"nodeType":"521","messageId":"522","endLine":277,"endColumn":19},{"ruleId":"519","severity":1,"message":"528","line":418,"column":11,"nodeType":"521","messageId":"522","endLine":418,"endColumn":19},{"ruleId":"519","severity":1,"message":"529","line":22,"column":7,"nodeType":"521","messageId":"522","endLine":22,"endColumn":16},{"ruleId":"519","severity":1,"message":"530","line":31,"column":9,"nodeType":"521","messageId":"522","endLine":31,"endColumn":13},{"ruleId":"519","severity":1,"message":"531","line":31,"column":15,"nodeType":"521","messageId":"522","endLine":31,"endColumn":22},{"ruleId":"519","severity":1,"message":"532","line":39,"column":8,"nodeType":"521","messageId":"522","endLine":39,"endColumn":15},{"ruleId":"519","severity":1,"message":"533","line":104,"column":10,"nodeType":"521","messageId":"522","endLine":104,"endColumn":30},{"ruleId":"519","severity":1,"message":"534","line":7,"column":10,"nodeType":"521","messageId":"522","endLine":7,"endColumn":37},{"ruleId":"519","severity":1,"message":"535","line":10,"column":10,"nodeType":"521","messageId":"522","endLine":10,"endColumn":23},{"ruleId":"519","severity":1,"message":"536","line":21,"column":10,"nodeType":"521","messageId":"522","endLine":21,"endColumn":17},{"ruleId":"519","severity":1,"message":"537","line":1,"column":8,"nodeType":"521","messageId":"522","endLine":1,"endColumn":12},{"ruleId":"519","severity":1,"message":"538","line":2,"column":8,"nodeType":"521","messageId":"522","endLine":2,"endColumn":14},{"ruleId":"519","severity":1,"message":"539","line":3,"column":8,"nodeType":"521","messageId":"522","endLine":3,"endColumn":28},{"ruleId":"519","severity":1,"message":"540","line":4,"column":8,"nodeType":"521","messageId":"522","endLine":4,"endColumn":24},{"ruleId":"519","severity":1,"message":"541","line":5,"column":10,"nodeType":"521","messageId":"522","endLine":5,"endColumn":18},{"ruleId":"519","severity":1,"message":"542","line":5,"column":20,"nodeType":"521","messageId":"522","endLine":5,"endColumn":24},{"ruleId":"519","severity":1,"message":"543","line":18,"column":8,"nodeType":"521","messageId":"522","endLine":18,"endColumn":15},{"ruleId":"519","severity":1,"message":"544","line":19,"column":8,"nodeType":"521","messageId":"522","endLine":19,"endColumn":14},{"ruleId":"519","severity":1,"message":"545","line":9,"column":3,"nodeType":"521","messageId":"522","endLine":9,"endColumn":12},{"ruleId":"519","severity":1,"message":"546","line":19,"column":8,"nodeType":"521","messageId":"522","endLine":19,"endColumn":28},{"ruleId":"519","severity":1,"message":"547","line":20,"column":8,"nodeType":"521","messageId":"522","endLine":20,"endColumn":27},{"ruleId":"519","severity":1,"message":"548","line":9,"column":46,"nodeType":"521","messageId":"522","endLine":9,"endColumn":71},{"ruleId":"519","severity":1,"message":"549","line":10,"column":10,"nodeType":"521","messageId":"522","endLine":10,"endColumn":29},{"ruleId":"550","severity":1,"message":"551","line":30,"column":39,"nodeType":"552","messageId":"553","endLine":30,"endColumn":41},{"ruleId":"550","severity":1,"message":"551","line":35,"column":29,"nodeType":"552","messageId":"553","endLine":35,"endColumn":31},{"ruleId":"550","severity":1,"message":"551","line":43,"column":31,"nodeType":"552","messageId":"553","endLine":43,"endColumn":33},{"ruleId":"519","severity":1,"message":"554","line":49,"column":3,"nodeType":"521","messageId":"522","endLine":49,"endColumn":26},{"ruleId":"519","severity":1,"message":"555","line":1120,"column":33,"nodeType":"521","messageId":"522","endLine":1120,"endColumn":40},{"ruleId":"519","severity":1,"message":"556","line":1120,"column":52,"nodeType":"521","messageId":"522","endLine":1120,"endColumn":54},{"ruleId":"519","severity":1,"message":"556","line":1159,"column":34,"nodeType":"521","messageId":"522","endLine":1159,"endColumn":36},{"ruleId":"519","severity":1,"message":"556","line":1168,"column":34,"nodeType":"521","messageId":"522","endLine":1168,"endColumn":36},{"ruleId":"519","severity":1,"message":"556","line":1177,"column":34,"nodeType":"521","messageId":"522","endLine":1177,"endColumn":36},{"ruleId":"519","severity":1,"message":"556","line":1187,"column":34,"nodeType":"521","messageId":"522","endLine":1187,"endColumn":36},{"ruleId":"519","severity":1,"message":"556","line":1196,"column":34,"nodeType":"521","messageId":"522","endLine":1196,"endColumn":36},{"ruleId":"519","severity":1,"message":"556","line":1205,"column":34,"nodeType":"521","messageId":"522","endLine":1205,"endColumn":36},{"ruleId":"519","severity":1,"message":"556","line":1214,"column":34,"nodeType":"521","messageId":"522","endLine":1214,"endColumn":36},{"ruleId":"519","severity":1,"message":"557","line":20,"column":9,"nodeType":"521","messageId":"522","endLine":20,"endColumn":22},{"ruleId":"519","severity":1,"message":"558","line":21,"column":8,"nodeType":"521","messageId":"522","endLine":21,"endColumn":13},{"ruleId":"519","severity":1,"message":"534","line":5,"column":10,"nodeType":"521","messageId":"522","endLine":5,"endColumn":37},{"ruleId":"519","severity":1,"message":"559","line":7,"column":9,"nodeType":"521","messageId":"522","endLine":7,"endColumn":33},{"ruleId":"519","severity":1,"message":"560","line":15,"column":3,"nodeType":"521","messageId":"522","endLine":15,"endColumn":22},{"ruleId":"519","severity":1,"message":"561","line":17,"column":10,"nodeType":"521","messageId":"522","endLine":17,"endColumn":35},{"ruleId":"519","severity":1,"message":"562","line":52,"column":9,"nodeType":"521","messageId":"522","endLine":52,"endColumn":16},{"ruleId":"519","severity":1,"message":"563","line":54,"column":22,"nodeType":"521","messageId":"522","endLine":54,"endColumn":35},{"ruleId":"519","severity":1,"message":"564","line":61,"column":11,"nodeType":"521","messageId":"522","endLine":61,"endColumn":28},{"ruleId":"519","severity":1,"message":"565","line":65,"column":11,"nodeType":"521","messageId":"522","endLine":65,"endColumn":25},{"ruleId":"519","severity":1,"message":"566","line":7,"column":8,"nodeType":"521","messageId":"522","endLine":7,"endColumn":16},{"ruleId":"567","severity":1,"message":"568","line":4,"column":1,"nodeType":"569","endLine":12,"endColumn":3},{"ruleId":"519","severity":1,"message":"570","line":9,"column":10,"nodeType":"521","messageId":"522","endLine":9,"endColumn":25},{"ruleId":"519","severity":1,"message":"571","line":11,"column":10,"nodeType":"521","messageId":"522","endLine":11,"endColumn":20},{"ruleId":"519","severity":1,"message":"572","line":32,"column":33,"nodeType":"521","messageId":"522","endLine":32,"endColumn":39},{"ruleId":"519","severity":1,"message":"573","line":49,"column":42,"nodeType":"521","messageId":"522","endLine":49,"endColumn":51},{"ruleId":"519","severity":1,"message":"574","line":7,"column":3,"nodeType":"521","messageId":"522","endLine":7,"endColumn":11},{"ruleId":"519","severity":1,"message":"575","line":8,"column":3,"nodeType":"521","messageId":"522","endLine":8,"endColumn":6},{"ruleId":"519","severity":1,"message":"576","line":9,"column":3,"nodeType":"521","messageId":"522","endLine":9,"endColumn":7},{"ruleId":"519","severity":1,"message":"577","line":10,"column":3,"nodeType":"521","messageId":"522","endLine":10,"endColumn":12},{"ruleId":"519","severity":1,"message":"578","line":11,"column":3,"nodeType":"521","messageId":"522","endLine":11,"endColumn":7},{"ruleId":"519","severity":1,"message":"579","line":19,"column":3,"nodeType":"521","messageId":"522","endLine":19,"endColumn":12},{"ruleId":"519","severity":1,"message":"580","line":20,"column":3,"nodeType":"521","messageId":"522","endLine":20,"endColumn":7},{"ruleId":"519","severity":1,"message":"581","line":7,"column":8,"nodeType":"521","messageId":"522","endLine":7,"endColumn":13},{"ruleId":"519","severity":1,"message":"582","line":8,"column":23,"nodeType":"521","messageId":"522","endLine":8,"endColumn":50},{"ruleId":"519","severity":1,"message":"572","line":33,"column":33,"nodeType":"521","messageId":"522","endLine":33,"endColumn":39},{"ruleId":"519","severity":1,"message":"583","line":35,"column":9,"nodeType":"521","messageId":"522","endLine":35,"endColumn":17},{"ruleId":"519","severity":1,"message":"584","line":35,"column":19,"nodeType":"521","messageId":"522","endLine":35,"endColumn":30},{"ruleId":"585","severity":1,"message":"586","line":47,"column":19,"nodeType":"587","messageId":"588","endLine":47,"endColumn":31,"fix":"589"},{"ruleId":"519","severity":1,"message":"534","line":11,"column":10,"nodeType":"521","messageId":"522","endLine":11,"endColumn":37},{"ruleId":"519","severity":1,"message":"590","line":12,"column":10,"nodeType":"521","messageId":"522","endLine":12,"endColumn":28},{"ruleId":"519","severity":1,"message":"582","line":16,"column":3,"nodeType":"521","messageId":"522","endLine":16,"endColumn":30},{"ruleId":"519","severity":1,"message":"591","line":25,"column":3,"nodeType":"521","messageId":"522","endLine":25,"endColumn":19},{"ruleId":"519","severity":1,"message":"592","line":48,"column":10,"nodeType":"521","messageId":"522","endLine":48,"endColumn":20},{"ruleId":"519","severity":1,"message":"563","line":90,"column":22,"nodeType":"521","messageId":"522","endLine":90,"endColumn":35},{"ruleId":"519","severity":1,"message":"593","line":24,"column":9,"nodeType":"521","messageId":"522","endLine":24,"endColumn":20},{"ruleId":"519","severity":1,"message":"594","line":25,"column":9,"nodeType":"521","messageId":"522","endLine":25,"endColumn":20},{"ruleId":"519","severity":1,"message":"593","line":24,"column":9,"nodeType":"521","messageId":"522","endLine":24,"endColumn":20},{"ruleId":"519","severity":1,"message":"594","line":25,"column":9,"nodeType":"521","messageId":"522","endLine":25,"endColumn":20},{"ruleId":"519","severity":1,"message":"593","line":24,"column":9,"nodeType":"521","messageId":"522","endLine":24,"endColumn":20},{"ruleId":"519","severity":1,"message":"594","line":25,"column":9,"nodeType":"521","messageId":"522","endLine":25,"endColumn":20},{"ruleId":"519","severity":1,"message":"593","line":24,"column":9,"nodeType":"521","messageId":"522","endLine":24,"endColumn":20},{"ruleId":"519","severity":1,"message":"594","line":25,"column":9,"nodeType":"521","messageId":"522","endLine":25,"endColumn":20},{"ruleId":"519","severity":1,"message":"542","line":5,"column":9,"nodeType":"521","messageId":"522","endLine":5,"endColumn":13},{"ruleId":"519","severity":1,"message":"574","line":8,"column":3,"nodeType":"521","messageId":"522","endLine":8,"endColumn":11},{"ruleId":"519","severity":1,"message":"575","line":9,"column":3,"nodeType":"521","messageId":"522","endLine":9,"endColumn":6},{"ruleId":"519","severity":1,"message":"576","line":10,"column":3,"nodeType":"521","messageId":"522","endLine":10,"endColumn":7},{"ruleId":"519","severity":1,"message":"577","line":11,"column":3,"nodeType":"521","messageId":"522","endLine":11,"endColumn":12},{"ruleId":"519","severity":1,"message":"578","line":12,"column":3,"nodeType":"521","messageId":"522","endLine":12,"endColumn":7},{"ruleId":"519","severity":1,"message":"579","line":20,"column":3,"nodeType":"521","messageId":"522","endLine":20,"endColumn":12},{"ruleId":"519","severity":1,"message":"580","line":21,"column":3,"nodeType":"521","messageId":"522","endLine":21,"endColumn":7},{"ruleId":"519","severity":1,"message":"595","line":1,"column":17,"nodeType":"521","messageId":"522","endLine":1,"endColumn":26},{"ruleId":"519","severity":1,"message":"596","line":1,"column":28,"nodeType":"521","messageId":"522","endLine":1,"endColumn":36},{"ruleId":"519","severity":1,"message":"580","line":5,"column":10,"nodeType":"521","messageId":"522","endLine":5,"endColumn":14},{"ruleId":"519","severity":1,"message":"575","line":5,"column":21,"nodeType":"521","messageId":"522","endLine":5,"endColumn":24},{"ruleId":"519","severity":1,"message":"580","line":5,"column":10,"nodeType":"521","messageId":"522","endLine":5,"endColumn":14},{"ruleId":"519","severity":1,"message":"575","line":5,"column":21,"nodeType":"521","messageId":"522","endLine":5,"endColumn":24},{"ruleId":"519","severity":1,"message":"580","line":5,"column":10,"nodeType":"521","messageId":"522","endLine":5,"endColumn":14},{"ruleId":"519","severity":1,"message":"575","line":5,"column":21,"nodeType":"521","messageId":"522","endLine":5,"endColumn":24},{"ruleId":"519","severity":1,"message":"574","line":7,"column":3,"nodeType":"521","messageId":"522","endLine":7,"endColumn":11},{"ruleId":"519","severity":1,"message":"575","line":8,"column":3,"nodeType":"521","messageId":"522","endLine":8,"endColumn":6},{"ruleId":"519","severity":1,"message":"576","line":9,"column":3,"nodeType":"521","messageId":"522","endLine":9,"endColumn":7},{"ruleId":"519","severity":1,"message":"577","line":10,"column":3,"nodeType":"521","messageId":"522","endLine":10,"endColumn":12},{"ruleId":"519","severity":1,"message":"578","line":11,"column":3,"nodeType":"521","messageId":"522","endLine":11,"endColumn":7},{"ruleId":"519","severity":1,"message":"597","line":16,"column":3,"nodeType":"521","messageId":"522","endLine":16,"endColumn":9},{"ruleId":"519","severity":1,"message":"579","line":19,"column":3,"nodeType":"521","messageId":"522","endLine":19,"endColumn":12},{"ruleId":"519","severity":1,"message":"580","line":20,"column":3,"nodeType":"521","messageId":"522","endLine":20,"endColumn":7},{"ruleId":"519","severity":1,"message":"598","line":48,"column":7,"nodeType":"521","messageId":"522","endLine":48,"endColumn":13},{"ruleId":"519","severity":1,"message":"574","line":7,"column":3,"nodeType":"521","messageId":"522","endLine":7,"endColumn":11},{"ruleId":"519","severity":1,"message":"575","line":8,"column":3,"nodeType":"521","messageId":"522","endLine":8,"endColumn":6},{"ruleId":"519","severity":1,"message":"576","line":9,"column":3,"nodeType":"521","messageId":"522","endLine":9,"endColumn":7},{"ruleId":"519","severity":1,"message":"577","line":10,"column":3,"nodeType":"521","messageId":"522","endLine":10,"endColumn":12},{"ruleId":"519","severity":1,"message":"578","line":11,"column":3,"nodeType":"521","messageId":"522","endLine":11,"endColumn":7},{"ruleId":"519","severity":1,"message":"597","line":16,"column":3,"nodeType":"521","messageId":"522","endLine":16,"endColumn":9},{"ruleId":"519","severity":1,"message":"579","line":19,"column":3,"nodeType":"521","messageId":"522","endLine":19,"endColumn":12},{"ruleId":"519","severity":1,"message":"580","line":20,"column":3,"nodeType":"521","messageId":"522","endLine":20,"endColumn":7},{"ruleId":"519","severity":1,"message":"574","line":7,"column":3,"nodeType":"521","messageId":"522","endLine":7,"endColumn":11},{"ruleId":"519","severity":1,"message":"575","line":8,"column":3,"nodeType":"521","messageId":"522","endLine":8,"endColumn":6},{"ruleId":"519","severity":1,"message":"576","line":9,"column":3,"nodeType":"521","messageId":"522","endLine":9,"endColumn":7},{"ruleId":"519","severity":1,"message":"577","line":10,"column":3,"nodeType":"521","messageId":"522","endLine":10,"endColumn":12},{"ruleId":"519","severity":1,"message":"578","line":11,"column":3,"nodeType":"521","messageId":"522","endLine":11,"endColumn":7},{"ruleId":"519","severity":1,"message":"597","line":16,"column":3,"nodeType":"521","messageId":"522","endLine":16,"endColumn":9},{"ruleId":"519","severity":1,"message":"579","line":19,"column":3,"nodeType":"521","messageId":"522","endLine":19,"endColumn":12},{"ruleId":"519","severity":1,"message":"580","line":20,"column":3,"nodeType":"521","messageId":"522","endLine":20,"endColumn":7},{"ruleId":"519","severity":1,"message":"598","line":48,"column":7,"nodeType":"521","messageId":"522","endLine":48,"endColumn":13},{"ruleId":"519","severity":1,"message":"574","line":7,"column":3,"nodeType":"521","messageId":"522","endLine":7,"endColumn":11},{"ruleId":"519","severity":1,"message":"575","line":8,"column":3,"nodeType":"521","messageId":"522","endLine":8,"endColumn":6},{"ruleId":"519","severity":1,"message":"576","line":9,"column":3,"nodeType":"521","messageId":"522","endLine":9,"endColumn":7},{"ruleId":"519","severity":1,"message":"577","line":10,"column":3,"nodeType":"521","messageId":"522","endLine":10,"endColumn":12},{"ruleId":"519","severity":1,"message":"578","line":11,"column":3,"nodeType":"521","messageId":"522","endLine":11,"endColumn":7},{"ruleId":"519","severity":1,"message":"597","line":16,"column":3,"nodeType":"521","messageId":"522","endLine":16,"endColumn":9},{"ruleId":"519","severity":1,"message":"579","line":19,"column":3,"nodeType":"521","messageId":"522","endLine":19,"endColumn":12},{"ruleId":"519","severity":1,"message":"580","line":20,"column":3,"nodeType":"521","messageId":"522","endLine":20,"endColumn":7},{"ruleId":"519","severity":1,"message":"598","line":48,"column":7,"nodeType":"521","messageId":"522","endLine":48,"endColumn":13},{"ruleId":"519","severity":1,"message":"599","line":62,"column":11,"nodeType":"521","messageId":"522","endLine":62,"endColumn":21},{"ruleId":"519","severity":1,"message":"581","line":7,"column":8,"nodeType":"521","messageId":"522","endLine":7,"endColumn":13},"no-native-reassign",["600"],"no-negated-in-lhs",["601"],"no-unused-vars","'InstructionHeaderSlice' is defined but never used.","Identifier","unusedVar","'createAsyncThunk' is defined but never used.","'axiosInstance' is defined but never used.","'fetchDocuments' is defined but never used.","'fetchAppInstructions' is defined but never used.","'toFixed' is defined but never used.","'response' is assigned a value but never used.","'numFormat' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'rowsRef' is assigned a value but never used.","'unitMaterialsPayable' is assigned a value but never used.","'selectAllInstructionDetails' is defined but never used.","'useEffectOnce' is defined but never used.","'gridApi' is assigned a value but never used.","'Grid' is defined but never used.","'ByDate' is defined but never used.","'AppliedByApplication' is defined but never used.","'DrillDownExample' is defined but never used.","'CardDeck' is defined but never used.","'Card' is defined but never used.","'history' is assigned a value but never used.","'params' is assigned a value but never used.","'useLatest' is defined but never used.","'CustomLoadingOverlay' is defined but never used.","'CustomNoRowsOverlay' is defined but never used.","'removeAllWorkInstructions' is defined but never used.","'removeAllWorksheets' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'fetchCurrentApplication' is defined but never used.","'onClick' is assigned a value but never used.","'id' is assigned a value but never used.","'gridColumnApi' is assigned a value but never used.","'items' is assigned a value but never used.","'selectOrderSummaryHeader' is defined but never used.","'setSelectedLocation' is defined but never used.","'selectAllWorkInstructions' is defined but never used.","'confirm' is assigned a value but never used.","'setInputValue' is assigned a value but never used.","'billItemContainer' is assigned a value but never used.","'billItemObject' is assigned a value but never used.","'dispatch' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useRendersCount' is defined but never used.","'updateData' is defined but never used.","'errors' is assigned a value but never used.","'ImageFile' is assigned a value but never used.","'PieChart' is defined but never used.","'Pie' is defined but never used.","'Cell' is defined but never used.","'AreaChart' is defined but never used.","'Area' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'Color' is defined but never used.","'selectAllInstructionHeaders' is defined but never used.","'document' is assigned a value but never used.","'setDocument' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"602","text":"603"},"'selectAllLocations' is defined but never used.","'selectedBillItem' is defined but never used.","'niceNumber' is defined but never used.","'week_number' is assigned a value but never used.","'year_number' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Legend' is defined but never used.","'colors' is assigned a value but never used.","'worksheets' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[1350,1350],"()"]